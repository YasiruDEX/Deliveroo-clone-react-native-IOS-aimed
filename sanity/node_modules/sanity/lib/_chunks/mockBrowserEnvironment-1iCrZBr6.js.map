{"version":3,"file":"mockBrowserEnvironment-1iCrZBr6.js","sources":["../../src/_internal/cli/util/mockBrowserEnvironment.ts"],"sourcesContent":["import {addHook} from 'pirates'\nimport jsdomGlobal from 'jsdom-global'\nimport resolveFrom from 'resolve-from'\nimport {register as registerESBuild} from 'esbuild-register/dist/node'\nimport {ResizeObserver} from '@juggle/resize-observer'\n\nconst jsdomDefaultHtml = `<!doctype html>\n<html>\n  <head><meta charset=\"utf-8\"></head>\n  <body></body>\n</html>`\n\nexport function mockBrowserEnvironment(basePath: string): () => void {\n  // Guard against double-registering\n  if (global && global.window && '__mockedBySanity' in global.window) {\n    return () => {\n      /* intentional noop */\n    }\n  }\n\n  const domCleanup = jsdomGlobal(jsdomDefaultHtml, {url: 'http://localhost:3333/'})\n  const windowCleanup = () => global.window.close()\n  const globalCleanup = provideFakeGlobals(basePath)\n  const cleanupFileLoader = addHook(\n    (code, filename) => `module.exports = ${JSON.stringify(filename)}`,\n    {\n      ignoreNodeModules: false,\n      exts: getFileExtensions(),\n    },\n  )\n\n  const {unregister: unregisterESBuild} = registerESBuild({\n    target: 'node18',\n    format: 'cjs',\n    extensions: ['.js', '.jsx', '.ts', '.tsx', '.mjs'],\n    jsx: 'automatic',\n  })\n\n  return function cleanupBrowserEnvironment() {\n    unregisterESBuild()\n    cleanupFileLoader()\n    globalCleanup()\n    windowCleanup()\n    domCleanup()\n  }\n}\n\nconst getFakeGlobals = (basePath: string) => ({\n  __mockedBySanity: true,\n  requestAnimationFrame: setImmediate,\n  cancelAnimationFrame: clearImmediate,\n  requestIdleCallback: setImmediate,\n  cancelIdleCallback: clearImmediate,\n  ace: tryGetAceGlobal(basePath),\n  InputEvent: global.window?.InputEvent,\n  customElements: global.window?.customElements,\n  ResizeObserver: global.window?.ResizeObserver || ResizeObserver,\n})\n\nfunction provideFakeGlobals(basePath: string): () => void {\n  const globalEnv = global as any as Record<string, unknown>\n  const globalWindow = global.window as Record<string, any>\n\n  const fakeGlobals = getFakeGlobals(basePath)\n  const stubbedGlobalKeys: string[] = []\n  const stubbedWindowKeys: string[] = []\n\n  for (const [rawKey, value] of Object.entries(fakeGlobals)) {\n    if (typeof value === 'undefined') {\n      continue\n    }\n\n    const key = rawKey as keyof typeof fakeGlobals\n\n    if (!(key in globalEnv)) {\n      globalEnv[key] = fakeGlobals[key]\n      stubbedGlobalKeys.push(key)\n    }\n\n    if (!(key in global.window)) {\n      globalWindow[key] = fakeGlobals[key]\n      stubbedWindowKeys.push(key)\n    }\n  }\n\n  return () => {\n    stubbedGlobalKeys.forEach((key) => {\n      delete globalEnv[key]\n    })\n\n    stubbedWindowKeys.forEach((key) => {\n      delete globalWindow[key]\n    })\n  }\n}\n\nfunction tryGetAceGlobal(basePath: string) {\n  // Work around an issue where using the @sanity/code-input plugin would crash\n  // due to `ace` not being defined on the global due to odd bundling stategy.\n  const acePath = resolveFrom.silent(basePath, 'ace-builds')\n  if (!acePath) {\n    return undefined\n  }\n\n  try {\n    // eslint-disable-next-line import/no-dynamic-require\n    return require(acePath)\n  } catch (err) {\n    return undefined\n  }\n}\n\nfunction getFileExtensions() {\n  return [\n    '.jpeg',\n    '.jpg',\n    '.png',\n    '.gif',\n    '.svg',\n    '.webp',\n    '.woff',\n    '.woff2',\n    '.ttf',\n    '.eot',\n    '.otf',\n    '.css',\n  ]\n}\n"],"names":["jsdomDefaultHtml","mockBrowserEnvironment","basePath","global","window","domCleanup","jsdomGlobal","url","windowCleanup","close","globalCleanup","provideFakeGlobals","cleanupFileLoader","addHook","code","filename","concat","JSON","stringify","ignoreNodeModules","exts","getFileExtensions","unregister","unregisterESBuild","registerESBuild","target","format","extensions","jsx","cleanupBrowserEnvironment","getFakeGlobals","_a","_b","_c","__mockedBySanity","requestAnimationFrame","setImmediate","cancelAnimationFrame","clearImmediate","requestIdleCallback","cancelIdleCallback","ace","tryGetAceGlobal","InputEvent","customElements","ResizeObserver","globalEnv","globalWindow","fakeGlobals","stubbedGlobalKeys","stubbedWindowKeys","rawKey","value","Object","entries","key","push","forEach","acePath","resolveFrom","default","silent","require","err"],"mappings":"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"}