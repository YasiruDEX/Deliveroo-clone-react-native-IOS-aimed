{"version":3,"file":"index-KR8OJFAC.js","sources":["../../src/structure/panes/userComponent/UserComponentPaneHeader.tsx","../../src/structure/panes/userComponent/UserComponentPaneContent.tsx","../../src/structure/panes/userComponent/UserComponentPane.tsx"],"sourcesContent":["import React from 'react'\nimport {ArrowLeftIcon} from '@sanity/icons'\nimport {Button} from '../../../ui-components'\nimport type {PaneMenuItem, PaneMenuItemGroup, StructureToolPaneActionHandler} from '../../types'\nimport {BackLink, PaneHeader, PaneHeaderActions} from '../../components'\nimport {useStructureTool} from '../../useStructureTool'\n\ninterface UserComponentPaneHeaderProps {\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  index: number\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  title: string\n}\n\nexport function UserComponentPaneHeader(props: UserComponentPaneHeaderProps) {\n  const {actionHandlers, index, menuItems, menuItemGroups, title} = props\n  const {features} = useStructureTool()\n\n  if (!menuItems?.length && !title) {\n    return null\n  }\n\n  return (\n    <PaneHeader\n      actions={\n        <PaneHeaderActions\n          menuItems={menuItems}\n          menuItemGroups={menuItemGroups}\n          actionHandlers={actionHandlers}\n        />\n      }\n      backButton={\n        features.backButton &&\n        index > 0 && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: 'Back'}}\n          />\n        )\n      }\n      title={title}\n    />\n  )\n}\n","import {Box} from '@sanity/ui'\nimport React from 'react'\nimport styled from 'styled-components'\nimport {usePane} from '../../components'\n\ninterface UserComponentPaneContentProps {\n  children: React.ReactNode\n}\n\nconst Root = styled(Box)`\n  position: relative;\n`\n\nexport function UserComponentPaneContent(props: UserComponentPaneContentProps) {\n  const {children} = props\n  const {collapsed} = usePane()\n\n  return (\n    <Root hidden={collapsed} height=\"fill\" overflow=\"auto\">\n      {children}\n    </Root>\n  )\n}\n","import React, {createElement, isValidElement, useState} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {Pane} from '../../components'\nimport type {StructureToolPaneActionHandler} from '../../types'\nimport type {BaseStructureToolPaneProps} from '../types'\nimport {UserComponentPaneHeader} from './UserComponentPaneHeader'\nimport {UserComponentPaneContent} from './UserComponentPaneContent'\nimport {useI18nText} from 'sanity'\n\ntype UserComponentPaneProps = BaseStructureToolPaneProps<'component'>\n\n/**\n * @internal\n */\nexport function UserComponentPane(props: UserComponentPaneProps) {\n  const {index, pane, paneKey, ...restProps} = props\n  const {\n    child,\n    component,\n    menuItems,\n    menuItemGroups,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    type: _unused,\n    ...restPane\n  } = pane\n  const [ref, setRef] = useState<{\n    actionHandlers?: Record<string, StructureToolPaneActionHandler>\n  } | null>(null)\n  const {title = ''} = useI18nText(pane)\n\n  return (\n    <Pane id={paneKey} minWidth={320} selected={restProps.isSelected}>\n      <UserComponentPaneHeader\n        actionHandlers={ref?.actionHandlers}\n        index={index}\n        menuItems={menuItems}\n        menuItemGroups={menuItemGroups}\n        title={title}\n      />\n\n      <UserComponentPaneContent>\n        {isValidElementType(component) &&\n          createElement(component, {\n            ...restProps,\n            ...restPane,\n            // NOTE: here we're utilizing the function form of refs so setting\n            // the ref causes a re-render for `UserComponentPaneHeader`\n            ...({ref: setRef} as any),\n            child: child as any, // @todo: Fix typings\n            paneKey,\n          })}\n\n        {isValidElement(component) && component}\n      </UserComponentPaneContent>\n    </Pane>\n  )\n}\n"],"names":["UserComponentPaneHeader","props","actionHandlers","index","menuItems","menuItemGroups","title","features","useStructureTool","length","jsx","PaneHeader","actions","PaneHeaderActions","backButton","Button","as","BackLink","icon","ArrowLeftIcon","mode","tooltipProps","content","_a","Root","styled","Box","__template","UserComponentPaneContent","children","collapsed","usePane","hidden","height","overflow","UserComponentPane","pane","paneKey","restProps","child","component","type","_unused","restPane","ref","setRef","useState","useI18nText","jsxs","Pane","id","minWidth","selected","isSelected","isValidElementType","createElement","isValidElement"],"mappings":";;;;;;;;;;;;;;;;AAeO,SAASA,wBAAwBC,KAAqC,EAAA;EAC3E,MAAM;IAACC,cAAgB;IAAAC,KAAA;IAAOC,SAAW;IAAAC,cAAA;IAAgBC;EAAS,CAAA,GAAAL,KAAA;EAC5D,MAAA;IAACM;GAAQ,GAAIC,gBAAiB,EAAA;EAEpC,IAAI,EAACJ,SAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAA,CAAWK,MAAU,CAAA,IAAA,CAACH,KAAO,EAAA;IACzB,OAAA,IAAA;EACT;EAGE,sBAAAI,GAAA,CAACC,UAAA,EAAA;IACCC,OACE,iBAAAF,GAAA,CAACG,iBAAA,EAAA;MACCT,SAAA;MACAC,cAAA;MACAH;IAAA,CACF,CAAA;IAEFY,UACE,EAAAP,QAAA,CAASO,UACT,IAAAX,KAAA,GAAQ,CACN,IAAA,eAAAO,GAAA,CAACK,MAAA,EAAA;MACCC,EAAI,EAAAC,QAAA;MACJ,SAAQ,EAAA,GAAA;MACRC,IAAM,EAAAC,aAAA;MACNC,IAAK,EAAA,OAAA;MACLC,YAAA,EAAc;QAACC,OAAA,EAAS;MAAM;IAAA,CAChC,CAAA;IAGJhB;EAAA,CAAA,CACF;AAEJ;;;;;;AC/CA,IAAAiB,EAAA;AASA,MAAMC,IAAO,GAAAC,MAAA,CAAOC,GAAG,CAAA,CAAVH,EAAW,KAAAA,EAAA,GAAAI,UAAA,CAAA,CAAA,2BAAA,CAAA,CAAA,CAAA,CAAA;AAIjB,SAASC,yBAAyB3B,KAAsC,EAAA;EACvE,MAAA;IAAC4B;EAAY,CAAA,GAAA5B,KAAA;EACb,MAAA;IAAC6B;GAAS,GAAIC,OAAQ,EAAA;EAG1B,OAAA,eAAArB,GAAA,CAACc;IAAKQ,MAAQ,EAAAF,SAAA;IAAWG,QAAO,MAAO;IAAAC,QAAA,EAAS;IAC7CL;EACH,CAAA,CAAA;AAEJ;ACRO,SAASM,kBAAkBlC,KAA+B,EAAA;EAC/D,MAAM;IAACE,KAAO;IAAAiC,IAAA;IAAMC,OAAS;IAAA,GAAGC;EAAa,CAAA,GAAArC,KAAA;EACvC,MAAA;IACJsC,KAAA;IACAC,SAAA;IACApC,SAAA;IACAC,cAAA;IAAA;IAEAoC,IAAM,EAAAC,OAAA;IACN,GAAGC;EACD,CAAA,GAAAP,IAAA;EACJ,MAAM,CAACQ,GAAA,EAAKC,MAAM,CAAA,GAAIC,SAEZ,IAAI,CAAA;EACd,MAAM;IAACxC,KAAA,GAAQ;EAAE,CAAA,GAAIyC,YAAYX,IAAI,CAAA;EAGnC,OAAA,eAAAY,IAAA,CAACC;IAAKC,EAAI,EAAAb,OAAA;IAASc,UAAU,GAAK;IAAAC,QAAA,EAAUd,UAAUe,UACpD;IAAAxB,QAAA,EAAA,CAAA,eAAAnB,GAAA,CAACV,uBAAA,EAAA;MACCE,gBAAgB0C,GAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,GAAA,CAAA1C,cAAA;MACrBC,KAAA;MACAC,SAAA;MACAC,cAAA;MACAC;IAAA,CACF,CAAA,EAAA,oBAECsB,wBACE,EAAA;MAAAC,QAAA,EAAA,CAAmByB,kBAAA,CAAAd,SAAS,CAC3B,IAAAe,aAAA,CAAcf,SAAW,EAAA;QACvB,GAAGF,SAAA;QACH,GAAGK,QAAA;QAAA;QAAA;QAGH,GAAI;UAACC,GAAA,EAAKC;QAAM,CAAA;QAChBN,KAAA;QAAA;QACAF;MAAA,CACD,CAAA,EAEFmB,cAAA,CAAehB,SAAS,CAAK,IAAAA,SAAA;KAChC,CAAA;EACF,CAAA,CAAA;AAEJ;"}