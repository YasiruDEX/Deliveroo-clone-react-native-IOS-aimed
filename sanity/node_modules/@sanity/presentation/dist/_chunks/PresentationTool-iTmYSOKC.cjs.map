{"version":3,"file":"PresentationTool-iTmYSOKC.cjs","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helpers.ts","../../../channels/src/controller.ts","../../../visual-editing-helpers/dist/_chunks/urlStringToPath-FefM00gz.js","../../../visual-editing-helpers/dist/index.js","../../src/lib/parse.ts","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentListPanel.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../../visual-editing-helpers/dist/hooks.js","../../src/loader/LoaderQueries.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationNavigator.tsx","../../src/useLocalState.ts","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/PreviewFrame.tsx","../../src/useDocumentsOnPage.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { ChannelMsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 1000\nexport const HANDSHAKE_INTERVAL = 500\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n  'channel/heartbeat',\n] satisfies ChannelMsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies ChannelMsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport { ChannelMsgType, HandshakeMsgType, InternalMsgType } from './types'\n\nexport const isInternalMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isLegacyHandshakeMessage = ({\n  data = {},\n}: MessageEvent): boolean => {\n  return (\n    // Check data is a record type\n    typeof data === 'object' &&\n    data !== null &&\n    !Array.isArray(data) &&\n    // The \"domain\" key was introduced in commit 4854e7f\n    !('domain' in data) &&\n    // Check the rest of the object shape is present\n    ['id', 'type', 'from', 'to'].every((key) => key in data) &&\n    // Prior to 4854e7f only handshake events were emitted prior to an established connection\n    data.type.startsWith('handshake/')\n  )\n}\n","import { v4 as uuid } from 'uuid'\n\nimport {\n  HANDSHAKE_INTERVAL,\n  HEARTBEAT_INTERVAL,\n  RESPONSE_TIMEOUT,\n} from './constants'\nimport { isHandshakeMessage, isLegacyHandshakeMessage } from './helpers'\nimport type {\n  ChannelMsg,\n  ChannelsController,\n  ChannelsControllerChannel,\n  ChannelsControllerOptions,\n  ChannelStatus,\n  InternalMsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\nexport function createChannelsController<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): ChannelsController {\n  const { destroy, send } = createChannelsControllerInternal(config)\n  const sources = new Set<MessageEventSource>()\n  const sendToSource = new WeakMap<\n    MessageEventSource,\n    ChannelsController['send']\n  >()\n  const destroySource = new Set<ChannelsController['destroy']>()\n\n  const sendToMany = ((id, type, data) => {\n    send(id, type, data)\n    for (const source of sources) {\n      if (\n        source &&\n        'closed' in source &&\n        !source.closed &&\n        sendToSource.has(source)\n      ) {\n        const send = sendToSource.get(source)\n        send!(id, type, data)\n      }\n    }\n  }) satisfies ChannelsController['send']\n\n  const destroyMany = (() => {\n    destroy()\n    for (const destroy of destroySource) {\n      destroy()\n    }\n  }) satisfies ChannelsController['destroy']\n\n  return {\n    destroy: destroyMany,\n    send: sendToMany,\n    addSource(source) {\n      if (sources.has(source)) {\n        return\n      }\n      if (!('closed' in source)) {\n        // eslint-disable-next-line no-console\n        console.warn('Source is unsupported', { source })\n        throw new Error('Source is unsupported')\n      }\n      if (source.closed) {\n        throw new Error('Source is closed')\n      }\n      const { send, destroy } = createChannelsControllerInternal({\n        ...config,\n        target: source,\n        // @TODO temporary workaround for onStatusUpdate and onEvent not differentiating\n        //       iframes from popups\n        connectTo: config.connectTo.map((prevConnectTo) => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { onStatusUpdate, onEvent, ...connectTo } = prevConnectTo\n\n          return {\n            ...connectTo,\n            onEvent: onEvent\n              ? (((type, data) => {\n                  if (\n                    type === 'preview-kit/documents' ||\n                    type === 'overlay/navigate' ||\n                    type === 'loader/documents'\n                  ) {\n                    return\n                  }\n\n                  // @ts-expect-error -- figure out ToArgs complaining\n                  return onEvent(type, data)\n                }) satisfies typeof onEvent)\n              : undefined,\n          }\n        }),\n      })\n      destroySource.add(destroy)\n      sendToSource.set(source, send)\n      sources.add(source)\n    },\n  }\n}\n\nfunction createChannelsControllerInternal<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): Omit<ChannelsController, 'addSource'> {\n  const target = config.target\n\n  const channels: ChannelsControllerChannel<T>[] = config.connectTo.map(\n    (config) => ({\n      buffer: [],\n      config,\n      id: '',\n      handler: handshakeHandler,\n      status: 'connecting',\n      interval: undefined,\n      heartbeat: undefined,\n    }),\n  )\n\n  function startHandshake(channel: ChannelsControllerChannel<T>) {\n    channel.id = uuid()\n    channel.interval = window.setInterval(() => {\n      sendHandshake(channel, 'handshake/syn', { id: channel.id })\n    }, HANDSHAKE_INTERVAL)\n  }\n\n  function stopHandshake(channel: ChannelsControllerChannel<T>) {\n    window.clearInterval(channel.interval)\n  }\n\n  function isValidMessageEvent(\n    e: MessageEvent,\n  ): e is MessageEvent<ProtocolMsg<T>> {\n    const { data, origin } = e\n    return (\n      data.domain === 'sanity/channels' &&\n      data.to == config.id &&\n      channels.map((channel) => channel.config.id).includes(data.from) &&\n      data.type !== 'channel/response' &&\n      origin === config.targetOrigin\n    )\n  }\n\n  function handshakeHandler(e: MessageEvent<ProtocolMsg<T>>) {\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel && data.type === 'handshake/syn-ack') {\n        setChannelStatus(channel, 'connected')\n        sendHandshake(channel, 'handshake/ack', { id: channel.id })\n      }\n    }\n  }\n\n  const messageHandler = (e: MessageEvent<ProtocolMsg<T>>) => {\n    const { data } = e\n    if (\n      !isHandshakeMessage(data.type) &&\n      channels.find((channel) => channel.id === data.connectionId)\n    ) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel) {\n        // eslint-disable-next-line no-warning-comments\n        // @todo Ugly type casting\n        const args = [data.type, data.data] as ToArgs<T>\n        channel.config.onEvent?.(...args)\n        config.onEvent?.(...args)\n        send(channel, 'channel/response', { responseTo: data.id }, false)\n      }\n    }\n  }\n\n  function handleEvents(e: MessageEvent<ProtocolMsg<T>>) {\n    if (isLegacyHandshakeMessage(e)) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Visual editing package mismatch detected! Please ensure you are using the latest version of Sanity Studio and any packages listed here:\\nhttps://github.com/sanity-io/visual-editing',\n      )\n      return\n    }\n\n    if (isValidMessageEvent(e)) {\n      const { data } = e\n      channels.find((channel) => channel.config.id === data.from)?.handler(e)\n    }\n  }\n\n  function flush(channel: ChannelsControllerChannel<T>) {\n    const toFlush = [...channel.buffer]\n    channel.buffer.splice(0, channel.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      send(channel, type, data)\n    })\n  }\n\n  function startHeartbeat(channel: ChannelsControllerChannel<T>) {\n    stopHeartbeat(channel)\n    if (channel.config.heartbeat) {\n      const heartbeatInverval =\n        typeof channel.config.heartbeat === 'number'\n          ? channel.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      channel.heartbeat = window.setInterval(() => {\n        send(channel, 'channel/heartbeat')\n      }, heartbeatInverval)\n    }\n  }\n\n  function stopHeartbeat(channel: ChannelsControllerChannel<T>) {\n    if (channel.heartbeat) {\n      window.clearInterval(channel.heartbeat)\n    }\n  }\n\n  function setChannelStatus(\n    channel: ChannelsControllerChannel<T>,\n    next: ChannelStatus,\n  ) {\n    channel.status = next\n    channel.config.onStatusUpdate?.(next, channel.config.id)\n    config.onStatusUpdate?.(next, channel.config.id)\n    if (next === 'connecting' || next === 'reconnecting') {\n      channel.handler = handshakeHandler\n      stopHeartbeat(channel)\n      startHandshake(channel)\n    } else if (next === 'connected') {\n      channel.handler = messageHandler\n      stopHandshake(channel)\n      startHeartbeat(channel)\n      flush(channel)\n    } else if (next === 'disconnected') {\n      channel.id = null\n      channel.handler = handshakeHandler\n      stopHandshake(channel)\n      stopHeartbeat(channel)\n    }\n  }\n\n  function sendHandshake<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id: uuid(),\n      to: channel.config.id,\n      type,\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: '*' })\n    } catch (e) {\n      throw new Error(`Failed to postMessage '${msg.id}' on '${config.id}'`)\n    }\n  }\n\n  function send<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K | InternalMsgType,\n    data?: Extract<T, { type: K }>['data'],\n    expectResponse = true,\n  ) {\n    const id = uuid()\n\n    // If there is no active channel, push to the buffer\n    if (\n      channel.status === 'connecting' ||\n      channel.status === 'reconnecting' ||\n      channel.status === 'disconnected'\n    ) {\n      channel.buffer.push({ type, data })\n      return\n    }\n\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id,\n      to: channel.config.id,\n      type,\n    }\n\n    if (expectResponse) {\n      const maxWait = setTimeout(() => {\n        // The channel may have changed, so only reject if the IDs match\n        if (msg.connectionId === channel.id) {\n          // Cleanup the transaction listener\n          window.removeEventListener('message', transact, false)\n          // Push the message to the buffer\n          if (type !== 'channel/heartbeat') {\n            channel.buffer.push({ type, data })\n          }\n          // Try to reconnect\n          setChannelStatus(channel, 'reconnecting')\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Received no response to message '${msg.type}' on client '${config.id}' (ID: '${msg.id}').`,\n          )\n        }\n      }, RESPONSE_TIMEOUT)\n\n      const transact = (e: MessageEvent<ChannelMsg>) => {\n        const { data: eventData } = e\n        if (\n          eventData.type === 'channel/response' &&\n          eventData.data?.responseTo &&\n          eventData.data.responseTo === msg.id\n        ) {\n          window.removeEventListener('message', transact, false)\n          clearTimeout(maxWait)\n        }\n      }\n      window.addEventListener('message', transact, false)\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: config.targetOrigin })\n    } catch (e) {\n      throw new Error(\n        `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n      )\n    }\n  }\n\n  function disconnect() {\n    channels.forEach((channel) => {\n      if (['disconnected'].includes(channel.status)) return\n      send(channel, 'channel/disconnect', { id: channel.id }, false)\n      setChannelStatus(channel, 'disconnected')\n    })\n  }\n\n  function destroy() {\n    disconnect()\n    window.removeEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      stopHeartbeat(channel)\n      stopHandshake(channel)\n    })\n  }\n\n  function initialise() {\n    window.addEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      setChannelStatus(channel, 'connecting')\n    })\n  }\n\n  initialise()\n\n  function sendPublic<K extends T['type']>(\n    id: string | string[] | undefined,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    const channelsToSend = id ? (Array.isArray(id) ? [...id] : [id]) : channels\n\n    channelsToSend.forEach((id) => {\n      const channel = channels.find((channel) => channel.config.id === id)\n      if (!channel) throw new Error('Invalid channel ID')\n      send(channel, type, data)\n    })\n  }\n\n  return {\n    destroy,\n    send: sendPublic,\n  }\n}\n","function n(n){return\"object\"==typeof n&&null!==n&&!Array.isArray(n)}function e(n){return null!==n&&Array.isArray(n)}function t(n){let t=\"\";for(const r of n)\"string\"!=typeof r?\"number\"!=typeof r?e(r)?(t&&(t+=\":\"),t+=`${r.join(\",\")}}`):r._key&&(t&&(t+=\":\"),t+=`${r._key}`):(t&&(t+=\":\"),t+=`${r}`):(t&&(t+=\".\"),t+=r);return t}const r=/^([A-Za-z]+):([0-9]+)$/,o=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,u=/^([A-Za-z]+):([a-z0-9]+)$/;function s(n){const e=[];for(const t of n.split(\".\")){const n=r.exec(t);if(n){e.push(n[1],Number(n[2]));continue}const s=o.exec(t);if(s){e.push(s[1],[Number(s[2]),Number(s[3])]);continue}const c=u.exec(t);c?e.push(c[1],{_key:c[2]}):e.push(t)}return e}export{e as a,n as i,t as p,s as u};//# sourceMappingURL=urlStringToPath-FefM00gz.js.map\n","export{p as pathToUrlString,u as urlStringToPath}from\"./_chunks/urlStringToPath-FefM00gz.js\";function t(t,r){return`${t}-${\"string\"==typeof r?r:JSON.stringify(r)}`}const r=\"undefined\"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),e={alt:\"altKey\",ctrl:\"ctrlKey\",mod:r?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function n(t,r){return t.every((t=>e[t]?r[e[t]]:r.key===t.toUpperCase()))}function o(t){return t.key===(r?\"Meta\":\"Ctrl\")}function i(t){return\"Alt\"===t.key}export{t as getQueryCacheKey,i as isAltKey,n as isHotkey,o as isModKey};//# sourceMappingURL=index.js.map\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nimport type { PresentationStateParams } from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(\n  state: PresentationStateParams,\n): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Inline,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, onContinueAnyway, ...restProps } = props\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text=\"Retry\" />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text=\"Continue anyway\"\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/desk'\nimport { StateLink, useRouter } from 'sanity/router'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { documentId, documentType, ...restProps } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{ id: documentId, type: documentType }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find((r) => getPublishedId(r._id) === childId)\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: ref._id,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink,\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onDeskParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DeskToolProvider,\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n        // defaultOrdering: [{ field: '_updatedAt', direction: 'desc' }],\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [deskParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <DeskToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </DeskToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement, useMemo } from 'react'\n\nimport { parseId } from '../lib/parse'\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\n\nexport function DocumentListPanel(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n\n  const refsWithParsedIds = useMemo(\n    () =>\n      refs.map(({ _id, _type }) => ({\n        _id: parseId(_id)!,\n        _type,\n      })),\n    [refs],\n  )\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refsWithParsedIds}\n    />\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n  useDeskTool,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { documentId, documentType, params, onDeskParams, onFocusPath } = props\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  const { setLayoutCollapsed } = useDeskTool()\n  const handleRootCollapse = useCallback(\n    () => setLayoutCollapsed(true),\n    [setLayoutCollapsed],\n  )\n  const handleRootExpand = useCallback(\n    () => setLayoutCollapsed(false),\n    [setLayoutCollapsed],\n  )\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout\n        style={{ height: '100%' }}\n        onExpand={handleRootExpand}\n        onCollapse={handleRootCollapse}\n      >\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { type ReactElement } from 'react'\nimport { type Path } from 'sanity'\nimport { DeskToolProvider } from 'sanity/desk'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { deskParams, documentId, documentType, onDeskParams, onFocusPath } =\n    props\n  return (\n    <DeskToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n      />\n    </DeskToolProvider>\n  )\n}\n","import { type ReactElement } from 'react'\nimport { type Path } from 'sanity'\n\nimport type { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPanel } from './DocumentListPanel'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPanel\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import{useMemo as e,useState as n,useCallback as t,useEffect as i,useSyncExternalStore as r}from\"react\";function o(n){const t=e((()=>JSON.stringify(n||{})),[n]);return e((()=>JSON.parse(t)),[t])}function s(e){const{refreshInterval:o}=e,s=function(){const[e,t]=n(!1);i((()=>{t(navigator.onLine);const e=()=>t(!0),n=()=>t(!1);return window.addEventListener(\"online\",e),window.addEventListener(\"offline\",n),()=>{window.removeEventListener(\"online\",e),window.removeEventListener(\"offline\",n)}}),[]);const o=r(u,(()=>document.visibilityState),(()=>\"hidden\"));if(!e)return!0;if(\"hidden\"===o)return!0;return!1}(),[d,c]=n(\"hit\"),f=t((()=>(c(\"inflight\"),()=>c(\"hit\"))),[]);return i((()=>{if(!o||\"hit\"!==d)return;const e=setTimeout((()=>c(\"stale\")),o);return()=>clearTimeout(e)}),[o,d]),i((()=>{if(\"hit\"!==d)return;const e=()=>c(\"stale\");return window.addEventListener(\"focus\",e),()=>window.removeEventListener(\"focus\",e)}),[o,d]),i((()=>{s&&\"hit\"===d&&c(\"stale\"),s||\"stale\"!==d||c(\"refresh\")}),[s,d]),[d,f]}function u(e){return document.addEventListener(\"visibilitychange\",e),()=>document.removeEventListener(\"visibilitychange\",e)}export{o as useQueryParams,s as useRevalidate};//# sourceMappingURL=hooks.js.map\n","import type { ChannelsController } from '@sanity/channels'\nimport type {\n  ClientConfig,\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n} from '@sanity/client'\nimport { applySourceDocuments, getPublishedId } from '@sanity/client/csm'\nimport type {\n  LoaderPayloads,\n  VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  useQueryParams,\n  useRevalidate,\n} from '@sanity/visual-editing-helpers/hooks'\nimport { applyPatch } from 'mendoza'\nimport LRUCache from 'mnemonist/lru-cache-with-delete'\nimport { memo, useEffect, useMemo, useState } from 'react'\nimport { type SanityClient, type SanityDocument, useClient } from 'sanity'\n\nimport {\n  LIVE_QUERY_CACHE_BATCH_SIZE,\n  LIVE_QUERY_CACHE_SIZE,\n} from '../constants'\nimport type { LiveQueriesState } from '../types'\n\nexport interface LoaderQueriesProps {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  channel: ChannelsController<VisualEditingMsg> | undefined\n  perspective: ClientPerspective\n  liveQueries: LiveQueriesState\n  documentsOnPage: { _id: string; _type: string }[]\n}\n\nexport default function LoaderQueries(props: LoaderQueriesProps): JSX.Element {\n  const {\n    liveDocument,\n    channel,\n    perspective: activePerspective,\n    liveQueries,\n    documentsOnPage,\n  } = props\n  const [cache] = useState(\n    () => new LRUCache<string, SanityDocument>(LIVE_QUERY_CACHE_SIZE),\n  )\n  const studioClient = useClient({ apiVersion: '2023-10-16' })\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [studioClient],\n  )\n  useEffect(() => {\n    if (channel) {\n      const { projectId, dataset } = clientConfig\n      channel.send('loaders', 'loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective: activePerspective,\n      } satisfies LoaderPayloads['perspective'])\n    }\n  }, [channel, clientConfig, activePerspective])\n\n  const turboIds = useMemo(() => {\n    const documentsActuallyInUse = documentsOnPage.map(({ _id }) => _id)\n    const set = new Set(documentsActuallyInUse)\n    const ids = [...set]\n    const max = cache.capacity\n    if (ids.length >= max) {\n      ids.length = max\n    }\n    return ids\n  }, [cache.capacity, documentsOnPage])\n\n  const [documentsCacheLastUpdated, setDocumentsCacheLastUpdated] = useState(0)\n\n  return (\n    <>\n      <Turbo\n        cache={cache}\n        client={client}\n        turboIds={turboIds}\n        setDocumentsCacheLastUpdated={setDocumentsCacheLastUpdated}\n      />\n      {Object.entries(liveQueries).map(\n        ([key, { query, params, perspective }]) => (\n          <QuerySubscription\n            key={`${key}${perspective}`}\n            cache={cache}\n            projectId={clientConfig.projectId!}\n            dataset={clientConfig.dataset!}\n            perspective={perspective}\n            query={query}\n            params={params}\n            channel={channel}\n            client={client}\n            refreshInterval={activePerspective ? 2000 : 0}\n            liveDocument={liveDocument}\n            documentsCacheLastUpdated={documentsCacheLastUpdated}\n          />\n        ),\n      )}\n    </>\n  )\n}\n\ninterface SharedProps {\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n  /**\n   * How frequently queries should be refetched in the background to refresh the parts of queries that can't be source mapped.\n   * Setting it to `0` will disable background refresh.\n   * @defaultValue 10000\n   */\n  refreshInterval?: number\n  /**\n   * The documents cache to use for turbo-charging queries.\n   */\n  cache: LRUCache<string, SanityDocument>\n}\n\ninterface TurboProps extends Pick<SharedProps, 'client' | 'cache'> {\n  turboIds: string[]\n  setDocumentsCacheLastUpdated: (timestamp: number) => void\n}\n/**\n * A turbo-charged mutation observer that uses Content Source Maps to apply mendoza patches on your queries\n */\nconst Turbo = memo(function Turbo(props: TurboProps) {\n  const { cache, client, turboIds, setDocumentsCacheLastUpdated } = props\n  // Figure out which documents are missing from the cache\n  const [batch, setBatch] = useState<string[][]>([])\n  useEffect(() => {\n    const batchSet = new Set(batch.flat())\n    const nextBatch = new Set<string>()\n    for (const turboId of turboIds) {\n      if (!batchSet.has(turboId) && !cache.has(turboId)) {\n        nextBatch.add(turboId)\n      }\n    }\n    const nextBatchSlice = [...nextBatch].slice(0, LIVE_QUERY_CACHE_BATCH_SIZE)\n    if (nextBatchSlice.length === 0) return\n    setBatch((prevBatch) => [\n      ...prevBatch.slice(-LIVE_QUERY_CACHE_BATCH_SIZE),\n      nextBatchSlice,\n    ])\n  }, [batch, cache, turboIds])\n\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    const subscription = client\n      .listen(\n        '*',\n        {},\n        {\n          events: ['mutation'],\n          effectFormat: 'mendoza',\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-loader',\n        },\n      )\n      .subscribe((update) => {\n        if (update.type === 'mutation' && update.transition === 'disappear') {\n          if (cache.delete(update.documentId)) {\n            setDocumentsCacheLastUpdated(Date.now())\n          }\n        }\n\n        if (update.type !== 'mutation' || !update.effects?.apply?.length) return\n        // Schedule a reach state update with the ID of the document that were mutated\n        // This react handler will apply the document to related source map snapshots\n        const cachedDocument = cache.peek(update.documentId)\n        if (cachedDocument as SanityDocument) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const patchDoc = { ...cachedDocument } as any\n          delete patchDoc._rev\n          const patchedDocument = applyPatch(patchDoc, update.effects.apply)\n          cache.set(update.documentId, patchedDocument)\n          setDocumentsCacheLastUpdated(Date.now())\n        }\n      })\n    return () => subscription.unsubscribe()\n  }, [cache, client, setDocumentsCacheLastUpdated])\n\n  return (\n    <>\n      {batch.map((ids) => (\n        <GetDocuments\n          key={JSON.stringify(ids)}\n          cache={cache}\n          client={client}\n          ids={ids}\n          setDocumentsCacheLastUpdated={setDocumentsCacheLastUpdated}\n        />\n      ))}\n    </>\n  )\n})\n\ninterface GetDocumentsProps extends Pick<SharedProps, 'client' | 'cache'> {\n  ids: string[]\n  setDocumentsCacheLastUpdated: (timestamp: number) => void\n}\nconst GetDocuments = memo(function GetDocuments(props: GetDocumentsProps) {\n  const { client, cache, ids, setDocumentsCacheLastUpdated } = props\n\n  useEffect(() => {\n    const missingIds = ids.filter((id) => !cache.has(id))\n    if (missingIds.length === 0) return\n    client.getDocuments(missingIds).then((documents) => {\n      for (const doc of documents) {\n        if (doc && doc?._id) {\n          cache.set(doc._id, doc)\n          setDocumentsCacheLastUpdated(Date.now())\n        }\n      }\n      // eslint-disable-next-line no-console\n    }, console.error)\n  }, [cache, client, ids, setDocumentsCacheLastUpdated])\n\n  return null\n})\nGetDocuments.displayName = 'GetDocuments'\n\ninterface QuerySubscriptionProps\n  extends Pick<\n    UseQuerySubscriptionProps,\n    | 'client'\n    | 'cache'\n    | 'refreshInterval'\n    | 'liveDocument'\n    | 'documentsCacheLastUpdated'\n  > {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  channel: ChannelsController<VisualEditingMsg> | undefined\n}\nfunction QuerySubscription(props: QuerySubscriptionProps) {\n  const {\n    cache,\n    projectId,\n    dataset,\n    perspective,\n    query,\n    client,\n    refreshInterval,\n    liveDocument,\n    channel,\n    documentsCacheLastUpdated,\n  } = props\n\n  const params = useQueryParams(props.params)\n  const data = useQuerySubscription({\n    cache,\n    client,\n    liveDocument,\n    params,\n    perspective,\n    query,\n    refreshInterval,\n    documentsCacheLastUpdated,\n  })\n  const result = data?.result\n  const resultSourceMap = data?.resultSourceMap\n\n  useEffect(() => {\n    if (resultSourceMap) {\n      channel!.send('loaders', 'loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n      } satisfies LoaderPayloads['query-change'])\n    }\n  }, [\n    channel,\n    dataset,\n    params,\n    perspective,\n    projectId,\n    query,\n    result,\n    resultSourceMap,\n  ])\n\n  return null\n}\n\ninterface UseQuerySubscriptionProps\n  extends Required<Pick<SharedProps, 'client' | 'refreshInterval' | 'cache'>> {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  query: string\n  params: QueryParams\n  perspective: ClientPerspective\n  documentsCacheLastUpdated: number\n}\nfunction useQuerySubscription(props: UseQuerySubscriptionProps) {\n  const {\n    cache,\n    liveDocument,\n    client,\n    refreshInterval,\n    query,\n    params,\n    perspective,\n    documentsCacheLastUpdated,\n  } = props\n  const [snapshot, setSnapshot] = useState<{\n    result: unknown\n    resultSourceMap?: ContentSourceMap\n  } | null>(null)\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({ refreshInterval })\n  const shouldRefetch = revalidate === 'refresh' || revalidate === 'inflight'\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return\n    }\n\n    let fulfilled = false\n    let fetching = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const { signal } = controller\n      fetching = true\n      const { result, resultSourceMap } = await client.fetch(query, params, {\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n      })\n      fetching = false\n\n      if (!signal.aborted) {\n        setSnapshot({ result, resultSourceMap })\n\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      .catch((error) => {\n        fetching = false\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled && !fetching) {\n        controller.abort()\n      }\n    }\n  }, [\n    client,\n    dataset,\n    liveDocument,\n    params,\n    perspective,\n    projectId,\n    query,\n    shouldRefetch,\n    startRefresh,\n  ])\n\n  return useMemo(() => {\n    if (documentsCacheLastUpdated && snapshot?.resultSourceMap) {\n      return {\n        result: turboChargeResultIfSourceMap(\n          cache,\n          liveDocument,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        ),\n        resultSourceMap: snapshot.resultSourceMap,\n      }\n    }\n    return snapshot\n  }, [cache, documentsCacheLastUpdated, liveDocument, perspective, snapshot])\n}\n\nlet warnedAboutCrossDatasetReference = false\nexport function turboChargeResultIfSourceMap<T = unknown>(\n  cache: SharedProps['cache'],\n  liveDocument: Partial<SanityDocument> | null | undefined,\n  result: T,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): T {\n  if (perspective === 'raw') {\n    throw new Error(\n      'turboChargeResultIfSourceMap does not support raw perspective',\n    )\n  }\n  return applySourceDocuments(\n    result,\n    resultSourceMap,\n    (sourceDocument) => {\n      if (sourceDocument._projectId) {\n        // @TODO Handle cross dataset references\n        if (!warnedAboutCrossDatasetReference) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          warnedAboutCrossDatasetReference = true\n        }\n        return undefined\n      }\n      // If there's a displayed document, always prefer it\n      if (\n        liveDocument?._id &&\n        getPublishedId(liveDocument._id) === getPublishedId(sourceDocument._id)\n      ) {\n        return liveDocument\n      }\n      // Fallback to general documents cache\n      return cache.get(sourceDocument._id)\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (changedValue: any, { previousValue }) => {\n      if (\n        typeof changedValue === 'number' &&\n        typeof previousValue === 'string'\n      ) {\n        // If the string() function was used in the query, we need to convert the source value to a string as well\n        return `${changedValue}`\n      }\n      return changedValue\n    },\n    perspective,\n  )\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: any[]) => void>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: any\n  return ((...args: any[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { PresentationNavigate } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const { children, navigate: _navigate } = props\n\n  const navigate = useCallback(\n    (preview: string) => {\n      _navigate({}, { preview })\n    },\n    [_navigate],\n  )\n\n  const context = useMemo<PresentationNavigateContextValue>(\n    () => navigate,\n    [navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={context}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { memo, useCallback, useMemo } from 'react'\n\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport type { NavigatorOptions } from './types'\nimport { useLocalState } from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const { unstable_navigator } = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{ navigatorEnabled, toggleNavigator }, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, navigate, params } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      navigate,\n      params,\n    }),\n    [deskParams, devMode, name, navigate, params],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { ResetIcon } from '@sanity/icons'\nimport { TextInput, type TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useActiveWorkspace } from 'sanity'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { basePath = '/' } = useActiveWorkspace()?.activeWorkspace || {}\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (\n          !origin &&\n          (absoluteValue.startsWith(`${basePath}/`) ||\n            absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            `URL can't have the same base path as the Studio ${basePath}`,\n          )\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type { ChannelStatus } from '@sanity/channels'\nimport type { ClientPerspective } from '@sanity/client'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  CopyIcon,\n  DatabaseIcon,\n  DesktopIcon,\n  EditIcon,\n  LaunchIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n  ShareIcon,\n} from '@sanity/icons'\nimport { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport {\n  hasSecretSearchParams,\n  setSecretSearchParams,\n  withoutSecretSearchParams,\n} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  ComponentType,\n  createElement,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Hotkeys, useClient, useCurrentUser } from 'sanity'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { API_VERSION, MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<ClientPerspective, string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n  raw: 'Raw',\n}\n\nconst PERSPECTIVE_TONES: Record<ClientPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n  raw: 'default',\n}\n\nconst PERSPECTIVE_ICONS: Record<ClientPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n  raw: DatabaseIcon,\n}\n\ninterface PreviewFrameProps {\n  initialUrl: URL\n  targetOrigin: string\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  openPopup: (url: string) => void\n  overlayEnabled: boolean\n  params: PresentationParams\n  perspective: ClientPerspective\n  setPerspective: Dispatch<SetStateAction<ClientPerspective>>\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  loadersConnection: ChannelStatus\n  overlaysConnection: ChannelStatus\n  previewKitConnection: ChannelStatus\n}\n\nexport const PreviewFrame = forwardRef<HTMLIFrameElement, PreviewFrameProps>(\n  function PreviewFrame(props, ref) {\n    const {\n      initialUrl,\n      targetOrigin,\n      navigatorEnabled,\n      onPathChange,\n      openPopup,\n      overlayEnabled,\n      params,\n      perspective,\n      setPerspective,\n      toggleNavigator,\n      toggleOverlay,\n      loadersConnection,\n      overlaysConnection,\n      previewKitConnection,\n    } = props\n\n    const { devMode } = usePresentationTool()\n\n    const [mode, setMode] = useState<'desktop' | 'mobile'>('desktop')\n    const prefersReducedMotion = usePrefersReducedMotion()\n\n    const setDesktopMode = useCallback(() => setMode('desktop'), [setMode])\n    const setMobileMode = useCallback(() => setMode('mobile'), [setMode])\n    const [loading, setLoading] = useState(true)\n    const [timedOut, setTimedOut] = useState(false)\n    const [refreshing, setRefreshing] = useState(false)\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy =\n      loading || refreshing || overlaysConnection === 'connecting'\n\n    const previewLocationOrigin = useMemo(() => {\n      return targetOrigin === location.origin ? '' : targetOrigin\n    }, [targetOrigin])\n\n    const handleRefresh = useCallback(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      ref.current.src = `${targetOrigin}${params.preview || '/'}`\n\n      setRefreshing(true)\n    }, [params.preview, targetOrigin, ref])\n    const handleRetry = useCallback(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      setRefreshing(true)\n    }, [ref, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n      useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (\n        overlaysConnection === 'connecting' ||\n        overlaysConnection === 'reconnecting'\n      ) {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 1000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [\n      overlaysConnection,\n      loading,\n      refreshing,\n      setShowOverlaysConnectionState,\n    ])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to overlays. Make sure you're calling the 'enableOverlays' function in '@sanity/overlays' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'disconnected') {\n        setSomethingIsWrong(true)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const previewLocationRoute = useMemo(() => {\n      const previewUrl = new URL(params.preview || '/', targetOrigin)\n      const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n      return `${pathname}${search}`\n    }, [params.preview, targetOrigin])\n\n    const onIFrameLoad = useCallback(() => {\n      setLoading(false)\n      setRefreshing(false)\n    }, [])\n\n    return (\n      <MotionConfig\n        transition={prefersReducedMotion ? { duration: 0 } : undefined}\n      >\n        <TooltipDelayGroupProvider delay={1000}>\n          <Card\n            flex=\"none\"\n            padding={2}\n            shadow={1}\n            style={{ position: 'relative' }}\n          >\n            <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n              {toggleNavigator && (\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Toggle navigator</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Toggle navigator\"\n                    fontSize={1}\n                    icon={PanelLeftIcon}\n                    mode=\"bleed\"\n                    onClick={toggleNavigator}\n                    padding={3}\n                    selected={navigatorEnabled}\n                  />\n                </Tooltip>\n              )}\n\n              <Tooltip\n                animate\n                content={\n                  <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                    <Box padding={1}>\n                      <Text size={1}>\n                        {overlayEnabled\n                          ? 'Disable edit overlay'\n                          : 'Enable edit overlay'}\n                      </Text>\n                    </Box>\n                    <Box paddingY={1}>\n                      <Hotkeys\n                        keys={['Alt']}\n                        style={{ marginTop: -4, marginBottom: -4 }}\n                      />\n                    </Box>\n                  </Flex>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={1}\n                placement=\"bottom\"\n                portal\n              >\n                <Card\n                  as=\"label\"\n                  flex=\"none\"\n                  padding={3}\n                  style={{\n                    lineHeight: 0,\n                    borderRadius: 999,\n                    userSelect: 'none',\n                  }}\n                  tone={overlayEnabled ? 'positive' : undefined}\n                >\n                  <Flex align=\"center\" gap={2}>\n                    <div style={{ margin: -2 }}>\n                      <StyledSwitch\n                        checked={overlayEnabled}\n                        onChange={toggleOverlay}\n                        disabled={iframeIsBusy}\n                      />\n                    </div>\n                    <Box>\n                      <Text muted size={1} weight=\"medium\">\n                        Edit\n                      </Text>\n                    </Box>\n                  </Flex>\n                </Card>\n              </Tooltip>\n\n              {devMode && (\n                <Tooltip\n                  animate\n                  content={\n                    <Text size={1}>\n                      {refreshing ? 'Refreshing…' : 'Refresh preview'}\n                    </Text>\n                  }\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Refresh preview\"\n                    fontSize={1}\n                    icon={RefreshIcon}\n                    mode=\"bleed\"\n                    loading={refreshing}\n                    onClick={handleRefresh}\n                    padding={3}\n                  />\n                </Tooltip>\n              )}\n\n              <Box flex={1}>\n                <PreviewLocationInput\n                  onChange={onPathChange}\n                  origin={previewLocationOrigin}\n                  value={previewLocationRoute}\n                />\n              </Box>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ShareIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                    />\n                  }\n                  id=\"location-menu\"\n                  menu={\n                    <Menu>\n                      <ShareUrlMenuItems\n                        initialUrl={initialUrl}\n                        openPopup={openPopup}\n                        previewLocationOrigin={previewLocationOrigin}\n                        previewLocationRoute={previewLocationRoute}\n                      />\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ChevronDownIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                      text={PERSPECTIVE_TITLES[perspective]}\n                      loading={\n                        iframeIsBusy ||\n                        (loadersConnection === 'connecting' &&\n                          previewKitConnection !== 'connected')\n                      }\n                      disabled={loadersConnection !== 'connected'}\n                    />\n                  }\n                  id=\"perspective-menu\"\n                  menu={\n                    <Menu style={{ maxWidth: 240 }}>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() => setPerspective('previewDrafts')}\n                        padding={3}\n                        pressed={perspective === 'previewDrafts'}\n                        tone={PERSPECTIVE_TONES['previewDrafts']}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(\n                                PERSPECTIVE_ICONS['previewDrafts'],\n                              )}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES['previewDrafts']}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with latest draft content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity:\n                                  perspective === 'previewDrafts' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() => setPerspective('published')}\n                        padding={3}\n                        pressed={perspective === 'published'}\n                        tone={PERSPECTIVE_TONES['published']}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(PERSPECTIVE_ICONS['published'])}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES['published']}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with published content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity: perspective === 'published' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Full viewport</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Full viewport\"\n                    fontSize={1}\n                    icon={DesktopIcon}\n                    mode=\"bleed\"\n                    onClick={setDesktopMode}\n                    padding={3}\n                    selected={mode === 'desktop'}\n                  />\n                </Tooltip>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Narrow viewport</Text>}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Narrow viewport\"\n                    fontSize={1}\n                    icon={MobileDeviceIcon}\n                    mode=\"bleed\"\n                    onClick={setMobileMode}\n                    padding={3}\n                    selected={mode === 'mobile'}\n                  />\n                </Tooltip>\n              </Flex>\n            </Flex>\n          </Card>\n\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={mode === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: `0`,\n                      position: `absolute`,\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]:\n                        'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition:\n                        '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[mode] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text=\"Continue anyway\"\n                          style={{ opacity: 0 }}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex\n                          justify=\"center\"\n                          align=\"center\"\n                          direction=\"column\"\n                          gap={4}\n                        >\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut ? (\n                              <>\n                                Unable to connect, check the browser console for\n                                more information.\n                              </>\n                            ) : (\n                              'Connecting…'\n                            )}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text=\"Continue anyway\"\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading || iframeIsBusy) && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: `0`,\n                      position: `absolute`,\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[mode] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        Loading…\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: `0`,\n                      position: `absolute`,\n                      borderTop: '1px solid transparent',\n                      boxShadow: '0 0 0 1px var(--card-border-color)',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message=\"Could not connect to the preview\"\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Overlay connection status\n                                </Label>\n                                <Code size={1}>{overlaysConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Loader connection status\n                                </Label>\n                                <Code size={1}>{loadersConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                ref={ref}\n                style={{\n                  pointerEvents:\n                    iframeIsBusy && !continueAnyway ? 'none' : 'auto',\n                  boxShadow: '0 0 0 1px var(--card-border-color)',\n                  borderTop: '1px solid transparent',\n                }}\n                src={initialUrl.toString()}\n                initial={['background']}\n                variants={iframeVariants}\n                animate={[\n                  (loading || iframeIsBusy) && !continueAnyway\n                    ? 'background'\n                    : 'active',\n                  refreshing ? 'reloading' : 'idle',\n                  mode,\n                  showOverlaysConnectionStatus && !continueAnyway\n                    ? 'timedOut'\n                    : '',\n                ]}\n                onLoad={onIFrameLoad}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  },\n)\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n\nfunction ShareUrlMenuItems(\n  props: Pick<PreviewFrameProps, 'initialUrl' | 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n) {\n  const { initialUrl, openPopup, previewLocationOrigin, previewLocationRoute } =\n    props\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <>\n      <CopyUrlMenuButton\n        initialUrl={initialUrl}\n        previewLocationOrigin={previewLocationOrigin}\n        previewLocationRoute={previewLocationRoute}\n      />\n      <MenuItem\n        icon={LaunchIcon}\n        text=\"Open preview\"\n        as=\"a\"\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        onClick={handleOpenPopup as any}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </>\n  )\n}\n\nfunction CopyUrlMenuButton(\n  props: Pick<PreviewFrameProps, 'initialUrl'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n) {\n  const { initialUrl, previewLocationOrigin, previewLocationRoute } = props\n\n  const { push: pushToast } = useToast()\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [disabled, setDisabled] = useState(false)\n\n  return (\n    <MenuItem\n      disabled={disabled}\n      onClick={() => {\n        if (!navigator?.clipboard) {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Clipboard not supported',\n          })\n          return false\n        }\n        setDisabled(true)\n\n        let id: string | undefined = undefined\n        let url = `${previewLocationOrigin}${previewLocationRoute}`\n        const onFinally = () => {\n          pushToast({\n            id,\n            closable: true,\n            status: 'success',\n            title: 'The URL is copied to the clipboard',\n          })\n          setDisabled(false)\n        }\n        const onError = (error: any) => {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Copy failed',\n            description: error.message || error.toString(),\n          })\n          setDisabled(false)\n        }\n        if (\n          hasSecretSearchParams(initialUrl) &&\n          typeof ClipboardItem !== 'undefined'\n        ) {\n          const type = 'text/plain'\n          const resolvePreviewUrl = async () => {\n            id = pushToast({\n              closable: true,\n              title: 'Copying URL to clipboard…',\n            })\n            const previewUrlSecret = await createPreviewSecret(\n              client,\n              '@sanity/presentation',\n              typeof window === 'undefined' ? '' : location.href,\n              currentUser?.id,\n            )\n\n            const newUrl = setSecretSearchParams(\n              initialUrl,\n              previewUrlSecret.secret,\n              previewLocationRoute,\n            )\n            url = newUrl.toString()\n            return new Blob([url], { type })\n          }\n\n          // Try to save to clipboard then save it in the state if worked\n          const item = new ClipboardItem({\n            [type]: resolvePreviewUrl(),\n          })\n          navigator.clipboard.write([item]).then(onFinally).catch(onError)\n        } else {\n          navigator.clipboard.writeText(url).then(onFinally).catch(onError)\n        }\n      }}\n      text=\"Copy link\"\n      icon={CopyIcon}\n    />\n  )\n}\n","import type { ClientPerspective } from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport { useCallback, useMemo, useState } from 'react'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function useDocumentsOnPage(\n  perspective: ClientPerspective,\n): [\n  DocumentOnPage[],\n  (perspective: ClientPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<Record<string, DocumentOnPage>>({})\n  const [previewDrafts, setPreviewDrafts] = useState<\n    Record<string, DocumentOnPage>\n  >({})\n\n  const setDocumentsOnPage = useCallback(\n    (perspective: ClientPerspective, sourceDocuments: DocumentOnPage[]) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n          if (!warnedAboutCrossDatasetReference) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              'Cross dataset references are not supported yet, ignoring source document',\n              sourceDocument,\n            )\n            warnedAboutCrossDatasetReference = true\n          }\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache =\n        perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((prev) => {\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n        return isEqual(prev, next) ? prev : next\n      })\n    },\n    [],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    return perspective === 'published'\n      ? [...Object.values(published)]\n      : [...Object.values(previewDrafts)]\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { MutableRefObject, useEffect, useMemo, useRef } from 'react'\nimport { RouterContextValue, RouterState, SearchParam } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parseRouterState } from './lib/parse'\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  previewRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  previewRef: MutableRefObject<string | undefined>\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: PresentationNavigate\n  params: PresentationParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const { id, path, type } = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    })\n    return pruned\n  }, [\n    params.inspect,\n    params.path,\n    params.rev,\n    params.since,\n    params.template,\n    params.view,\n    params.pathKey,\n    params.instruction,\n    params.comment,\n  ])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const navigate = useMemo(\n    () =>\n      debounce<PresentationNavigate>(\n        (nextState, nextSearchState = {}, forceReplace) => {\n          // Extract type, id and path as 'routerState'\n          const { _searchParams: routerSearchParams, ...routerState } =\n            routerStateRef.current\n\n          // Convert array of search params to an object\n          const routerSearchState = (routerSearchParams || []).reduce(\n            (acc, [key, value]) => (\n              (acc[key as keyof PresentationSearchParams] = value), acc\n            ),\n            {} as PresentationSearchParams,\n          )\n\n          // Merge routerState and incoming state\n          const state: RouterState = pruneObject({\n            ...routerState,\n            ...nextState,\n          })\n\n          // Merge routerSearchState and incoming searchState\n          const searchState = pruneObject({\n            ...routerSearchState,\n            ...nextSearchState,\n          })\n\n          state._searchParams = Object.entries(searchState).reduce(\n            (acc, [key, value]) => [...acc, [key, value]],\n            [] as SearchParam[],\n          )\n\n          const replace =\n            forceReplace ?? searchState.preview === previewRef.current\n\n          routerNavigate(state, { replace })\n        },\n        50,\n      ),\n    [routerNavigate, previewRef],\n  )\n\n  return {\n    deskParams,\n    navigate,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { startTransition, useEffect, useMemo, useState } from 'react'\nimport {\n  type SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { API_VERSION } from './constants'\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: API_VERSION })\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName)\n  const previewUrlSecret = usePreviewUrlSecret(\n    typeof previewUrl === 'object' || typeof previewUrl === 'function',\n    deps,\n  )\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        } else if (document.referrer) {\n          const referrerUrl = new URL(document.referrer)\n          if (referrerUrl.origin === resolvedUrl.origin) {\n            resultUrl = referrerUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) ||\n          resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object'\n        ? definePreviewUrl<SanityClient>(previewUrl)\n        : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      previewSearchParam,\n      referrer: typeof document === 'undefined' ? null : document.referrer,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n) {\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName],\n  )\n}\n\nfunction usePreviewUrlSecret(\n  enabled: boolean,\n  deps: (string | symbol | undefined)[],\n) {\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() =>\n        setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()),\n      )\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {\n  type ChannelsController,\n  type ChannelStatus,\n  createChannelsController,\n} from '@sanity/channels'\nimport type { ClientPerspective } from '@sanity/client'\nimport { studioPath } from '@sanity/client/csm'\nimport { BoundaryElementProvider, Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  type ReactElement,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique } from 'sanity'\nimport {\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport styled from 'styled-components'\n\nimport {\n  DEFAULT_TOOL_NAME,\n  MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n} from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport { DisplayedDocumentBroadcasterProvider } from './loader/DisplayedDocumentBroadcaster'\nimport LoaderQueries from './loader/LoaderQueries'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { usePresentationNavigator } from './PresentationNavigator'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport type {\n  DeskDocumentPaneParams,\n  LiveQueriesState,\n  LiveQueriesStateValue,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const { previewUrl: _previewUrl, components } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] = useState<ChannelsController<VisualEditingMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<LiveQueriesState>({})\n\n  const previewRef = useRef<typeof params.preview>()\n\n  const { params, deskParams, navigate } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    previewRef,\n  })\n\n  const [perspective, setPerspective] = useState<ClientPerspective>(() =>\n    params.perspective === 'published' ? params.perspective : 'previewDrafts',\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective)\n\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  // Update the perspective when the param changes\n  useEffect(() => {\n    if (perspective !== params.perspective) {\n      navigate(\n        {},\n        {\n          perspective: perspective === 'published' ? 'published' : undefined,\n        },\n      )\n    }\n  }, [params.perspective, perspective, navigate])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ChannelStatus>('connecting')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ChannelStatus>('connecting')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ChannelStatus>('connecting')\n\n  const [popups] = useState<Set<Window>>(() => new Set())\n  const handleOpenPopup = useCallback(\n    (url: string) => {\n      const source = window.open(url, '_blank')\n      if (source) {\n        popups.add(source)\n      }\n    },\n    [popups],\n  )\n\n  useEffect(() => {\n    if (popups.size && channel) {\n      // loop popups and call channel.addSource\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          channel.addSource(source)\n        }\n      }\n    }\n  }, [channel, popups, popups.size])\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target) return\n\n    const nextChannel = createChannelsController<VisualEditingMsg>({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      target,\n      targetOrigin,\n      connectTo: [\n        {\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setOverlaysConnection,\n          onEvent(type, data) {\n            if (type === 'overlay/focus' && 'id' in data) {\n              navigate({\n                type: data.type,\n                id: data.id,\n                path: data.path,\n              })\n            } else if (type === 'overlay/navigate') {\n              if (previewRef.current !== data.url) {\n                const isInitialNavigation = previewRef.current === undefined\n\n                previewRef.current = data.url\n                if (isInitialNavigation) {\n                  navigate({}, { preview: data.url })\n                } else {\n                  navigate(\n                    { id: undefined, type: undefined },\n                    { preview: data.url },\n                  )\n                }\n              }\n            } else if (type === 'overlay/toggle') {\n              setOverlayEnabled(data.enabled)\n            }\n          },\n        },\n        {\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setLoadersConnection,\n          onEvent(type, data) {\n            if (\n              type === 'loader/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            } else if (\n              type === 'loader/query-listen' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              if (\n                typeof data.heartbeat === 'number' &&\n                data.heartbeat! < MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL\n              ) {\n                throw new Error(\n                  `Loader query listen heartbeat interval must be at least ${MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL}ms`,\n                )\n              }\n              setLiveQueries((prev) => ({\n                ...prev,\n                [getQueryCacheKey(data.query, data.params)]: {\n                  perspective: data.perspective,\n                  query: data.query,\n                  params: data.params,\n                  receivedAt: Date.now(),\n                  heartbeat: data.heartbeat ?? false,\n                } satisfies LiveQueriesStateValue,\n              }))\n            }\n          },\n        },\n        {\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setPreviewKitConnection,\n          onEvent(type, data) {\n            if (\n              type === 'preview-kit/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            }\n          },\n        },\n      ],\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.destroy()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, navigate, targetOrigin])\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        startTransition(() =>\n          setLiveQueries((liveQueries) => {\n            if (Object.keys(liveQueries).length < 1) {\n              return liveQueries\n            }\n\n            const now = Date.now()\n            const hasAnyExpired = Object.values(liveQueries).some(\n              (liveQuery) =>\n                liveQuery.heartbeat !== false &&\n                now > liveQuery.receivedAt + liveQuery.heartbeat,\n            )\n            if (!hasAnyExpired) {\n              return liveQueries\n            }\n            const next = {} as LiveQueriesState\n            for (const [key, value] of Object.entries(liveQueries)) {\n              if (\n                value.heartbeat !== false &&\n                now > value.receivedAt + value.heartbeat\n              ) {\n                continue\n              }\n              next[key] = value\n            }\n            return next\n          }),\n        ),\n      MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n    )\n    return () => clearInterval(interval)\n  }, [])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({ path: studioPath.toString(nextPath) }, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        navigate({ id: undefined, path: undefined }, { preview })\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      navigate({}, deskParams)\n    },\n    [navigate],\n  )\n\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('overlays', 'presentation/focus', {\n        id: params.id,\n        path: params.path,\n      })\n    } else {\n      channel?.send('overlays', 'presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      previewRef.current &&\n      params.preview &&\n      previewRef.current !== params.preview\n    ) {\n      previewRef.current = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        channel?.send('overlays', 'presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [channel, overlaysConnection, targetOrigin, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('overlays', 'presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(\n    null,\n  )\n\n  const [{ navigatorEnabled, toggleNavigator }, PresentationNavigator] =\n    usePresentationNavigator({ unstable_navigator })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, { rev: undefined })\n    }\n    idRef.current = params.id\n  })\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        navigate={navigate}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                <PresentationNavigator />\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex\n                    direction=\"column\"\n                    flex={1}\n                    height=\"fill\"\n                    ref={setBoundaryElement}\n                  >\n                    <BoundaryElementProvider element={boundaryElement}>\n                      <PreviewFrame\n                        initialUrl={initialPreviewUrl}\n                        navigatorEnabled={navigatorEnabled}\n                        onPathChange={handlePreviewPath}\n                        openPopup={handleOpenPopup}\n                        overlayEnabled={overlayEnabled}\n                        params={params}\n                        perspective={perspective}\n                        ref={iframeRef}\n                        setPerspective={setPerspective}\n                        targetOrigin={targetOrigin}\n                        toggleNavigator={toggleNavigator}\n                        toggleOverlay={toggleOverlay}\n                        loadersConnection={loadersConnection}\n                        overlaysConnection={overlaysConnection}\n                        previewKitConnection={previewKitConnection}\n                      />\n                    </BoundaryElementProvider>\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <DisplayedDocumentBroadcasterProvider\n                    documentId={params.id}\n                    setDisplayedDocument={setDisplayedDocument}\n                  >\n                    <ContentEditor\n                      refs={documentsOnPage}\n                      deskParams={deskParams}\n                      documentId={params.id}\n                      documentType={params.type}\n                      onDeskParams={handleDeskParams}\n                      onFocusPath={handleFocusPath}\n                      previewUrl={params.preview}\n                    />\n                  </DisplayedDocumentBroadcasterProvider>\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <LoaderQueries\n          channel={channel}\n          liveQueries={liveQueries}\n          perspective={perspective}\n          liveDocument={displayedDocument}\n          documentsOnPage={documentsOnPage}\n        />\n      )}\n    </>\n  )\n}\n"],"names":["jsxRuntime","require","csm","ui","react","sanity","router","styled","index","desk","DisplayedDocumentBroadcaster","mendoza","LRUCache","icons","createSecret","withoutSecretSearchParams","framerMotion","isEqual","definePreviewUrl","suspendReact","_interopDefaultCompat","e","default","styled__default","LRUCache__default","isEqual__default","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","HANDSHAKE_INTERVAL","HANDSHAKE_MSG_TYPES","isHandshakeMessage","type","some","t","isLegacyHandshakeMessage","data","Array","isArray","every","key","startsWith","createChannelsControllerInternal","config","target","channels","connectTo","map","buffer","id","handler","handshakeHandler","status","interval","heartbeat","stopHandshake","channel","window","clearInterval","find","from","setChannelStatus","sendHandshake","messageHandler","connectionId","args","onEvent","send","responseTo","handleEvents","console","error","origin","domain","to","includes","targetOrigin","isValidMessageEvent","stopHeartbeat","next","onStatusUpdate","uuid","setInterval","startHandshake","heartbeatInverval","startHeartbeat","toFlush","splice","length","forEach","flush","msg","postMessage","expectResponse","maxWait","setTimeout","removeEventListener","transact","warn","eventData","clearTimeout","addEventListener","destroy","r","o","u","alt","ctrl","mod","test","navigator","platform","shift","n","toUpperCase","parseId","rawId","segments","decodeURIComponent","split","join","parsePath","rawPath","studioPath","exec","Number","s","c","_key","urlStringToPath","ErrorCard","props","children","message","onRetry","onContinueAnyway","restProps","retryButton","jsx","Button","fontSize","mode","onClick","text","continueAnywayButton","tone","Card","height","Flex","align","justify","Container","padding","sizing","width","jsxs","Stack","space","Text","size","weight","muted","Inline","Box","usePresentationTool","presentation","useContext","PresentationContext","resolveQueryStringFromParams","nextParams","allowed","params","parts","Object","entries","value","encodeQueryString","filter","reduce","obj","BackLink","forwardRef","ref","deskParams","StateLink","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","PresentationPaneRouterProvider","onDeskParams","previewUrl","refs","routerState","resolvePathFromState","useRouter","routerSearchParams","useUnique","fromEntries","createPathWithParams","useCallback","context","useMemo","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","getPublishedId","_id","_type","ParameterizedLink","Fragment","closeCurrentAndAfter","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","PaneRouterContext","Provider","RootLayout","PaneLayout","Root","WrappedCode","Code","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","useState","handleRetry","useEffect","flex","overflow","radius","Label","ErrorBoundary","onCatch","DeskToolProvider","direction","DeskDocumentListPane","itemId","paneKey","DocumentListPanel","refsWithParsedIds","DocumentPane","onFocusPath","paneDocumentNode","setLayoutCollapsed","useDeskTool","handleRootCollapse","handleRootExpand","style","onExpand","onCollapse","DeskDocumentPane","DocumentPanel","ContentEditor","document","LoaderQueries","liveDocument","perspective","activePerspective","liveQueries","documentsOnPage","cache","LIVE_QUERY_CACHE_SIZE","studioClient","useClient","apiVersion","clientConfig","client","withConfig","resultSourceMap","projectId","dataset","turboIds","documentsActuallyInUse","Set","max","capacity","documentsCacheLastUpdated","setDocumentsCacheLastUpdated","Turbo","query","QuerySubscription","refreshInterval","memo","batch","setBatch","batchSet","flat","nextBatch","turboId","has","add","nextBatchSlice","LIVE_QUERY_CACHE_BATCH_SIZE","prevBatch","subscription","listen","events","effectFormat","includePreviousRevision","includeResult","tag","subscribe","update","transition","delete","Date","now","effects","apply","cachedDocument","peek","patchDoc","_rev","patchedDocument","applyPatch","set","unsubscribe","GetDocuments","JSON","stringify","missingIds","getDocuments","then","documents","doc","parse","useQueryParams","snapshot","setSnapshot","setError","revalidate","startRefresh","onLine","e4","n2","visibilityState","d","f","e3","useRevalidate","shouldRefetch","fulfilled","fetching","controller","AbortController","async","effect","signal","result","fetch","filterResponse","aborted","onFinally","catch","name","finally","abort","turboChargeResultIfSourceMap","useQuerySubscription","displayName","warnedAboutCrossDatasetReference","applySourceDocuments","sourceDocument","_projectId","get","changedValue","previousValue","PanelsContext","createContext","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","useLayoutEffect","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","useRef","current","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timeout","timer","itemKey","getStoredItem","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","widths","setItem","setStoredItem","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","b","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","Map","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","widthsChanged","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","disconnect","PresentationNavigateProvider","navigate","_navigate","PresentationNavigateContext","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","defaultValue","setValue","useLocalState","navigatorEnabled","toggleNavigator","enabled","Component","Navigator","NavigatorComponent","navigatorDisabled","PresentationParamsProvider","PresentationParamsContext","PresentationProvider","IFrame","motion","iframe","PreviewLocationInput","basePath","useActiveWorkspace","activeWorkspace","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","nextValue","handleBlur","resetButton","icon","ResetIcon","TextInput","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","MotionFlex","StyledSwitch","Switch","PERSPECTIVE_TITLES","previewDrafts","published","raw","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","DatabaseIcon","PreviewFrame","initialUrl","onPathChange","openPopup","overlayEnabled","setPerspective","toggleOverlay","loadersConnection","overlaysConnection","previewKitConnection","setMode","prefersReducedMotion","usePrefersReducedMotion","setDesktopMode","setMobileMode","loading","setLoading","timedOut","setTimedOut","refreshing","setRefreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","previewLocationOrigin","location","handleRefresh","src","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","M","previewLocationRoute","URL","pathname","search","onIFrameLoad","MotionConfig","duration","TooltipDelayGroupProvider","delay","shadow","position","gap","minHeight","Tooltip","animate","content","fallbackPlacements","placement","portal","PanelLeftIcon","selected","whiteSpace","paddingY","Hotkeys","keys","marginTop","marginBottom","as","lineHeight","borderRadius","userSelect","margin","checked","RefreshIcon","MenuButton","button","iconRight","ShareIcon","menu","Menu","ShareUrlMenuItems","popover","constrainSize","ChevronDownIcon","MenuItem","pressed","createElement","opacity","CheckmarkIcon","DesktopIcon","MobileDeviceIcon","cursor","AnimatePresence","initial","exit","variants","errorVariants","background","inset","borderTop","boxShadow","spinnerVariants","sizes","Spinner","backdropFilter","WebkitBackdropFilter","WebkitTransition","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","handleOpenPopup","href","CopyUrlMenuButton","LaunchIcon","rel","pushToast","useToast","API_VERSION","currentUser","useCurrentUser","setDisabled","clipboard","closable","url","onError","description","hasSecretSearchParams","ClipboardItem","item","previewUrlSecret","createPreviewSecret","newUrl","setSecretSearchParams","secret","Blob","resolvePreviewUrl","write","writeText","CopyIcon","pruneObject","useParams","initialPreviewUrl","routerNavigate","previewRef","path","rev","since","template","view","pathKey","instruction","comment","routerStateRef","nextState","nextSearchState","forceReplace","routerSearchState","searchState","replace","usePreviewUrl","toolName","previewSearchParam","workspace","deps","workspaceName","resolveUUID","useSuspendCacheKeys","secretLastExpiredAt","setSecretLastExpiredAt","suspend","startTransition","expiresAt","getTime","usePreviewUrlSecret","resolvedUrl","resultUrl","restoredUrl","referrer","referrerUrl","studioBasePath","Symbol","exports","_previewUrl","components","tool","DEFAULT_TOOL_NAME","option","hostname","iframeRef","setChannel","setLiveQueries","setDocumentsOnPage","setPublished","setPreviewDrafts","sourceDocuments","useDocumentsOnPage","setOverlayEnabled","useProjectId","useDataset","setOverlaysConnection","setLoadersConnection","setPreviewKitConnection","popups","source","open","closed","addSource","contentWindow","nextChannel","sources","sendToSource","WeakMap","destroySource","destroyMany","sendToMany","prevConnectTo","createChannelsController","isInitialNavigation","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","receivedAt","liveQuery","handleFocusPath","nextPath","handlePreviewPath","handleDeskParams","displayedDocument","setDisplayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","idRef","BoundaryElementProvider","DisplayedDocumentBroadcasterProvider","D"],"mappings":"AAAA,aAAA,IAAAA,EAAAC,QAAA,qBAAAC,EAAAD,QAAA,sBAAAE,EAAAF,QAAA,cAAAG,EAAAH,QAAA,SAAAI,EAAAJ,QAAA,UAAAK,EAAAL,QAAA,iBAAAM,EAAAN,QAAA,qBAAAO,EAAAP,QAAA,wBAAAQ,EAAAR,QAAA,eAAAS,EAAAT,QAAA,+CAAAU,EAAAV,QAAA,WAAAW,EAAAX,QAAA,mCAAAY,EAAAZ,QAAA,iBAAAa,EAAAb,QAAA,4CAAAc,EAAAd,QAAA,2DAAAe,EAAAf,QAAA,iBAAAgB,EAAAhB,QAAA,mBAAAiB,EAAAjB,QAAA,iDAAAkB,EAAAlB,QAAA,iBAAA,SAAAmB,EAAAC,GAAA,OAAAA,GAAA,iBAAAA,GAAA,YAAAA,EAAAA,EAAA,CAAAC,QAAAD,EAAA,CAAA,IAAAE,EAAAH,EAAAb,GAAAiB,EAAAJ,EAAAR,GAAAa,EAAAL,EAAAH,GAGA,IAAIS,EACJ,MAAMC,EAAQ,IAAIC,WAAW,IACd,SAASC,IAEtB,IAAKH,IAEHA,EAAoC,oBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAEpGJ,GACH,MAAM,IAAIM,MAAM,4GAIpB,OAAON,EAAgBC,EACzB,CCXA,MAAMM,EAAY,GAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,MAAM,ICRhD,IAAeC,EAAA,CACbC,WAFmC,oBAAXT,QAA0BA,OAAOS,YAAcT,OAAOS,WAAWR,KAAKD,SCIhG,SAASU,EAAGC,EAASC,EAAKC,GACxB,GAAIL,EAAOC,aAAeG,IAAQD,EAChC,OAAOH,EAAOC,aAIhB,MAAMK,GADNH,EAAUA,GAAW,IACAI,SAAWJ,EAAQZ,KAAOA,KAK/C,GAHAe,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBF,EAAK,CACPC,EAASA,GAAU,EAEnB,IAAK,IAAIT,EAAI,EAAGA,EAAI,KAAMA,EACxBQ,EAAIC,EAAST,GAAKU,EAAKV,GAGzB,OAAOQ,CACR,CAED,OFbK,SAAyBI,EAAKH,EAAS,GAG5C,OAAOV,EAAUa,EAAIH,EAAS,IAAMV,EAAUa,EAAIH,EAAS,IAAMV,EAAUa,EAAIH,EAAS,IAAMV,EAAUa,EAAIH,EAAS,IAAM,IAAMV,EAAUa,EAAIH,EAAS,IAAMV,EAAUa,EAAIH,EAAS,IAAM,IAAMV,EAAUa,EAAIH,EAAS,IAAMV,EAAUa,EAAIH,EAAS,IAAM,IAAMV,EAAUa,EAAIH,EAAS,IAAMV,EAAUa,EAAIH,EAAS,IAAM,IAAMV,EAAUa,EAAIH,EAAS,KAAOV,EAAUa,EAAIH,EAAS,KAAOV,EAAUa,EAAIH,EAAS,KAAOV,EAAUa,EAAIH,EAAS,KAAOV,EAAUa,EAAIH,EAAS,KAAOV,EAAUa,EAAIH,EAAS,IAChf,CESSI,CAAgBH,EACzB,CCxBO,MAAMI,EAAmB,IACnBC,EAAqB,IACrBC,EAAqB,IAQrBC,EAAsB,CACjC,gBACA,oBACA,iBCNWC,EACXC,GAEOF,EAAoBG,MAAMC,GAAMA,IAAMF,IAGlCG,EAA2BA,EACtCC,OAAO,CAAC,KAIU,iBAATA,GACE,OAATA,IACCC,MAAMC,QAAQF,MAEb,WAAYA,IAEd,CAAC,KAAM,OAAQ,OAAQ,MAAMG,OAAOC,GAAQA,KAAOJ,KAEnDA,EAAKJ,KAAKS,WAAW,cC0EzB,SAASC,EACPC,GAEA,MAAMC,EAASD,EAAOC,OAEhBC,EAA2CF,EAAOG,UAAUC,KAC/DJ,IAAY,CACXK,OAAQ,GACRL,OAAAA,EACAM,GAAI,GACJC,QAASC,EACTC,OAAQ,aACRC,cAAU,EACVC,eAAW,MAWf,SAASC,EAAcC,GACdC,OAAAC,cAAcF,EAAQH,SAC/B,CAeA,SAASF,EAAiBnD,GAClB,MAAAoC,KAAEA,GAASpC,EACb,GAAA+B,EAAmBK,EAAKJ,MAAO,CACjC,MAAMwB,EAAUX,EAASc,MACtBH,GAAYA,EAAQb,OAAOM,KAAOb,EAAKwB,OAEtCJ,GAAyB,sBAAdpB,EAAKJ,OAClB6B,EAAiBL,EAAS,aAC1BM,EAAcN,EAAS,gBAAiB,CAAEP,GAAIO,EAAQP,KAE1D,CACF,CAEM,MAAAc,EAAkB/D,IAChB,MAAAoC,KAAEA,GAASpC,EACjB,IACG+B,EAAmBK,EAAKJ,OACzBa,EAASc,MAAMH,GAAYA,EAAQP,KAAOb,EAAK4B,eAC/C,CACA,MAAMR,EAAUX,EAASc,MACtBH,GAAYA,EAAQb,OAAOM,KAAOb,EAAKwB,OAE1C,GAAIJ,EAAS,CAGX,MAAMS,EAAO,CAAC7B,EAAKJ,KAAMI,EAAKA,MACtBoB,EAAAb,OAAOuB,aAAaD,GACrBtB,EAAAuB,aAAaD,GACpBE,EAAKX,EAAS,mBAAoB,CAAEY,WAAYhC,EAAKa,KAAM,EAC7D,CACF,GAGF,SAASoB,EAAarE,GAChB,GAAAmC,EAAyBnC,GAEnBsE,QAAAC,MACN,6LAKA,GAvDN,SACEvE,GAEM,MAAAoC,KAAEA,EAAMoC,OAAAA,GAAWxE,EAEvB,MAAgB,oBAAhBoC,EAAKqC,QACLrC,EAAKsC,IAAM/B,EAAOM,IAClBJ,EAASE,KAAKS,GAAYA,EAAQb,OAAOM,KAAI0B,SAASvC,EAAKwB,OAC7C,qBAAdxB,EAAKJ,MACLwC,IAAW7B,EAAOiC,YAEtB,CA4CMC,CAAoB7E,GAAI,CACpB,MAAAoC,KAAEA,GAASpC,EACR6C,EAAAc,MAAMH,GAAYA,EAAQb,OAAOM,KAAOb,EAAKwB,QAAOV,QAAQlD,EACvE,CACF,CAuBA,SAAS8E,EAActB,GACjBA,EAAQF,WACHG,OAAAC,cAAcF,EAAQF,UAEjC,CAES,SAAAO,EACPL,EACAuB,GAEAvB,EAAQJ,OAAS2B,EACjBvB,EAAQb,OAAOqC,iBAAiBD,EAAMvB,EAAQb,OAAOM,IACrDN,EAAOqC,iBAAiBD,EAAMvB,EAAQb,OAAOM,IAChC,eAAT8B,GAAkC,iBAATA,GAC3BvB,EAAQN,QAAUC,EAClB2B,EAActB,GA5GlB,SAAwBA,GACtBA,EAAQP,GAAKgC,IACLzB,EAAAH,SAAWI,OAAOyB,aAAY,KACpCpB,EAAcN,EAAS,gBAAiB,CAAEP,GAAIO,EAAQP,IAAI,GACzDpB,EACL,CAwGIsD,CAAe3B,IACG,cAATuB,GACTvB,EAAQN,QAAUa,EAClBR,EAAcC,GAhClB,SAAwBA,GAElB,GADJsB,EAActB,GACVA,EAAQb,OAAOW,UAAW,CACtB,MAAA8B,EACgC,iBAA7B5B,EAAQb,OAAOW,UAClBE,EAAQb,OAAOW,UACf1B,EACE4B,EAAAF,UAAYG,OAAOyB,aAAY,KACrCf,EAAKX,EAAS,oBAAmB,GAChC4B,EACL,CACF,CAsBIC,CAAe7B,GAzCnB,SAAeA,GACb,MAAM8B,EAAU,IAAI9B,EAAQR,QAC5BQ,EAAQR,OAAOuC,OAAO,EAAG/B,EAAQR,OAAOwC,QACxCF,EAAQG,SAAQ,EAAGzD,OAAMI,WAClB+B,EAAAX,EAASxB,EAAMI,EAAI,GAE5B,CAoCIsD,CAAMlC,IACY,iBAATuB,IACTvB,EAAQP,GAAK,KACbO,EAAQN,QAAUC,EAClBI,EAAcC,GACdsB,EAActB,GAElB,CAES,SAAAM,EACPN,EACAxB,EACAI,GAEI,IAACoB,EAAQP,GACL,MAAA,IAAItC,MAAM,qBAGlB,MAAMgF,EAAsB,CAC1B3B,aAAcR,EAAQP,GACtBb,OACAqC,OAAQ,kBACRb,KAAMjB,EAAOM,GACbA,GAAIgC,IACJP,GAAIlB,EAAQb,OAAOM,GACnBjB,QAGE,IACFY,GAAQgD,YAAYD,EAAK,CAAEf,aAAc,YAClC5E,GACD,MAAA,IAAIW,MAAgC,0BAAAgF,EAAI1C,WAAWN,EAAOM,MAClE,CACF,CAEA,SAASkB,EACPX,EACAxB,EACAI,EACAyD,GAAiB,GAEjB,MAAM5C,EAAKgC,IAIT,GAAmB,eAAnBzB,EAAQJ,QACW,iBAAnBI,EAAQJ,QACW,iBAAnBI,EAAQJ,OAGR,YADAI,EAAQR,OAAOlC,KAAK,CAAEkB,OAAMI,SAI1B,IAACoB,EAAQP,GACL,MAAA,IAAItC,MAAM,qBAGlB,MAAMgF,EAAsB,CAC1B3B,aAAcR,EAAQP,GACtBb,OACAqC,OAAQ,kBACRb,KAAMjB,EAAOM,GACbA,KACAyB,GAAIlB,EAAQb,OAAOM,GACnBjB,QAGF,GAAI6D,EAAgB,CACZ,MAAAC,EAAUC,YAAW,KAErBJ,EAAI3B,eAAiBR,EAAQP,KAExBQ,OAAAuC,oBAAoB,UAAWC,GAAU,GAEnC,sBAATjE,GACFwB,EAAQR,OAAOlC,KAAK,CAAEkB,OAAMI,SAG9ByB,EAAiBL,EAAS,gBAElBc,QAAA4B,KACN,oCAAoCP,EAAI3D,oBAAoBW,EAAOM,aAAa0C,EAAI1C,SAExF,GACCtB,GAEGsE,EAAYjG,IACV,MAAEoC,KAAM+D,GAAcnG,EAEP,qBAAnBmG,EAAUnE,MACVmE,EAAU/D,MAAMgC,YAChB+B,EAAU/D,KAAKgC,aAAeuB,EAAI1C,KAE3BQ,OAAAuC,oBAAoB,UAAWC,GAAU,GAChDG,aAAaN,GACf,EAEKrC,OAAA4C,iBAAiB,UAAWJ,GAAU,EAC/C,CAEI,IACFrD,GAAQgD,YAAYD,EAAK,CAAEf,aAAcjC,EAAOiC,qBACzC5E,GACP,MAAM,IAAIW,MACkB,0BAAAgF,EAAI1C,kBAAkBN,EAAOM,MAE3D,CACF,CA0CO,OAtBEQ,OAAA4C,iBAAiB,UAAWhC,GAAc,GACxCxB,EAAA4C,SAASjC,IAChBK,EAAiBL,EAAS,aAAY,IAoBnC,CACL8C,QAjCF,WAPWzD,EAAA4C,SAASjC,IACZ,CAAC,gBAAgBmB,SAASnB,EAAQJ,UACtCe,EAAKX,EAAS,qBAAsB,CAAEP,GAAIO,EAAQP,KAAM,GACxDY,EAAiBL,EAAS,gBAAc,IAMnCC,OAAAuC,oBAAoB,UAAW3B,GAAc,GAC3CxB,EAAA4C,SAASjC,IAChBsB,EAActB,GACdD,EAAcC,EAAO,GAEzB,EA2BEW,KAhBO,SACPlB,EACAjB,EACAI,IAEuBa,EAAMZ,MAAMC,QAAQW,GAAM,IAAIA,GAAM,CAACA,GAAOJ,GAEpD4C,SAASxC,IAChB,MAAAO,EAAUX,EAASc,MAAMH,GAAYA,EAAQb,OAAOM,KAAOA,IACjE,IAAKO,EAAe,MAAA,IAAI7C,MAAM,sBACzBwD,EAAAX,EAASxB,EAAMI,EAAI,GAE5B,EAMF,CClYmU,MAAMmE,EAAE,yBAAyBC,EAAE,kCAAkCC,EAAE,4BCAtO,MAA2FzG,EAAE,CAAC0G,IAAI,SAASC,KAAK,UAAUC,IAAlH,oBAAoBnD,QAAQ,uBAAuBoD,KAAKpD,OAAOqD,UAAUC,UAA+C,UAAU,UAAUC,MAAM,YAAY,SAASC,EAAE/E,EAAEqE,GAAG,OAAOrE,EAAEK,OAAOL,GAAGlC,EAAEkC,GAAGqE,EAAEvG,EAAEkC,IAAIqE,EAAE/D,MAAMN,EAAEgF,eAAe,CAAgD,SAASrG,EAAEqB,GAAG,MAAM,QAAQA,EAAEM,GAAG,CCK7d,SAAS2E,EAAQC,GACtB,QAAc,IAAVA,EACK,OAGT,MAAMC,EAAWC,mBAAmBF,IAAQG,MAAM,KAM3C,MAJa,WAAhBF,EAAS,IACXA,EAASL,QAGJK,EAASG,KAAK,IACvB,CAEO,SAASC,EAAUC,GACxB,QAAgB,IAAZA,EAIJ,OAAOC,EAAAA,WAAW5G,SFxBkZ,SAAWkG,GAAG,MAAMjH,EAAE,GAAG,IAAA,MAAUkC,KAAK+E,EAAEM,MAAM,KAAK,CAAON,MAAAA,EAAEV,EAAEqB,KAAK1F,GAAG,GAAG+E,EAAE,CAACjH,EAAEc,KAAKmG,EAAE,GAAGY,OAAOZ,EAAE,KAAK,QAAQ,CAAOa,MAAAA,EAAEtB,EAAEoB,KAAK1F,GAAG,GAAG4F,EAAE,CAAC9H,EAAEc,KAAKgH,EAAE,GAAG,CAACD,OAAOC,EAAE,IAAID,OAAOC,EAAE,MAAM,QAAQ,CAAO,MAAAC,EAAEtB,EAAEmB,KAAK1F,GAAG6F,EAAE/H,EAAEc,KAAKiH,EAAE,GAAG,CAACC,KAAKD,EAAE,KAAK/H,EAAEc,KAAKoB,EAAE,CAAQlC,OAAAA,CAAC,CEwBnoBiI,CAAgBX,mBAAmBI,IAChE,CCZO,SAASQ,EACdC,GAOA,MAAMC,SAAEA,EAAUC,QAAAA,EAAAC,QAASA,mBAASC,KAAqBC,GAAcL,EAEjEM,EACHC,EAAAA,IAAAC,SAAA,CAAOC,SAAU,EAAGC,KAAK,QAAQC,QAASR,EAASS,KAAK,UAErDC,EACJN,EAAAA,IAACC,EAAAA,OAAA,CACCC,SAAU,EACVC,KAAK,QACLI,KAAK,WACLH,QAASP,EACTQ,KAAK,oBAKP,OAAAL,EAAAA,IAACQ,EAAAA,KAAK,CAAAC,OAAO,UAAWX,EACtBJ,SAACM,EAAAA,IAAAU,EAAAA,KAAA,CAAKC,MAAM,SAASF,OAAO,OAAOG,QAAQ,SACzClB,SAAAM,EAAAA,IAACa,EAAAA,UAAU,CAAAC,QAAS,EAAGC,OAAO,SAASC,MAAO,EAC5CtB,SAAAuB,EAAAA,KAACC,EAAAA,MAAM,CAAAC,MAAO,EACZzB,SAAA,CAACuB,EAAAA,KAAAC,EAAAA,MAAA,CAAMC,MAAO,EACZzB,SAAA,CAAAM,MAACoB,EAAAA,KAAK,CAAAC,KAAM,EAAGC,OAAO,WAAW5B,SAEjC,2BACC0B,EAAAA,KAAK,CAAAG,OAAK,EAACF,KAAM,EACf3B,SACHC,OAGDD,EAEAE,GAAWC,EACToB,OAAAO,EAAAA,OAAA,CAAOL,MAAO,EACZzB,SAAA,CAAAK,EACAO,KAEDV,EACFI,EAAAA,IAACyB,EAAAA,IAAK,CAAA/B,SAAAK,IACJF,EACFG,EAAAA,IAACyB,EAAKA,IAAA,CAAA/B,SAAAY,IACJ,aAMhB,CC5DO,SAASoB,IACR,MAAAC,EAAeC,aAAWC,EAAAA,GAEhC,IAAKF,EACG,MAAA,IAAI1J,MAAM,mCAGX,OAAA0J,CACT,CCcA,SAASG,EACPC,GAEA,MAAMC,EAAU,CACd,UACA,UACA,cACA,UACA,MACA,QACA,WACA,QAUF,OA7BF,SAA2BC,EAAkC,IAC3D,MAAMC,EAAQC,OAAOC,QAAQH,GAC1B5H,KAAI,EAAEP,EAAKuI,QAAcvI,KAAOuI,MAChCvD,KAAK,KAER,OAAOoD,EAAMpF,OAAa,IAAAoF,IAAU,EACtC,CAuBSI,CAPgBH,OAAOC,QAAQL,GACnCQ,QAAO,EAAEzI,KAASkI,EAAQ/F,SAASnC,KACnC0I,QAAO,CAACC,GAAM3I,EAAKuI,KACL,MAATA,EAA2BI,EACxB,IAAKA,EAAK3I,CAACA,GAAMuI,IACvB,CAAE,GAGT,CAEA,MAAMK,EAAWC,EAAAA,YAAW,SAC1BlD,EACAmD,GAEA,MAAMC,WAAEA,EAAAZ,OAAYA,GAAWP,IAG7B,OAAA1B,EAAAA,IAAC8C,EAAAA,UAAA,IACKrD,EACJmD,MACAG,MAAO,CACLzJ,UAAM,EACN0J,cAAeb,OAAOC,QAAQ,IACzBS,EACHI,QAAShB,EAAOgB,WAGpBC,WAAO,GAGb,IAEMC,EAAqBR,EAAAA,YAAW,SACpClD,EACAmD,GAEA,MAAMQ,WAAEA,EAAAC,aAAYA,KAAiBvD,GAAcL,EAGjD,OAAAO,EAAAA,IAAC8C,EAAAA,UAAA,IACKhD,EACJ8C,MACAG,MAAO,CAAExI,GAAI6I,EAAY9J,KAAM+J,GAC/BH,WAAO,GAGb,IAEO,SAASI,EACd7D,GAOA,MAAMC,SAAEA,EAAUuC,OAAAA,EAAAsB,aAAQA,EAAcC,WAAAA,EAAAC,KAAYA,GAAShE,GAErDsD,MAAOW,EAAaC,qBAAAA,GAAyBC,EAAUA,YAEzDC,EAAqBC,EAAAA,UACzB3B,OAAO4B,YAAYL,EAAYV,eAAiB,KAG5CgB,EACJC,EAAAA,aACGlC,GAMQ,GALM4B,EAAqBD,KACvB5B,EAA6B,IACnC+B,KACA9B,OAIP,CAAC4B,EAAsBE,EAAoBH,IAGzCQ,EAAkCC,EAAAA,SAAQ,KACvC,CACL1N,MAAO,EACP2N,WAAY,EACZC,aAAc,EACdC,QAAS,CAAC,EACVrC,SACAsC,kBAAkB,EAClBC,YAAa,EACbC,iBAAkB,GAClBC,UAAYC,IACV,MAAMC,QAAEA,KAAY9E,GAAc6E,EAC5B/B,EAAMa,GAAMxI,MAAM4C,GAAMgH,EAAeA,eAAAhH,EAAEiH,OAASF,IAExD,OAAIhC,EAEA5C,EAAAA,IAAC8C,EAAAA,UAAA,IACKhD,EACJiD,MAAO,CACLxI,GAAIqI,EAAIkC,IACRxL,KAAMsJ,EAAImC,MACV/B,cAAeb,OAAOC,QAAQ,CAAEa,QAASO,OAM1CxD,EAAAA,IAAC,MAAK,IAAGF,GAAW,EAE7B4C,WACAS,qBACA6B,kBAAmBA,IAAMhF,EAAAA,IAAAiF,EAAAA,SAAA,CAAEvF,SAAiB,sBAC5CwF,qBAAsBA,KACpBtJ,QAAQ4B,KAAK,uBAAsB,EAErC2H,oBAAsBzM,IACZkD,QAAA4B,KAAK,sBAAuB9E,EAAO,EAE7C0M,eAAiBC,IACPzJ,QAAA4B,KAAK,iBAAkB6H,EAAI,EAErCC,aAAcA,KACZ1J,QAAQ4B,KAAK,eAAc,EAE7B+H,iBAAmBF,IACTzJ,QAAA4B,KAAK,mBAAoB6H,EAAI,EAEvCG,QAAUC,IACA7J,QAAA4B,KAAK,UAAWiI,EAAM,EAEhCC,UAAY3D,IAGGwB,EAAA,IACRxB,EACH4D,QAAS5D,EAAW4D,cAAW,GACN,EAE7BC,WAAatB,IACH1I,QAAA4B,KAAK,aAAc8G,EAAO,EAEpCuB,eAAgBA,CAACC,EAAYC,EAAcrN,KACzCkD,QAAQ4B,KAAK,iBAAkBsI,EAAYC,EAAcrN,EAAO,EAElEsL,0BAED,CAACA,EAAsBT,EAActB,EAAQuB,EAAYC,IAE5D,aACGuC,EAAAA,kBAAkBC,SAAlB,CAA2B5D,MAAO6B,EAChCxE,YAGP,CC3KA,MAAMwG,EAAa1P,UAAO2P,EAAAA,WAAU;;EAI9BC,EAAO5P,EAAAA,QAAOkK,EAAAA,KAAI;;;;;EAOlB2F,EAAc7P,EAAAA,QAAO8P,EAAAA,KAAI;;EAIxB,SAASC,EAAiB9G,GAK/B,MAAM8D,aAAEA,EAAAC,WAAcA,EAAYC,KAAAA,GAAShE,GACrC+G,QAAEA,GAAY9E,IAEd2D,EAAoDlB,EAAAA,SACxD,KAAO,CACL5J,GAAI,QACJ7B,QAAS,CACP6J,OAAQ,cACRN,OAAQ,CAAEwE,IAAKhD,EAAKpJ,KAAKwD,GAAMA,EAAEiH,QAGnC4B,eAAgB,GAChBxD,MAAO,yBACP5J,KAAM,kBAER,CAACmK,KAGIkD,EAAaC,GAAkBC,WAG5B,MAEJC,EAAc7C,EAAAA,aAAY,IAAM2C,EAAe,OAAO,KAErD/D,GAAcgE,EAASA,UAAA,KAAO,CAAG,KAKxC,OAFAE,EAAAA,WAAU,IAAMH,EAAe,OAAO,CAACnD,IAEnCkD,EAEA3G,EAAAA,IAACR,EAAA,CACCwH,KAAM,EACNrH,QAAQ,qCACRC,QAASkH,EAERpH,SAAA8G,GAEExG,EAAAA,IAAAQ,EAAAA,KAAA,CAAKyG,SAAS,OAAOnG,QAAS,EAAGoG,OAAQ,EAAG3G,KAAK,WAChDb,SAACuB,EAAAA,KAAAC,EAAAA,MAAA,CAAMC,MAAO,EACZzB,SAAA,CAAAM,MAACmH,EAAAA,MAAM,CAAA5F,OAAK,EAACF,KAAM,EAAG3B,SAEtB,wBACC2G,EAAY,CAAAhF,KAAM,EAAI3B,SAAAiH,EAAY9K,MAAM8D,uBASlDyH,EAAcA,cAAA,CAAAC,QAAST,EACtBlH,SAACM,EAAAA,IAAAkG,EAAA,CACCxG,eAAC4H,EAAAA,iBACC,CAAA5H,SAAAM,EAAAA,IAACsD,EAAA,CACCrB,OAAQY,EACRU,eACAC,aACAC,OAEA/D,SAACM,EAAAA,IAAAoG,EAAA,CAAKmB,UAAU,SAASP,KAAM,EAC7BtH,SAAAM,EAAAA,IAACwH,EAAAjB,iBAAA,CACC9P,MAAO,EACPgR,OAAO,QACPpC,OACAqC,QAAQ,mBAQxB,CC/GO,SAASC,GAAkBlI,GAKhC,MAAM8D,aAAEA,EAAAC,WAAcA,EAAYC,KAAAA,GAAShE,EAErCmI,EAAoBzD,EAAAA,SACxB,IACEV,EAAKpJ,KAAI,EAAGyK,MAAKC,YAAa,CAC5BD,IAAKrG,EAAQqG,GACbC,aAEJ,CAACtB,IAID,OAAAzD,EAAAA,IAACuG,EAAA,CACChD,eACAC,aACAC,KAAMmE,GAGZ,CCNA,MAAMvB,GAAc7P,UAAO8P,EAAAA,KAAI;;EAIxB,SAASuB,GAAapI,GAO3B,MAAM2D,WAAEA,EAAYC,aAAAA,EAAApB,OAAcA,EAAQsB,aAAAA,EAAAuE,YAAcA,GAAgBrI,GAClE+G,QAAEA,GAAY9E,IAEdqG,EAAqC5D,EAAAA,SACzC,KAAO,CACL5J,GAAI6I,EACJ1K,QAAS,CACP6B,GAAI6I,EACJ9J,KAAM+J,GAERH,MAAO,GACP5J,KAAM,cAER,CAAC8J,EAAYC,KAGRsD,EAAaC,GAAkBC,WAG5B,MAEJC,EAAc7C,EAAAA,aAAY,IAAM2C,EAAe,OAAO,IAG5DG,EAAAA,WAAU,KACRH,EAAe,KAAI,GAClB,CAACxD,EAAYC,EAAcpB,IAExB,MAAA+F,mBAAEA,GAAuBC,EAAAA,cACzBC,EAAqBjE,EAAAA,aACzB,IAAM+D,GAAmB,IACzB,CAACA,IAEGG,EAAmBlE,EAAAA,aACvB,IAAM+D,GAAmB,IACzB,CAACA,IAGH,OAAIrB,EAEA3G,EAAAA,IAACR,EAAA,CACCwH,KAAM,EACNrH,QAAQ,uCACRC,QAASkH,EAERpH,SAAA8G,GAEExG,EAAAA,IAAAQ,EAAAA,KAAA,CAAKyG,SAAS,OAAOnG,QAAS,EAAGoG,OAAQ,EAAG3G,KAAK,WAChDb,SAACuB,EAAAA,KAAAC,EAAAA,MAAA,CAAMC,MAAO,EACZzB,SAAA,CAAAM,MAACmH,EAAAA,MAAM,CAAA5F,OAAK,EAACF,KAAM,EAAG3B,SAEtB,wBACC2G,GAAY,CAAAhF,KAAM,EAAI3B,SAAAiH,EAAY9K,MAAM8D,iBASnDK,EAAAA,IAACoH,EAAAA,cAAc,CAAAC,QAAST,EACtBlH,SAAAM,EAAAA,IAACmG,EAAAA,WAAA,CACCiC,MAAO,CAAE3H,OAAQ,QACjB4H,SAAUF,EACVG,WAAYJ,EAEZxI,SAAAM,EAAAA,IAACsD,EAAA,CACCC,eACAtB,SAEAvC,SAAAM,EAAAA,IAACuI,EAAAV,aAAA,CACCH,QAAQ,WACRjR,MAAO,EACPgR,OAAO,WACPpC,KAAM0C,EACND,qBAMZ,CC7GO,SAASU,GAAc/I,GAO5B,MAAMoD,WAAEA,EAAYO,WAAAA,EAAAC,aAAYA,EAAcE,aAAAA,EAAAuE,YAAcA,GAC1DrI,EACF,aACG6H,EAAAA,iBACC,CAAA5H,SAAAM,EAAAA,IAAC6H,GAAA,CACCzE,aACAC,eACApB,OAAQY,EACRU,eACAuE,iBAIR,CCpBO,SAASW,GAAchJ,GAStB,MAAAoD,WACJA,EAAAO,WACAA,EAAAC,aACAA,EAAAE,aACAA,EAAAuE,YACAA,EAAAtE,WACAA,EAAAC,KACAA,GACEhE,EAEJ,OAAI2D,GAAcC,EAEdrD,EAAAA,IAACwI,GAAA,CACC3F,aACAO,aACAC,eACAE,eACAuE,gBAMJ9H,EAAAA,IAAC2H,GAAA,CACCpE,eACAC,aACAC,QAGN,CC7Cs+B,SAAS1F,GAAEzG,GAAU,OAAAoR,SAAS/K,iBAAiB,mBAAmBrG,GAAG,IAAIoR,SAASpL,oBAAoB,mBAAmBhG,EAAE,CCmCjmC,SAAwBqR,GAAclJ,GAC9B,MAAAmJ,aACJA,EAAA9N,QACAA,EACA+N,YAAaC,EAAAC,YACbA,EAAAC,gBACAA,GACEvJ,GACGwJ,GAASpC,EAAAA,UACd,IAAM,IAAIhQ,EAAAU,QAAiC2R,OAEvCC,EAAeC,EAAAA,UAAU,CAAEC,WAAY,eACvCC,EAAenF,EAAAA,SAAQ,IAAMgF,EAAalP,UAAU,CAACkP,IACrDI,EAASpF,EAAAA,SACb,IACEgF,EAAaK,WAAW,CACtBC,gBAAiB,0BAErB,CAACN,IAEHpC,EAAAA,WAAU,KACR,GAAIjM,EAAS,CACL,MAAA4O,UAAEA,EAAWC,QAAAA,GAAYL,EACvBxO,EAAAW,KAAK,UAAW,qBAAsB,CAC5CiO,YACAC,UACAd,YAAaC,GAEjB,IACC,CAAChO,EAASwO,EAAcR,IAErB,MAAAc,EAAWzF,EAAAA,SAAQ,KACvB,MAAM0F,EAAyBb,EAAgB3O,KAAI,EAAGyK,SAAUA,IAE1D2B,EAAM,IADA,IAAIqD,IAAID,IAEdE,EAAMd,EAAMe,SAIX,OAHHvD,EAAI3J,QAAUiN,IAChBtD,EAAI3J,OAASiN,GAERtD,CAAA,GACN,CAACwC,EAAMe,SAAUhB,KAEbiB,EAA2BC,GAAgCrD,WAAS,GAE3E,OAEI5F,EAAAA,KAAAgE,WAAA,CAAAvF,SAAA,CAAAM,EAAAA,IAACmK,GAAA,CACClB,QACAM,SACAK,WACAM,iCAED/H,OAAOC,QAAQ2G,GAAa1O,KAC3B,EAAEP,GAAOsQ,QAAOnI,SAAQ4G,kBACtB7I,EAAAA,IAACqK,GAAA,CAECpB,QACAS,UAAWJ,EAAaI,UACxBC,QAASL,EAAaK,QACtBd,cACAuB,QACAnI,SACAnH,UACAyO,SACAe,gBAAiBxB,EAAoB,IAAO,EAC5CF,eACAqB,6BAXK,GAAGnQ,IAAM+O,SAiB1B,CA0BA,MAAMsB,GAAQI,EAAAA,MAAK,SAAe9K,GAChC,MAAMwJ,MAAEA,EAAAM,OAAOA,EAAQK,SAAAA,EAAAM,6BAAUA,GAAiCzK,GAE3D+K,EAAOC,GAAY5D,EAAAA,SAAqB,IAsD/C,OArDAE,EAAAA,WAAU,KACR,MAAM2D,EAAW,IAAIZ,IAAIU,EAAMG,QACzBC,MAAgBd,IACtB,IAAA,MAAWe,KAAWjB,EACfc,EAASI,IAAID,IAAa5B,EAAM6B,IAAID,IACvCD,EAAUG,IAAIF,GAGlB,MAAMG,EAAiB,IAAIJ,GAAWtS,MAAM,EAAG2S,EAAAA,GACjB,IAA1BD,EAAelO,QACnB2N,GAAUS,GAAc,IACnBA,EAAU5S,OAAO2S,KACpBD,IACD,GACA,CAACR,EAAOvB,EAAOW,IAGlB7C,EAAAA,WAAU,KACR,MAAMoE,EAAe5B,EAClB6B,OACC,IACA,CAAC,EACD,CACEC,OAAQ,CAAC,YACTC,aAAc,UACdC,yBAAyB,EACzBC,eAAe,EACfC,IAAK,wBAGRC,WAAWC,IAOV,GANoB,aAAhBA,EAAOrS,MAA6C,cAAtBqS,EAAOC,YACnC3C,EAAM4C,OAAOF,EAAOvI,aACO8G,EAAA4B,KAAKC,OAIlB,aAAhBJ,EAAOrS,OAAwBqS,EAAOK,SAASC,OAAOnP,OAAQ,OAGlE,MAAMoP,EAAiBjD,EAAMkD,KAAKR,EAAOvI,YACzC,GAAI8I,EAAkC,CAE9B,MAAAE,EAAW,IAAKF,UACfE,EAASC,KAChB,MAAMC,EAAkBC,EAAAA,WAAWH,EAAUT,EAAOK,QAAQC,OACtDhD,EAAAuD,IAAIb,EAAOvI,WAAYkJ,GACApC,EAAA4B,KAAKC,MACpC,KAEG,MAAA,IAAMZ,EAAasB,aAAY,GACrC,CAACxD,EAAOM,EAAQW,IAIdlK,EAAAA,IAAAiF,EAAAA,SAAA,CAAAvF,SAAA8K,EAAMnQ,KAAKoM,GACVzG,EAAAA,IAAC0M,GAAA,CAECzD,QACAM,SACA9C,MACAyD,gCAJKyC,KAAKC,UAAUnG,OAS9B,IAMMiG,GAAenC,EAAAA,MAAK,SAAsB9K,GAC9C,MAAM8J,OAAEA,EAAAN,MAAQA,EAAOxC,IAAAA,EAAAyD,6BAAKA,GAAiCzK,EAgBtD,OAdPsH,EAAAA,WAAU,KACF,MAAA8F,EAAapG,EAAIlE,QAAQhI,IAAQ0O,EAAM6B,IAAIvQ,KACvB,IAAtBsS,EAAW/P,QACfyM,EAAOuD,aAAaD,GAAYE,MAAMC,IACpC,IAAA,MAAWC,KAAOD,EACZC,GAAOA,GAAKnI,MACRmE,EAAAuD,IAAIS,EAAInI,IAAKmI,GACU/C,EAAA4B,KAAKC,OAEtC,GAECnQ,QAAQC,MAAK,GACf,CAACoN,EAAOM,EAAQ9C,EAAKyD,IAEjB,IACT,IAmBA,SAASG,GAAkB5K,GACnB,MAAAwJ,MACJA,EAAAS,UACAA,EAAAC,QACAA,EAAAd,YACAA,EAAAuB,MACAA,EAAAb,OACAA,EAAAe,gBACAA,EAAA1B,aACAA,EAAA9N,QACAA,EAAAmP,0BACAA,GACExK,EAEEwC,EDpQgG,SAAW1D,GAAS/E,MAAAA,EAAElC,WAAG,IAAIqV,KAAKC,UAAUrO,GAAG,KAAK,CAACA,IAAW,OAAAjH,EAAAA,SAAG,IAAIqV,KAAKO,MAAM1T,IAAI,CAACA,GAAG,CCoQjL2T,CAAe1N,EAAMwC,QAC9BvI,EA+CR,SAA8B+F,GACtB,MAAAwJ,MACJA,EAAAL,aACAA,EAAAW,OACAA,EAAAe,gBACAA,EAAAF,MACAA,EAAAnI,OACAA,EAAA4G,YACAA,EAAAoB,0BACAA,GACExK,GACG2N,EAAUC,GAAexG,WAGtB,OACJ6C,UAAEA,EAAAC,QAAWA,GAAYxF,WAAQ,KACrC,MAAQuF,UAAAA,EAAWC,QAAAA,GAAYJ,EAAOtP,SACtC,MAAO,CAAEyP,UAAAA,EAAWC,QAAAA,EAAQ,GAG3B,CAACJ,KAGG1N,EAAOyR,GAAYzG,WAAkB,MACxC,GAAAhL,EAAa,MAAAA,EAEjB,MAAO0R,EAAYC,GD9U8K,SAAWlW,GAAG,MAAMgT,gBAAgBxM,GAAGxG,EAAE8H,EAAE,WAAW,MAAM9H,EAAEkC,GAAG+E,YAAE,GAAIpG,EAAAA,WAAG,KAAKqB,EAAE4E,UAAUqP,QAAcnW,MAAAA,EAAEoW,IAAIlU,GAAE,GAAI+E,EAAEoP,IAAInU,GAAE,GAAW,OAAAuB,OAAO4C,iBAAiB,SAASrG,GAAGyD,OAAO4C,iBAAiB,UAAUY,GAAG,KAAKxD,OAAOuC,oBAAoB,SAAShG,GAAGyD,OAAOuC,oBAAoB,UAAUiB,EAAC,CAAC,GAAI,IAAI,MAAMT,EAAED,EAAAA,qBAAEE,IAAG,IAAI2K,SAASkF,kBAAkB,IAAI,WAAW,OAAItW,GAAc,WAAWwG,CAAiB,CAA1W,IAAiX+P,EAAExO,GAAGd,EAAAA,SAAE,OAAOuP,EAAEtU,EAAAA,aAAG,KAAK6F,EAAE,YAAY,IAAIA,EAAE,SAAS,IAAI,OAAOlH,aAAG,KAAQ,IAAC2F,GAAG,QAAQ+P,EAAE,OAAO,MAAMvW,EAAE+F,YAAY,IAAIgC,EAAE,UAAUvB,GAAS,MAAA,IAAIJ,aAAapG,EAAC,GAAI,CAACwG,EAAE+P,IAAI1V,aAAG,KAAK,GAAG,QAAQ0V,EAAE,OAAavW,MAAAA,EAAEyW,IAAI1O,EAAE,SAAgB,OAAAtE,OAAO4C,iBAAiB,QAAQrG,GAAG,IAAIyD,OAAOuC,oBAAoB,QAAQhG,EAAC,GAAI,CAACwG,EAAE+P,IAAI1V,aAAG,KAAKiH,GAAG,QAAQyO,GAAGxO,EAAE,SAASD,GAAG,UAAUyO,GAAGxO,EAAE,UAAS,GAAI,CAACD,EAAEyO,IAAI,CAACA,EAAEC,EAAE,CC8Uh8BE,CAAc,CAAE1D,oBAC7C2D,EAA+B,YAAfV,GAA2C,aAAfA,EAqDlD,OApDAxG,EAAAA,WAAU,KACR,IAAKkH,EACH,OAGF,IAAIC,GAAY,EACZC,GAAW,EACT,MAAAC,EAAa,IAAIC,gBAEvBC,eAAeC,IACP,MAAAC,OAAEA,GAAWJ,EACRD,GAAA,EACL,MAAAM,OAAEA,kBAAQhF,SAA0BF,EAAOmF,MAAMtE,EAAOnI,EAAQ,CACpEwJ,IAAK,sBACL+C,SACA3F,cACA8F,gBAAgB,IAEPR,GAAA,EAENK,EAAOI,UACEvB,EAAA,CAAEoB,SAAQhF,oBAEVyE,GAAA,EAEhB,CACA,MAAMW,EAAYrB,IASlB,OAROe,IACJO,OAAOjT,IACKsS,GAAA,EACQ,eAAftS,EAAMkT,MACRzB,EAASzR,EACX,IAEDmT,QAAQH,GACJ,KACAX,GAAcC,GACjBC,EAAWa,OACb,CACF,GACC,CACD1F,EACAI,EACAf,EACA3G,EACA4G,EACAa,EACAU,EACA6D,EACAT,IAGKrJ,WAAQ,IACT8F,GAA6BmD,GAAU3D,gBAClC,CACLgF,OAAQS,GACNjG,EACAL,EACAwE,EAASqB,OACT5F,EACAuE,EAAS3D,iBAEXA,gBAAiB2D,EAAS3D,iBAGvB2D,GACN,CAACnE,EAAOgB,EAA2BrB,EAAcC,EAAauE,GACnE,CA9Ie+B,CAAqB,CAChClG,QACAM,SACAX,eACA3G,SACA4G,cACAuB,QACAE,kBACAL,8BAEIwE,EAAS/U,GAAM+U,OACfhF,EAAkB/P,GAAM+P,gBAyBvB,OAvBP1C,EAAAA,WAAU,KACJ0C,GACO3O,EAAAW,KAAK,UAAW,sBAAuB,CAC9CiO,YACAC,UACAd,cACAuB,QACAnI,SACAwM,SACAhF,mBAEJ,GACC,CACD3O,EACA6O,EACA1H,EACA4G,EACAa,EACAU,EACAqE,EACAhF,IAGK,IACT,CAtEAiD,GAAa0C,YAAc,eAiL3B,IAAIC,IAAmC,EAChC,SAASH,GACdjG,EACAL,EACA6F,EACA5F,EACAY,GAEA,GAAoB,QAAhBZ,EACF,MAAM,IAAI5Q,MACR,iEAGG,OAAAqX,EAAAA,qBACLb,EACAhF,GACC8F,IACC,IAAIA,EAAeC,WAcjB,OAAA5G,GAAc9D,KACdD,EAAAA,eAAe+D,EAAa9D,OAASD,EAAAA,eAAe0K,EAAezK,KAE5D8D,EAGFK,EAAMwG,IAAIF,EAAezK,KAlBzBuK,KAEKzT,QAAA4B,KACN,2EACA+R,GAEiCF,IAAA,EAYJ,IAGrC,CAACK,GAAqBC,mBAEM,iBAAjBD,GACkB,iBAAlBC,KAGGD,IAELA,GAET7G,EAEJ,CCrca,MAAA+G,GAAgBC,gBAQnB,MAEVD,GAAcR,YAAc,gBCI5B,MAAMhJ,GAAO5P,EAAAA,QAAOsZ,GAAA;;;;EAMPC,GAAuC,UAAUrQ,SAC5DA,EAAAsQ,YACAA,EAAc,KAAAzV,GACdA,EAAA0V,SACAA,EAAAC,SACAA,EAAAC,MACAA,EAAQ,IAEF,MAAAjM,EAAUtC,aAAWgO,IAE3B,GAAgB,OAAZ1L,EACI,MAAAjM,MACJ,mEAIJ,MAAMmY,cAAEA,EAAAC,gBAAeA,EAAiBC,kBAAAA,GAAsBpM,EAExDkE,EAAQgI,EAAc7V,GAyBrB,OAvBPgW,EAAAA,iBAAgB,KACdF,EAAgB9V,EAAI,CAClBA,KACAjB,KAAM,QACN0W,cACAE,SAAUA,GAAY,KACtBD,SAAUA,GAAY,EACtBE,UAGK,KACLG,EAAkB/V,EAAE,IAErB,CACDA,EACAyV,EACAG,EACAD,EACAD,EACAI,EACAC,IAGKtQ,EAAAA,IAACoG,GAAK,CAAAgC,QAAe1I,YAC9B,ECtDA,MAAM8Q,GAAUha,EAAOe,QAAAuY,GAAA;;EAGjBW,GAAeja,EAAOe,QAAAuY,GAAA;;;;;;;YAShB,EAAGY,eAAiBA,EAAY,OAAS;;;;;;;;;;;;;IAajD,EAAGA,gBACFA,GACD;EAsBSC,GAIR,UAAYpW,GAAIqW,QAAQT,EAAOU,SAAAA,GAAW,IACvC,MAAAC,EAAKC,SAAuB,MAE5B7M,EAAUtC,aAAWgO,IAE3B,GAAgB,OAAZ1L,EACI,MAAAjM,MACJ,mEAIE,MAAAsC,EC3ED,SAAoBA,GAEzB,OADcwW,EAAAA,OAAOxW,GAAMgC,KACdyU,OACf,CDwEaC,CAAWL,IAEhBM,cACJA,EAAAC,KACAA,EAAAC,cACAA,EAAAC,aACAA,EAAAhB,gBACAA,EAAAC,kBACAA,GACEpM,EAEEoN,EAAaJ,IAAkB3W,EAErC,GAAgB,OAAZ2J,EACI,MAAAjM,MACJ,mEAIJ,MAAMsZ,EAActN,EAAAA,aACjBuN,IACeJ,EAAA7W,EAAIiX,EAAMC,YAAW,GAErC,CAAClX,EAAI6W,IAGDM,EAASzN,EAAAA,aACZ3M,IACC6Z,EAAK5W,EAAIjD,EAAC,GAEZ,CAACiD,EAAI4W,IAGDQ,EAAa1N,EAAAA,aAAY,KAC7B6M,EAAGE,QAASY,OACCP,GAAA,GACZ,CAACA,IAuBF,OArBFtK,EAAAA,WAAU,KACR,GAAKuK,IAAcT,EAKnB,OAHO9V,OAAA4C,iBAAiB,YAAa+T,GAC9B3W,OAAA4C,iBAAiB,UAAWgU,GAE5B,KACE5W,OAAAuC,oBAAoB,YAAaoU,GACjC3W,OAAAuC,oBAAoB,UAAWqU,EAAU,CAClD,GACC,CAACd,EAAUS,EAAYI,EAAQC,IAElCpB,EAAAA,iBAAgB,KACdF,EAAgB9V,EAAI,CAAEA,KAAI4V,QAAO7W,KAAM,UAAWwX,OAE3C,KACLR,EAAkB/V,EAAE,IAErB,CAACA,EAAI4V,EAAOE,EAAiBC,IAG9BtQ,EAAAA,IAACwQ,IAAQe,cAA0B3O,IAAKkO,EACtCpR,SAACuB,EAAAA,KAAAwP,GAAA,CAAaC,UAAWG,EACvBnR,SAAA,CAAAM,EAAAA,IAAC,OAAK,UACL,OAAK,QAId,EEhJgB,SAAA6R,GACdC,EACAC,GAEI,IAAAC,EACJ,MAAQ,IAAIzW,KACVmC,aAAasU,GACbA,EAAQ3U,YAAW,KACdyU,EAAA7F,MAAM6F,EAAIvW,EAAI,GAChBwW,EAAO,CAEd,CCNA,MAAME,GAAU,sBAIVC,GAAgBA,IAEbvF,KAAKO,MAAMiF,aAAaC,QAAQH,KAAY,MAM/CI,GAAmBC,GAChBA,EAAOjY,KAAKkY,GAAU,CAACA,EAAMhY,GAAIgY,EAAMpC,OAAOrR,KAAK,OAAMA,KAAK,KAGhE,SAAS0T,KAKd,OAAOrO,WAAQ,KACP,MAMAqI,EAAMA,CAAC8F,EAAwBG,KApBlB/Y,KACrByY,aAAaO,QAAQT,GAAStF,KAAKC,UAAUlT,GAAK,EA0B9CiZ,CAJa,IAFET,KAIb,CAHUG,GAAgBC,IAGnBG,GAES,EAIb,MAAA,CACLhD,IAlBW6C,GACIJ,KACHG,GAAgBC,IAiB5B9F,MACAoG,aAJmBf,GAASrF,EAAK,KAKnC,GACC,GACL,CC1CA,SAASqG,GACPN,EACAO,EACAC,GAEA,MAAQ7C,SAAU8C,EAAY/C,SAAUgD,GAAeV,EACjDrC,EACU,MAAd8C,EAAqB,IAAOA,EAAaD,EAAkB,IACvD9C,EAAYgD,EAAaF,EAAkB,IACjD,OAAOG,KAAKC,IAAIjD,EAAUgD,KAAKnJ,IAAIkG,EAAU6C,GAC/C,CAsFgB,SAAAM,GACdd,EACA/X,EACAkY,GAEA,GAAsB,IAAlBH,EAAOxV,OAAqB,MAAA,MAEhC,MACMkE,EAAQyR,EADAH,EAAOe,WAAWd,GAAUA,EAAMhY,KAAOA,KAGvD,OAAa,MAATyG,EAAsB,IAEnBA,EAAMsS,YAAY,GAC3B,CAEO,SAASC,GACd/B,EACAgC,EACAC,EAAwB,EACxBC,EAA2C,MAO3C,OALsBlC,EAAMmC,SAEfD,GAA4BF,EAAcI,yBAC5BC,KAEYJ,CACzC,CAEO,SAASK,GACdC,GAEA,MAAwB,UAAjBA,EAAQza,IACjB,CAEO,SAAS0a,GACdD,GAEA,MAAwB,YAAjBA,EAAQza,IACjB,CAEO,SAAS2a,GACdC,GAEA,OAAOva,MAAMuB,KAAKgZ,EAASC,UAAUC,MAAK,EAAGjE,MAAOkE,IAAOlE,MAAOmE,KACvD,MAALD,GAAkB,MAALC,EAAkB,EAC1B,MAALD,GAAkB,EACb,MAALC,EAAkB,EACfD,EAAIC,GAEf,CAEgB,SAAAC,GACdjC,EACAkC,EACAzB,GAGM,MAAA0B,EAAQD,EAAiBhS,QAAO,CAACiS,EAAOzT,IAAUyT,EAAQzT,GAAO,GACjEyR,EAAS,IAAI+B,GAAkBna,KAAK2G,GAAWA,EAAQyT,EAAS,MAEtE,IAAIC,EAAiB,EAErB,IAAA,IAASje,EAAQ,EAAGA,EAAQ6b,EAAOxV,OAAQrG,IAAS,CAC5C,MAAA8b,EAAQD,EAAO7b,GACfuK,EAAQyR,EAAOhc,GACfqc,EAAYD,GAAaN,EAAOvR,EAAO+R,GACzC/R,GAAS8R,IACX4B,GAAkB1T,EAAQ8R,EAC1BL,EAAOhc,GAASqc,EAEpB,CAEA,GAAkC,UAA9B4B,EAAeC,QAAQ,GACzB,IAAA,IAASle,EAAQ,EAAGA,EAAQ6b,EAAOxV,OAAQrG,IAAS,CAC5C,MAAA8b,EAAQD,EAAO7b,GAEjB,IAAAyZ,SAAEA,EAAUD,SAAAA,GAAasC,EAE7BtC,EAAYA,EAAW8C,EAAkB,IACzB,MAAZ7C,IACFA,EAAYA,EAAW6C,EAAkB,KAG3C,MAAM/R,EAAQkS,KAAKC,IACL,MAAZjD,EAAmBA,EAAW,IAC9BgD,KAAKnJ,IAAIkG,EAAUwC,EAAOhc,GAASie,IAGjC,GAAA1T,IAAUyR,EAAOhc,KACDie,GAAA1T,EAAQyR,EAAOhc,GACjCgc,EAAOhc,GAASuK,EAE4B,UAAxCkS,KAAK0B,IAAIF,GAAgBC,QAAQ,IACnC,KAGN,CAGK,OAAAlC,CACT,CCzKA,MAAMoC,GAAgBre,EAAOe,QAAAuY,GAAA;;;;;;EAQhBgF,GAA+C,UAAUpV,SACpEA,IAEM,MAAAqV,EAAWhE,SAA8B,OAExCmD,EAAUc,GAAenO,EAAAA,SAAqB,IAAIoO,KAEnD3C,EAASnO,EAAAA,SACb,IAAM8P,GAAkBC,GAAU3R,OAAOuR,KACzC,CAACI,KAGIzB,EAAQyC,GAAarO,EAAAA,SAAmB,KACxCqK,EAAeiE,GAAoBtO,WAAwB,MAE5DuO,EAAYrE,EAAAA,OAAoB,CACpCmD,WACA5B,SACAG,WAGIrC,EAAgBnM,EAAAA,aACnB1J,IACQ,CACL8a,SAAUjC,GAAcd,EAAQ/X,EAAIkY,GACpC6C,cAAiC,OAAlBpE,OAAyB,EAAY,UAGxD,CAACA,EAAeoB,EAAQG,IAGpBpC,EAAkBpM,EAAAA,aACtB,CAAC1J,EAAYb,KACXsb,GAAaO,IACP,GAAAA,EAAKzK,IAAIvQ,GAAY,OAAAgb,EACnB,MAAAlZ,EAAO,IAAI4Y,IAAIM,GAEd,OADFlZ,EAAAmQ,IAAIjS,EAAIb,GACN2C,CAAA,GACR,GAEH,IAEIiU,EAAoBrM,eAAa1J,IACrCya,GAAaO,IACP,IAACA,EAAKzK,IAAIvQ,GAAY,OAAAgb,EACpB,MAAAlZ,EAAO,IAAI4Y,IAAIM,GAEd,OADPlZ,EAAKwP,OAAOtR,GACL8B,CAAA,GACR,GACA,IAEGmZ,EAAUzE,EAAAA,OAAyB,CACvCgC,eAAgBhY,OAAO0a,WACvBC,WAAY,EACZC,WAAY,KACZC,YAAa,KACbC,cAAc,EACdC,YAAa,KACbC,OAAQ,EACRtD,OAAQ,KAGJrB,EAAgBnN,EAAAA,aACpB,CAAC1J,EAAYiX,KACL,MAAAwE,EAAc/B,GAAkBC,GAChCzd,EAAQuf,EAAY3C,WAAWvC,GAAOA,EAAGvW,KAAOA,IAEhD0b,EAAU/B,EAASzE,IAAIlV,GAC7B,IAAK0b,IAAYjC,GAAUiC,GAAU,OAC/B,MAAAC,EAAgBD,EAAQnF,GAAGE,QAC5BkF,IAELV,EAAQxE,QAAU,CAChB6E,aAAcpf,EACdmf,YAAaI,EAAYxT,QACvB,CAAC2T,EAAKrF,EAAI3Y,IAAO2b,GAAQhD,IAAO3Y,EAAI1B,EAAQqa,EAAKqF,GACjD,MAEFR,WAAYK,EAAYxT,QACtB,CAAC2T,EAAKrF,EAAI3Y,IAAe,OAARge,GAAgBrC,GAAQhD,IAAO3Y,EAAI1B,EAAQqa,EAAKqF,GACjE,MAEFpD,eAAgBhY,OAAO0a,WACvBM,OAAQvE,EAAM4E,MACdV,WAAYnC,GAAU/B,EAAO0E,GAC7BJ,YAAaI,EAActC,wBAC3BnB,OAAQ2C,EAAUpE,QAAQyB,QAG5B0C,EAAiB5a,GAAE,GAErB,CAAC2Z,IAGG7C,EAAepN,EAAAA,aAAY,KAC/BkR,EAAiB,KAAI,GACpB,IAEGhE,EAAOlN,EAAAA,aACX,CAAC1J,EAAYiX,KACXA,EAAM6E,iBACN7E,EAAM8E,kBAEA,MAAAvD,eACJA,EAAA2C,WACAA,EAAAE,YACAA,EAAAD,WACAA,EAAAG,YACAA,GACEN,EAAQxE,QAER,GAAe,MAAf4E,GAAqC,MAAdD,EACzB,OAGI,MAAAM,EAAU/B,EAASzE,IAAIlV,GAC7B,IAAK0b,IAAYjC,GAAUiC,GAAU,OAC/B,MAAAC,EAAgBD,EAAQnF,GAAGE,QACjC,IAAKkF,EAAe,OAEpB,MAAMtd,EAAS2a,GAAU/B,EAAO0E,EAAeR,EAAYI,GAE3D,GAAe,IAAXld,EACF,OAGF,MAAQ6Z,OAAQ8D,GAAenB,EAAUpE,QAInCwF,ED1JL,SACLC,EACA1D,EACA6C,EACAD,EACAe,EACAC,GAEA,MAAMrE,OAAEA,EAAQG,OAAQ8D,GAAeG,GAC/BjE,OAAQmE,GAAkBD,EAE5BlE,EAASmE,GAAiBL,EAC1BC,EAAa,IAAI/D,GAEvB,CACQoE,MAAAA,EAAaJ,EAAQ,EAAId,EAAaC,EAEtC5U,EAAQyR,EADAH,EAAOe,WAAWd,GAAUA,EAAMhY,KAAOsc,EAAWtc,MAE5DuY,EAAYD,GAChBgE,EACA7V,EAAQkS,KAAK0B,IAAI6B,GACjB1D,GAEF,GAAI/R,IAAU8R,EACL,OAAAL,EAEPgE,EAAQA,EAAQ,EAAIzV,EAAQ8R,EAAYA,EAAY9R,CAExD,CAEA,IAAI8V,EAAe,EACfD,EAAaJ,EAAQ,EAAIb,EAAcD,EACvClf,EAAQ6b,EAAOe,WAAWd,GAAUA,EAAMhY,KAAOsc,EAAWtc,KAGhE,OAAa,CACL,MAAAgY,EAAQD,EAAO7b,GACfuK,EAAQyR,EAAOhc,GAIfqc,EAAYD,GAChBN,EACAvR,GAJqBkS,KAAK0B,IAAI6B,GAASvD,KAAK0B,IAAIkC,IAKhD/D,GAGF,GAAI/R,IAAU8R,IACZgE,GAAgB9V,EAAQ8R,EACxB0D,EAAW/f,GAASqc,EAGlBgE,EACGxD,YAAY,IACZyD,cAAc7D,KAAK0B,IAAI6B,GAAOnD,YAAY,SAAK,EAAW,CACzD0D,SAAS,KACL,GAER,MAIJ,GAAIP,EAAQ,GACN,KAAEhgB,EAAQ,EACZ,WAGE,KAAEA,GAAS6b,EAAOxV,OACpB,KAGN,CAEA,OAAqB,IAAjBga,EACKrE,GAGIoE,EAAAJ,EAAQ,EAAId,EAAaC,EACtCnf,EAAQ6b,EAAOe,WAAWd,GAAUA,EAAMhY,KAAOsc,EAAWtc,KAC5Dic,EAAW/f,GAASgc,EAAOhc,GAASqgB,EAE7BN,EACT,CCwEyBS,CAFJre,EADFmc,EAAS/D,QAAS4C,wBACF5S,MAAS,IAIpC+R,EACA6C,EACAD,EACAP,EAAUpE,QACVwE,EAAQxE,SAGJkG,EAAgBX,EAAWhd,MAC/B,CAAC4d,EAAWhf,IAAMgf,IAAcX,EAAWre,KAGzC+e,GACFhC,EAAUsB,EACZ,GAEF,CAACtC,IAIH3D,EAAAA,iBAAgB,KACd6E,EAAUpE,QAAQkD,SAAWA,EAC7BkB,EAAUpE,QAAQsB,OAASA,EAC3B8C,EAAUpE,QAAQyB,OAASA,CAAA,GAC1B,CAACyB,EAAU5B,EAAQG,IAEtB,MAAM2E,EAAU5E,KAGhBjC,EAAAA,iBAAgB,KACd,MAAQkC,OAAAA,GAAW2C,EAAUpE,QAEzByB,GAAAA,EAAO3V,SAAWwV,EAAOxV,OAC3B,OAGI,MAAAua,EAAeD,EAAQ3H,IAAI6C,GAEjC,GAAI+E,EAAc,CAChB,MAAMC,EAAwB/C,GAC5BjC,EACA+E,EACAtc,OAAO0a,YAGT,YADAP,EAAUoC,EAEZ,CAEM,MAAAC,EDhBH,SAA0BjF,GAC/B,IAAIkF,EAAqBlF,EAAOxV,OAC5B2a,EAAsB,IAE1B,MAAMC,EAAkBpF,EAAOjY,KAAKkY,GAC9BA,EAAMvC,aACRyH,GAA4ClF,EAAMvC,YAClDwH,GAA0C,EACnCjF,EAAMvC,aAER,OAGH2H,EAAeF,EAAsBD,EAMpC,OALQE,EAAgBrd,KAAK2G,GACpB,OAAVA,EAAuB2W,EACpB3W,GAIX,CCJ0B4W,CAAiBtF,GACvC4C,EAAUqC,EAAa,GACtB,CAACH,EAAS9E,IAGbvL,EAAAA,WAAU,KACH0L,EAAO3V,QACJsa,EAAAxE,aAAaN,EAAQG,EAAM,GAClC,CAAC2E,EAAS9E,EAAQG,IAErBlC,EAAAA,iBAAgB,KACR,MAAAsH,EAAiB,IAAIC,gBAAe,KACxC,MAAQxF,OAAAA,EAAQG,OAAQ8D,GAAenB,EAAUpE,QAE3CwF,EAAajC,GAAejC,EAAQiE,EAAYxb,OAAO0a,YAEvDyB,EAAgBX,EAAWhd,MAC/B,CAAC4d,EAAWhf,IAAMgf,IAAcX,EAAWre,KAEzC+e,GACFhC,EAAUsB,EACZ,IAKF,OAFeqB,EAAAE,QAAQhD,EAAS/D,SAEzB,KACL6G,EAAeG,YAAW,CAC5B,GACC,IAEH,MAAM9T,EAAUC,EAAAA,SACd,KAAO,CACL+M,gBACAC,OACAf,gBACAC,kBACAe,gBACAC,eACAf,uBAEF,CACEY,EACAC,EACAf,EACAC,EACAe,EACAC,EACAf,IAKF,OAAAtQ,EAAAA,IAAC4P,GAAc3J,SAAd,CAAuB5D,MAAO6B,EAC7BxE,SAAAM,EAAAA,IAAC6U,GAAc,CAAAjS,IAAKmS,EAAWrV,cAGrC,EC3QauY,GAIT,SAAUxY,GACZ,MAAMC,SAAEA,EAAUwY,SAAUC,GAAc1Y,EAEpCyY,EAAWjU,EAAAA,aACdhB,IACCkV,EAAU,CAAC,EAAG,CAAElV,WAAS,GAE3B,CAACkV,IAGGjU,EAAUC,EAAAA,SACd,IAAM+T,GACN,CAACA,IAGH,aACGE,EAAAA,EAA4BnS,SAA5B,CAAqC5D,MAAO6B,EAC1CxE,YAGP,EClBO,SAAS2Y,GACd5Y,GAEM,MAAA6Y,mBAAEA,GAAuB7Y,EAEzB8Y,IAAsBD,GAAoBE,WACzCC,EAAmBC,GCvBZ,SACd5e,EACA6e,GAEM,MAACtW,EAAOuW,GAAY/R,EAAAA,UAAY,IACpC8F,KAAKO,MAAMiF,aAAaC,QAAQtY,IAAQ6S,KAAKC,UAAU+L,MAOlD,OAJP5R,EAAAA,WAAU,KACRoL,aAAaO,QAAQ5Y,EAAK6S,KAAKC,UAAUvK,GAAM,GAC9C,CAACvI,EAAKuI,IAEF,CAACA,EAAOuW,EACjB,CDUmDC,CAC/C,yBACAN,GAEIO,IAAmBP,GAAoBE,EACvCM,EAAkB5U,EAAAA,SAAQ,KAC9B,GAAKoU,EAEL,MAAO,IAAMG,GAAqBM,IAAaA,GAAO,GACrD,CAACT,EAAmBG,IAEjBO,EAAYhV,EAAAA,aAChB,WACE,yBAAUvE,SAAoBoZ,GAAA9Y,MAACkZ,GAAW,IAAGZ,KAC/C,GACA,CAACQ,EAAkBR,IAGrB,MAAO,CAAC,CAAEQ,mBAAkBC,mBAAmBE,EACjD,CAeA,MAAMC,GAAY3O,QAblB,SAA4B9K,GAC1B,MAAMwQ,SAAEA,EAAAC,SAAUA,EAAUsI,UAAWW,GAAuB1Z,EACxD2Z,EACQ,MAAZnJ,GAAgC,MAAZC,GAAoBD,IAAaC,EACvD,OAEIjP,EAAAA,KAAAgE,WAAA,CAAAvF,SAAA,CAACM,EAAAA,IAAA+P,GAAA,CAAMxV,GAAG,YAAY0V,WAAoBC,WAAoBC,MAAO,EACnEzQ,SAAAM,EAAAA,IAACmZ,EAAA,CAAA,KAEFnZ,EAAAA,IAAA2Q,GAAA,CAAaR,MAAO,EAAGU,SAAUuI,MAGxC,IErDaC,GAIT,SAAU5Z,GACN,MAAAC,SAAEA,EAAUuC,OAAAA,GAAWxC,EAEvByE,EAAUC,EAAAA,SAA4B,IAAMlC,GAAQ,CAACA,IAE3D,aACGqX,EAAAA,EAA0BrT,SAA1B,CAAmC5D,MAAO6B,EACxCxE,YAGP,ECPa6Z,GAQT,SAAU9Z,GACZ,MAAMC,SAAEA,EAAUmD,WAAAA,EAAA2D,QAAYA,OAASuI,EAAMmJ,SAAAA,EAAAjW,OAAUA,GAAWxC,EAE5DyE,EAAUC,EAAAA,SACd,KAAO,CACLtB,aACA2D,UACAuI,OACAmJ,WACAjW,YAEF,CAACY,EAAY2D,EAASuI,EAAMmJ,EAAUjW,IAGxC,aACGJ,EAAAA,EAAoBoE,SAApB,CAA6B5D,MAAO6B,EAClCxE,YAGP,ECpCa8Z,GAASC,SAAOjjB,EAAAA,QAAOkjB,MAAA;;;;;GCWvBC,GAMR,SAAUla,GACb,MAAMma,SAAEA,EAAW,KAAQC,EAAAA,sBAAsBC,iBAAmB,IAC9D5Z,SAAEA,EAAW,EAAG6Z,SAAAA,EAAAje,OAAUA,UAAQgF,EAAU,EAAAuB,MAAGA,GAAU5C,EACzDua,EAAWjJ,SAAgC,OAC1CkJ,EAAcC,GAAmBrT,EAAAA,cACtC,IAEKsT,EAAgBC,GAAqBvT,EAAAA,cAC1C,GAGIwT,EAAepW,eAAauN,IAChB0I,EAAA1I,EAAM8I,cAAcjY,MAAK,GACxC,IAEGkY,EAAgBtW,EAAAA,aACnBuN,IACK,GAAc,UAAdA,EAAM1X,IAAiB,CACzB,QAAqB,IAAjBmgB,EACF,OAGI,MAAAO,EACJP,EAAalgB,WAAW,MAAyB,KAAjBkgB,EACzB,GAAAne,IAASme,IACZA,EAEN,IACGO,EAAczgB,WAAW+B,EAAS,MACnC0e,IAAkB1e,EAGlB,YADkBse,EAAA,uBAAuBte,KAKzC,IAACA,IACA0e,EAAczgB,cAAc6f,OAC3BY,IAAkBZ,GAKpB,YAHAQ,qDACqDR,KAKvD,MAAMa,EACJD,IAAkB1e,EAASA,EAAS,IAAM0e,EAE5CJ,OAAkB,GAClBF,OAAgB,GAEhBH,EAASU,EAAUniB,MAAMwD,EAAOgB,SAEhCkd,EAAShJ,SAASY,MACpB,CAEkB,WAAdJ,EAAM1X,MACRsgB,OAAkB,GAClBF,OAAgB,GAClB,GAEF,CAACN,EAAUG,EAAUje,EAAQme,IAGzBS,EAAazW,EAAAA,aAAY,KAC7BmW,OAAkB,GAClBF,OAAgB,EAAS,GACxB,IAEHnT,EAAAA,WAAU,KACRqT,OAAkB,GAClBF,OAAgB,EAAS,GACxB,CAACpe,EAAQuG,IAEZ,MAAMsY,EAAyCxW,EAAAA,SAC7C,KAAO,CAAEyW,KAAMC,EAAAA,aACf,IAGF,OAEI7a,MAAAiF,EAAAA,SAAA,CAAAvF,SAAAM,EAAAA,IAAC8a,EAAAA,UAAA,CACCC,YAAaZ,EAAiBQ,OAAc,EAC5CR,iBACAja,WACA8a,OAAQN,EACRO,QAASA,KACPb,OAAkB,GAClBF,EAAgBpe,EAASuG,EAAK,EAEhC0X,SAAUM,EACVa,iBAAkBX,EAClBzZ,UACAsH,MAAO,CAAE+S,OAAQ,GACjBjU,OAAQ,EACRtE,IAAKoX,EACL7Y,MAAOL,EACPuB,WAAwB,IAAjB4X,KAAgCne,IAASuG,IAAU4X,KAIlE,EC1DMmB,GAAa3B,SAAO/Y,EAAAA,MAEpB2a,GAAe7kB,EAAAA,QAAO8kB,EAAAA,OAAM;;;;;;;;;;;;;;;;;;;;;;;;EA0B5BC,GAAwD,CAC5DC,cAAe,SACfC,UAAW,YACXC,IAAK,OAGDC,GACW,UADXA,GAEO,WAIPC,GAA8D,CAClEJ,cAAeK,EAAAA,SACfJ,UAAWK,EAAAA,YACXJ,IAAKK,EAAAA,cAoBMC,GAAerZ,EAAAA,YAC1B,SAAsBlD,EAAOmD,GACrB,MAAAqZ,WACJA,EAAA/f,aACAA,EAAA4c,iBACAA,EAAAoD,aACAA,EAAAC,UACAA,EAAAC,eACAA,EAAAna,OACAA,EAAA4G,YACAA,EAAAwT,eACAA,EAAAtD,gBACAA,EAAAuD,cACAA,EAAAC,kBACAA,EAAAC,mBACAA,EAAAC,qBACAA,GACEhd,GAEE+G,QAAEA,GAAY9E,KAEbvB,EAAMuc,GAAW7V,WAA+B,WACjD8V,EAAuBC,EAAAA,0BAEvBC,EAAiB5Y,EAAAA,aAAY,IAAMyY,EAAQ,YAAY,CAACA,IACxDI,EAAgB7Y,EAAAA,aAAY,IAAMyY,EAAQ,WAAW,CAACA,KACrDK,EAASC,GAAcnW,YAAS,IAChCoW,EAAUC,GAAerW,YAAS,IAClCsW,EAAYC,GAAiBvW,YAAS,IACtCwW,EAAkBC,GAAuBzW,YAAS,GACnD0W,EACJR,GAAWI,GAAqC,eAAvBX,EAErBgB,EAAwBrZ,EAAAA,SAAQ,IAC7BjI,IAAiBuhB,SAAS3hB,OAAS,GAAKI,GAC9C,CAACA,IAEEwhB,EAAgBzZ,EAAAA,aAAY,KACb,mBAARrB,GAAuBA,GAAKoO,UAOvCpO,EAAIoO,QAAQ2M,IAAM,GAAGzhB,IAAe+F,EAAOgB,SAAW,MAEtDma,GAAc,GAAI,GACjB,CAACnb,EAAOgB,QAAS/G,EAAc0G,IAC5BkE,EAAc7C,EAAAA,aAAY,KACX,mBAARrB,GAAuBA,GAAKoO,UAInCpO,EAAAoO,QAAQ2M,IAAM1B,EAAW5jB,WAE7B+kB,GAAc,GAAI,GACjB,CAACxa,EAAKqZ,IACH2B,EAAuB3Z,EAAAA,aAAY,KACvC4Z,GAAkB,EAAI,GACrB,KAEIC,EAAgBD,GAAqBhX,YAAS,IAC9CkX,EAA8BC,GACnCnX,YAAS,GACXE,EAAAA,WAAU,KACR,KAAIgW,GAAWI,GAKU,eAAvBX,GACuB,iBAAvBA,GACA,CACM,MAAAzK,EAAU1U,YAAW,KACzB2gB,GAA+B,EAAI,GAClC,KACI,MAAA,IAAMtgB,aAAaqU,EAC5B,CACA,GACC,CACDyK,EACAO,EACAI,EACAa,IAGFjX,EAAAA,WAAU,KACJ,IAAAgW,IAAWI,GAAeY,EAA1B,CASJ,GAN2B,cAAvBvB,IACFc,GAAoB,GACpBU,GAA+B,GAC/Bd,GAAY,GACZW,GAAkB,IAEO,eAAvBrB,EAAqC,CACjC,MAAAzK,EAAU1U,YAAW,KACzB6f,GAAY,GAEJthB,QAAAC,MACN,wHACF,GACCoiB,EAA+BC,GAC3B,MAAA,IAAMxgB,aAAaqU,EAC5B,CACA,GAA2B,iBAAvByK,EAAuC,CACnC,MAAAzK,EAAU1U,YAAW,KACzB6f,GAAY,GACZI,GAAoB,EAAI,GACvBW,EAA+BC,GAC3B,MAAA,IAAMxgB,aAAaqU,EAC5B,CAC2B,iBAAvByK,GACFc,GAAoB,EAzBtB,CA2BA,GACC,CAACP,EAASP,EAAoBW,EAAYY,IAEvC,MAAAI,EAAuBha,EAAAA,SAAQ,KACnC,MAAMX,EAAa,IAAI4a,IAAInc,EAAOgB,SAAW,IAAK/G,IAC5CmiB,SAAEA,EAAAC,OAAUA,GAAWtnB,4BAA0BwM,GAEhD,MAAA,GAAG6a,IAAWC,GAAM,GAC1B,CAACrc,EAAOgB,QAAS/G,IAEdqiB,EAAeta,EAAAA,aAAY,KAC/B+Y,GAAW,GACXI,GAAc,EAAK,GAClB,IAGD,OAAApd,EAAAA,IAACwe,EAAAA,aAAA,CACC5S,WAAY+Q,EAAuB,CAAE8B,SAAU,QAAM,EAErD/e,SAAAuB,EAAAA,KAACyd,EAA0BA,0BAAA,CAAAC,MAAO,IAChCjf,SAAA,CAAAM,EAAAA,IAACQ,EAAAA,KAAA,CACCwG,KAAK,OACLlG,QAAS,EACT8d,OAAQ,EACRxW,MAAO,CAAEyW,SAAU,YAEnBnf,SAAAuB,EAAAA,KAACP,EAAAA,KAAK,CAAAC,MAAM,SAASme,IAAK,EAAG1W,MAAO,CAAE2W,UAAW,GAC9Crf,SAAA,CACCqZ,GAAA/Y,EAAAA,IAACgf,EAAAA,QAAA,CACCC,SAAO,EACPC,QAASlf,EAAAA,IAACoB,OAAK,CAAAC,KAAM,EAAG3B,SAAgB,qBACxCyf,mBAAoB,CAAC,gBACrBre,QAAS,EACTse,UAAU,SACVC,QAAM,EAEN3f,SAAAM,EAAAA,IAACC,EAAAA,OAAA,CACC,aAAW,mBACXC,SAAU,EACV0a,KAAM0E,EAAAA,cACNnf,KAAK,QACLC,QAAS2Y,EACTjY,QAAS,EACTye,SAAUzG,MAKhB9Y,EAAAA,IAACgf,EAAAA,QAAA,CACCC,SAAO,EACPC,eACGxe,OAAK,CAAAC,MAAM,SAASyH,MAAO,CAAEoX,WAAY,UACxC9f,SAAA,CAACM,EAAAA,IAAAyB,EAAAA,IAAA,CAAIX,QAAS,EACZpB,SAACM,EAAAA,IAAAoB,EAAAA,KAAA,CAAKC,KAAM,EACT3B,SAAA0c,EACG,uBACA,0BAGRpc,EAAAA,IAACyB,EAAAA,IAAI,CAAAge,SAAU,EACb/f,SAAAM,EAAAA,IAAC0f,EAAAA,QAAA,CACCC,KAAM,CAAC,OACPvX,MAAO,CAAEwX,WAAW,EAAIC,cAAiB,UAKjDV,mBAAoB,CAAC,gBACrBre,QAAS,EACTse,UAAU,SACVC,QAAM,EAEN3f,SAAAM,EAAAA,IAACQ,EAAAA,KAAA,CACCsf,GAAG,QACH9Y,KAAK,OACLlG,QAAS,EACTsH,MAAO,CACL2X,WAAY,EACZC,aAAc,IACdC,WAAY,QAEd1f,KAAM6b,EAAiB,gBAAa,EAEpC1c,SAACuB,EAAAA,KAAAP,EAAAA,KAAA,CAAKC,MAAM,SAASme,IAAK,EACxBpf,SAAA,CAAAM,MAAC,MAAI,CAAAoI,MAAO,CAAE8X,WACZxgB,SAAAM,EAAAA,IAACqb,GAAA,CACC8E,QAAS/D,EACTrC,SAAUuC,EACVzL,SAAU0M,MAGdvd,EAAAA,IAACyB,EACCA,IAAA,CAAA/B,SAAAM,EAAAA,IAACoB,EAAAA,KAAK,CAAAG,OAAK,EAACF,KAAM,EAAGC,OAAO,SAAS5B,SAAA,kBAQ5C8G,GACCxG,EAAAA,IAACgf,EAAAA,QAAA,CACCC,SAAO,EACPC,QACGlf,EAAAA,IAAAoB,EAAAA,KAAA,CAAKC,KAAM,EACT3B,SAAAyd,EAAa,cAAgB,oBAGlCgC,mBAAoB,CAAC,gBACrBre,QAAS,EACTse,UAAU,SACVC,QAAM,EAEN3f,SAAAM,EAAAA,IAACC,EAAAA,OAAA,CACC,aAAW,kBACXC,SAAU,EACV0a,KAAMwF,EAAAA,YACNjgB,KAAK,QACL4c,QAASI,EACT/c,QAASsd,EACT5c,QAAS,MAKfd,EAAAA,IAACyB,EAAAA,IAAI,CAAAuF,KAAM,EACTtH,SAAAM,EAAAA,IAAC2Z,GAAA,CACCI,SAAUmC,EACVpgB,OAAQ0hB,EACRnb,MAAO8b,YAIVzd,EAAAA,KAAK,CAAAC,MAAM,SAASqG,KAAK,OAAO8X,IAAK,EACpCpf,SAAAM,EAAAA,IAACqgB,EAAAA,WAAA,CACCC,OACEtgB,EAAAA,IAACC,EAAAA,OAAA,CACCC,SAAU,EACVqgB,UAAWC,EAAAA,UACXrgB,KAAK,QACLW,QAAS,EACTK,MAAO,IAGX5G,GAAG,gBACHkmB,WACGC,OACC,CAAAhhB,SAAAM,EAAAA,IAAC2gB,GAAA,CACC1E,aACAE,YACAqB,wBACAW,2BAINyC,QAAS,CACP3B,SAAS,EACT4B,eAAe,EACfzB,UAAW,SACXC,QAAQ,aAKb3e,EAAAA,KAAK,CAAAC,MAAM,SAASqG,KAAK,OAAO8X,IAAK,EACpCpf,SAAAM,EAAAA,IAACqgB,EAAAA,WAAA,CACCC,OACEtgB,EAAAA,IAACC,EAAAA,OAAA,CACCC,SAAU,EACVqgB,UAAWO,EAAAA,gBACX3gB,KAAK,QACLW,QAAS,EACTK,MAAO,EACPd,KAAMkb,GAAmB1S,GACzBkU,QACEQ,GACuB,eAAtBhB,GAC0B,cAAzBE,EAEJ5L,SAAgC,cAAtB0L,IAGdhiB,GAAG,mBACHkmB,KACGxf,EAAAA,KAAAyf,EAAAA,KAAA,CAAKtY,MAAO,CAAE8H,SAAU,KACvBxQ,SAAA,CAAAM,EAAAA,IAAC+gB,EAAAA,SAAA,CACC7gB,SAAU,EACVE,QAASA,IAAMic,EAAe,iBAC9Bvb,QAAS,EACTkgB,QAAyB,kBAAhBnY,EACTtI,KAAMob,GAENjc,SAACuB,EAAAA,KAAAP,EAAAA,KAAA,CAAKC,MAAM,aAAame,IAAK,EAC5Bpf,SAAA,CAAAM,EAAAA,IAACyB,OAAIuF,KAAK,OACRtH,SAACM,MAAAoB,EAAAA,KAAA,CAAKC,KAAM,EACT3B,SAAAuhB,EAAAA,cACCrF,GAAiC,mBAItC3a,EAAAA,KAAAC,EAAAA,MAAA,CAAM8F,KAAM,EAAG7F,MAAO,EACrBzB,SAAA,CAAAM,EAAAA,IAACoB,QAAKC,KAAM,EAAGC,OAAO,SACnB5B,SAAA6b,GAAkC,sBAEpCna,EAAAA,KAAK,CAAAG,OAAK,EAACF,KAAM,EAAG3B,SAErB,gDAEFM,EAAAA,IAACyB,EAAAA,IAAI,CAAAuF,KAAK,OACRtH,SAAAM,EAAAA,IAACoB,EAAAA,KAAA,CACCG,OAAK,EACLF,KAAM,EACN+G,MAAO,CACL8Y,QACkB,kBAAhBrY,EAAkC,EAAI,GAG1CnJ,eAACyhB,EAAcA,cAAA,aAKvBnhB,EAAAA,IAAC+gB,EAAAA,SAAA,CACC7gB,SAAU,EACVE,QAASA,IAAMic,EAAe,aAC9Bvb,QAAS,EACTkgB,QAAyB,cAAhBnY,EACTtI,KAAMob,GAENjc,SAACuB,EAAAA,KAAAP,EAAAA,KAAA,CAAKC,MAAM,aAAame,IAAK,EAC5Bpf,SAAA,CAAAM,EAAAA,IAACyB,EAAIA,IAAA,CAAAuF,KAAK,OACRtH,SAAAM,EAAAA,IAACoB,OAAK,CAAAC,KAAM,EACT3B,SAAAuhB,gBAAcrF,GAA6B,eAG/C3a,EAAAA,KAAAC,EAAAA,MAAA,CAAM8F,KAAM,EAAG7F,MAAO,EACrBzB,SAAA,CAAAM,EAAAA,IAACoB,QAAKC,KAAM,EAAGC,OAAO,SACnB5B,SAAA6b,GAA8B,kBAEhCna,EAAAA,KAAK,CAAAG,OAAK,EAACF,KAAM,EAAG3B,SAErB,6CAEFM,EAAAA,IAACyB,EAAAA,IAAI,CAAAuF,KAAK,OACRtH,SAAAM,EAAAA,IAACoB,EAAAA,KAAA,CACCG,OAAK,EACLF,KAAM,EACN+G,MAAO,CACL8Y,QAAyB,cAAhBrY,EAA8B,EAAI,GAG7CnJ,eAACyhB,EAAcA,cAAA,gBAO3BP,QAAS,CACP3B,SAAS,EACT4B,eAAe,EACfzB,UAAW,SACXC,QAAQ,cAKb3e,EAAAA,KAAK,CAAAC,MAAM,SAASqG,KAAK,OAAO8X,IAAK,EACpCpf,SAAA,CAAAM,EAAAA,IAACgf,EAAAA,QAAA,CACCC,SAAO,EACPC,QAASlf,EAAAA,IAACoB,OAAK,CAAAC,KAAM,EAAG3B,SAAa,kBACrCyf,mBAAoB,CAAC,gBACrBre,QAAS,EACTse,UAAU,SACVC,QAAM,EAEN3f,SAAAM,EAAAA,IAACC,EAAAA,OAAA,CACC,aAAW,gBACXC,SAAU,EACV0a,KAAMwG,EAAAA,YACNjhB,KAAK,QACLC,QAASyc,EACT/b,QAAS,EACTye,SAAmB,YAATpf,MAGdH,EAAAA,IAACgf,EAAAA,QAAA,CACCC,SAAO,EACPC,QAASlf,EAAAA,IAACoB,OAAK,CAAAC,KAAM,EAAG3B,SAAe,oBACvCoB,QAAS,EACTse,UAAU,SACVC,QAAM,EAEN3f,SAAAM,EAAAA,IAACC,EAAAA,OAAA,CACC,aAAW,kBACXC,SAAU,EACV0a,KAAMyG,EAAAA,iBACNlhB,KAAK,QACLC,QAAS0c,EACThc,QAAS,EACTye,SAAmB,WAATpf,cAOnBH,EAAAA,IAAAQ,EAAAA,KAAA,CAAKwG,KAAM,EAAGzG,KAAK,cAClBb,SAAAuB,EAAAA,KAACP,EAAAA,KAAA,CACCC,MAAM,SACNF,OAAO,OACPG,QAAQ,SACRE,QAAkB,YAATX,EAAqB,EAAI,EAClCY,OAAO,SACPqH,MAAO,CACLyW,SAAU,WACVyC,OAAQ/D,EAAe,YAAS,GAGlC7d,SAAA,CAACM,EAAAA,IAAAuhB,EAAAA,gBAAA,CACE7hB,SAAC2d,GACDN,GACAI,IACDY,GACCD,GA6EIf,IAAWQ,GAAkBO,EA2B9BT,IAAqBS,EACvB9d,EAAAA,IAACob,GAAA,CACCoG,QAAQ,UACRvC,QAAQ,UACRwC,KAAK,OACLC,SAAUC,GACV/gB,QAAQ,SACRD,MAAM,SACNyH,MAAO,CACLwZ,WAAY,uBACZC,MAAO,IACPhD,SAAU,WACViD,UAAW,wBACXC,UAAW,sCAGbriB,SAAAM,EAAAA,IAACR,EAAA,CACCwH,KAAM,EACNrH,QAAQ,mCACRC,QAASkH,EACTjH,iBAAkB+d,EAEjBle,YAEIuB,EAAAA,KAAAgE,EAAAA,SAAA,CAAAvF,SAAA,CAAuB,cAAvB8c,GACCxc,MAACQ,EAAAA,KAAK,CAAAM,QAAS,EAAGoG,OAAQ,EAAG3G,KAAK,WAChCb,SAAAuB,EAAAA,KAACC,EAAMA,MAAA,CAAAC,MAAO,EACZzB,SAAA,CAAAM,MAACmH,EAAAA,MAAM,CAAA5F,OAAK,EAACF,KAAM,EAAG3B,SAEtB,8BACCM,EAAAA,IAAAsG,EAAAA,KAAA,CAAKjF,KAAM,EAAI3B,SAAmB8c,SAKlB,cAAtBD,GACEvc,MAAAQ,EAAAA,KAAA,CAAKM,QAAS,EAAGoG,OAAQ,EAAG3G,KAAK,WAChCb,SAACuB,EAAAA,KAAAC,EAAAA,MAAA,CAAMC,MAAO,EACZzB,SAAA,CAAAM,MAACmH,EAAAA,MAAM,CAAA5F,OAAK,EAACF,KAAM,EAAG3B,SAEtB,6BACCM,EAAAA,IAAAsG,EAAAA,KAAA,CAAKjF,KAAM,EAAI3B,SAAkB6c,gBAQ9C,KA3EFvc,EAAAA,IAACob,GAAA,CACCoG,QAAQ,UACRvC,QAAQ,UACRwC,KAAK,OACLC,SAAUM,GACVphB,QAAQ,SACRD,MAAM,SACNyH,MAAO,CACLyZ,MAAO,IACPhD,SAAU,YAIZnf,SAAAuB,EAAAA,KAACP,EAAAA,KAAA,CACC0H,MAAO,IAAK6Z,GAAM9hB,IAClBS,QAAQ,SACRD,MAAM,SACN4G,UAAU,SACVuX,IAAK,EAELpf,SAAA,CAACM,EAAAA,IAAAkiB,EAAAA,QAAA,CAAQ3gB,OAAK,UACbH,EAAAA,KAAK,CAAAG,OAAK,EAACF,KAAM,EAAG3B,SAErB,kBApGJM,EAAAA,IAACob,GAAA,CACCoG,QAAQ,UACRvC,QAAQ,UACRwC,KAAK,OACLC,SAAUM,GACVphB,QAAQ,SACRD,MAAM,SACNyH,MAAO,CACLyZ,MAAO,IACPhD,SAAU,WACVsD,eAAgBlF,EACZ,0CACA,YACJrR,WACE,mCAEFwW,qBAAsBnF,EAClB,0CACA,YACJoF,iBACE,2CACFlH,OAAQ,GAGVzb,SAAAuB,EAAAA,KAACP,EAAAA,KAAA,CACC0H,MAAO,IAAK6Z,GAAM9hB,IAClBS,QAAQ,SACRD,MAAM,SACN4G,UAAU,SACVuX,IAAK,EAEJpf,SAAA,CACCud,GAAAjd,EAAAA,IAACC,EAAAA,OAAA,CACC4Q,UAAQ,EACR3Q,SAAU,EACVC,KAAK,QACLE,KAAK,kBACL+H,MAAO,CAAE8Y,QAAS,KAGtBlhB,EAAAA,IAACQ,EAAAA,KAAA,CACC0G,OAAQ,EACR3G,KAAM0c,EAAW,UAAY,UAC7Bnc,QAAS,EACT8d,OAAQ,EAERlf,SAAAuB,EAAAA,KAACP,EAAAA,KAAA,CACCE,QAAQ,SACRD,MAAM,SACN4G,UAAU,SACVuX,IAAK,EAELpf,SAAA,CAACM,EAAAA,IAAAkiB,EAAAA,QAAA,CAAQ3gB,OAAK,IACdvB,EAAAA,IAACoB,EAAKA,KAAA,CAAAG,OAAK,EAACF,KAAM,EACf3B,SACCud,EAAAjd,EAAAA,IAAAiF,EAAAA,SAAA,CAAEvF,SAGF,uEAEA,qBAKPud,GACCjd,EAAAA,IAACC,EAAAA,OAAA,CACCC,SAAU,EAEVK,KAAK,WACLH,QAASwd,EACTvd,KAAK,2BAmFjBL,EAAAA,IAACwZ,GAAA,CACC5W,MACAwF,MAAO,CACLkN,cACEiI,IAAiBO,EAAiB,OAAS,OAC7CiE,UAAW,qCACXD,UAAW,yBAEbnE,IAAK1B,EAAW5jB,WAChBmpB,QAAS,CAAC,cACVE,SAAUY,GACVrD,QAAS,EACNlC,IAAWQ,GAAkBO,EAE1B,SADA,aAEJX,EAAa,YAAc,OAC3Bhd,EACA4d,IAAiCD,EAC7B,WACA,IAENyE,OAAQhE,aAOtB,IAGI0D,GAAQ,CACZO,QAAS,CACPxhB,MAAO,OACPP,OAAQ,QAEVgiB,OAAQ,CACNzhB,MAAO,IACPP,OAAQ,MAINuhB,GAAkB,CACtBR,QAAS,CAAEN,QAAS,GACpBjC,QAAS,CAAEiC,QAAS,CAAC,EAAG,EAAG,IAC3BO,KAAM,CAAEP,QAAS,CAAC,EAAG,EAAG,KAGpBS,GAAgB,CACpBH,QAAS,CAAEN,QAAS,GACpBjC,QAAS,CAAEiC,QAAS,CAAC,EAAG,EAAG,IAC3BO,KAAM,CAAEP,QAAS,CAAC,EAAG,EAAG,KAGpBoB,GAAiB,CACrBE,QAAS,IACJP,GAAMO,QACTT,UAAW,sCAEbU,OAAQ,IACHR,GAAMQ,OACTV,UAAW,sCAEbH,WAAY,CACVV,QAAS,EACTwB,MAAO,GAETC,KAAM,CACJD,MAAO,GAETE,UAAW,CACTF,MAAO,CAAC,EAAG,EAAG,EAAG,MAEnBG,OAAQ,CACN3B,QAAS,CAAC,EAAG,EAAG,GAChBwB,MAAO,GAETzF,SAAU,CACRiE,QAAS,CAAC,EAAG,EAAG,KAIpB,SAASP,GACPlhB,GAKA,MAAMwc,WAAEA,EAAAE,UAAYA,EAAWqB,sBAAAA,EAAAW,qBAAuBA,GACpD1e,EAEIqjB,EAAkB7e,EAAAA,aACrBuN,IACCA,EAAM6E,iBACI8F,EAAA3K,EAAM8I,cAAcyI,KAAI,GAEpC,CAAC5G,IAGH,OAEIlb,EAAAA,KAAAgE,WAAA,CAAAvF,SAAA,CAAAM,EAAAA,IAACgjB,GAAA,CACC/G,aACAuB,wBACAW,yBAEFne,EAAAA,IAAC+gB,EAAAA,SAAA,CACCnG,KAAMqI,EAAAA,WACN5iB,KAAK,eACLyf,GAAG,IACHiD,KAAM,GAAGvF,IAAwBW,IACjC/d,QAAS0iB,EACTI,IAAI,SACJhpB,OAAO,aAIf,CAEA,SAAS8oB,GACPvjB,GAKA,MAAMwc,WAAEA,EAAAuB,sBAAYA,EAAuBW,qBAAAA,GAAyB1e,GAE5DrH,KAAM+qB,GAAcC,EAASA,WAC/B7Z,EAASH,EAAAA,UAAU,CAAEC,WAAYga,EAAAA,IACjCC,EAAcC,EAAAA,kBACb1S,EAAU2S,GAAe3c,YAAS,GAGvC,OAAA7G,EAAAA,IAAC+gB,EAAAA,SAAA,CACClQ,WACAzQ,QAASA,KACH,IAAChC,WAAWqlB,UAMP,OALGN,EAAA,CACRO,UAAU,EACVhpB,OAAQ,QACRwI,MAAO,6BAEF,EAIT,IAAI3I,EAFJipB,GAAY,GAGZ,IAAIG,EAAM,GAAGnG,IAAwBW,IACrC,MAAMtP,EAAYA,KACNsU,EAAA,CACR5oB,KACAmpB,UAAU,EACVhpB,OAAQ,UACRwI,MAAO,uCAETsgB,GAAY,EAAK,EAEbI,EAAW/nB,IACLsnB,EAAA,CACRO,UAAU,EACVhpB,OAAQ,QACRwI,MAAO,cACP2gB,YAAahoB,EAAM8D,SAAW9D,EAAMxD,aAEtCmrB,GAAY,EAAK,EAEnB,GACEM,EAAsBA,sBAAA7H,IACG,oBAAlB8H,cACP,CACA,MAAMzqB,EAAO,aAuBP0qB,EAAO,IAAID,cAAc,CAC7BzqB,CAACA,GAvBuBgV,WACxB/T,EAAK4oB,EAAU,CACbO,UAAU,EACVxgB,MAAO,8BAET,MAAM+gB,QAAyBC,EAAAA,oBAC7B3a,EACA,uBACkB,oBAAXxO,OAAyB,GAAK0iB,SAASsF,KAC9CO,GAAa/oB,IAGT4pB,EAASC,EAAAA,sBACbnI,EACAgI,EAAiBI,OACjBlG,GAGF,OADAwF,EAAMQ,EAAO9rB,WACN,IAAIisB,KAAK,CAACX,GAAM,CAAErqB,QAAM,EAKvBirB,KAEAnmB,UAAAqlB,UAAUe,MAAM,CAACR,IAAOjX,KAAK8B,GAAWC,MAAM8U,EAAO,MAErDxlB,UAAAqlB,UAAUgB,UAAUd,GAAK5W,KAAK8B,GAAWC,MAAM8U,EAC3D,EAEFvjB,KAAK,YACLua,KAAM8J,EAAAA,UAGZ,CCv5BA,IAAIrV,IAAmC,ECIvC,SAASsV,GAAwDliB,GAC/D,OAAON,OAAO4B,YACZ5B,OAAOC,QAAQK,GAAKF,QAClB,EAAC,CAAGF,UAAqB,IAAVA,GAAiC,KAAVA,GAA0B,OAAVA,IAG5D,CAEO,SAASuiB,IAAUC,kBACxBA,EAAAC,eACAA,EAAAphB,YACAA,EAAAG,mBACAA,EAAAkhB,WACAA,IAcM,MAAA9iB,EAASkC,EAAAA,SAA4B,KACzC,MAAM5J,GAAEA,EAAIyqB,KAAAA,EAAA1rB,KAAMA,G5BXb,CACLiB,GAAIkE,GAHNsE,E4Ba8CW,G5BV1BnJ,IAClByqB,KAAMjmB,EAAUgE,EAAMiiB,MACtB1rB,KAAMyJ,EAAMzJ,MANT,IACLyJ,E4BeS,MAAA,CACLxI,KACAjB,OACA0rB,OACA/hB,QACEY,EAAmBZ,SACnB,GAAG4hB,EAAkBxG,WAAWwG,EAAkBvG,SACpDzV,YAAahF,EAAmBgF,YAChClD,QAAS9B,EAAmB8B,QAC5Bsf,IAAKphB,EAAmBohB,IACxBC,MAAOrhB,EAAmBqhB,MAC1BC,SAAUthB,EAAmBshB,SAC7BC,KAAMvhB,EAAmBuhB,KAEzBC,QAASxhB,EAAmBwhB,QAC5BC,YAAazhB,EAAmByhB,YAEhCC,QAAS1hB,EAAmB0hB,QAC9B,GACC,CAAC7hB,EAAaG,EAAoBghB,IAE/BhiB,EAAasB,EAAAA,SAAgC,IAClCwgB,GAAY,CACzBhf,QAAS1D,EAAO0D,QAChBqf,KAAM/iB,EAAO+iB,KACbC,IAAKhjB,EAAOgjB,IACZC,MAAOjjB,EAAOijB,MACdC,SAAUljB,EAAOkjB,SACjBC,KAAMnjB,EAAOmjB,KAEbC,QAASpjB,EAAOojB,QAChBC,YAAarjB,EAAOqjB,YAEpBC,QAAStjB,EAAOsjB,WAGjB,CACDtjB,EAAO0D,QACP1D,EAAO+iB,KACP/iB,EAAOgjB,IACPhjB,EAAOijB,MACPjjB,EAAOkjB,SACPljB,EAAOmjB,KACPnjB,EAAOojB,QACPpjB,EAAOqjB,YACPrjB,EAAOsjB,UAGHC,EAAiBzU,SAAOrN,GAE9BqD,EAAAA,WAAU,KACRye,EAAexU,QAAUtN,CAAA,GACxB,CAACA,IA6CG,MAAA,CACLb,aACAqV,SA7Ce/T,EAAAA,SACf,IACE0N,IACE,CAAC4T,EAAWC,EAAkB,GAAIC,KAEhC,MAAQ3iB,cAAea,KAAuBH,GAC5C8hB,EAAexU,QAGX4U,GAAqB/hB,GAAsB,IAAIrB,QACnD,CAAC2T,GAAMrc,EAAKuI,MACT8T,EAAIrc,GAAyCuI,EAAQ8T,IAExD,CAAC,GAIGpT,EAAqB4hB,GAAY,IAClCjhB,KACA+hB,IAICI,EAAclB,GAAY,IAC3BiB,KACAF,IAGL3iB,EAAMC,cAAgBb,OAAOC,QAAQyjB,GAAarjB,QAChD,CAAC2T,GAAMrc,EAAKuI,KAAW,IAAI8T,EAAK,CAACrc,EAAKuI,KACtC,IAGF,MAAMyjB,EACJH,GAAgBE,EAAY5iB,UAAY8hB,EAAW/T,QAEtC8T,EAAA/hB,EAAO,CAAE+iB,WAAS,GAEnC,KAEJ,CAAChB,EAAgBC,IAMjB9iB,SAEJ,CCnIgB,SAAA8jB,GACdviB,EACAwiB,EACAC,GAEA,MAAM1c,EAASH,EAAAA,UAAU,CAAEC,WAAYga,EAAAA,IACjC6C,EAAYrM,EAAAA,qBACZD,EAAWsM,GAAWpM,iBAAiBF,UAAY,IAEnDuM,EAoDR,SACEH,EACApM,EACAwM,GAEA,MAAM9C,EAAcC,EAAAA,iBACb,OAAApf,EAAAA,SACL,IAAM,CAEJ,uBACAyV,EACAwM,EACAJ,EACA1C,GAAa/oB,GACb8rB,KAEF,CAACzM,EAAU0J,GAAa/oB,GAAIyrB,EAAUI,GAE1C,CAtEeE,CAAoBN,EAAUpM,EADrBsM,GAAWpM,iBAAiB/K,MAAQ,WAEpDkV,EAuER,SACEjL,EACAmN,GAEA,MAAM5c,EAASH,EAAAA,UAAU,CAAEC,WAAYga,EAAAA,IACjCC,EAAcC,EAAAA,kBACbgD,EAAqBC,GAA0B3f,WAAiB,IAEjEod,EAAmBjL,EACrByN,EAAAA,SAAQnY,eACO4V,EAAAA,oBACX3a,EACA,uBACkB,oBAAXxO,OAAyB,GAAK0iB,SAASsF,KAC9CO,GAAa/oB,KAEd,IAAI4rB,EAAMI,IACb,KAYJ,OAVAxf,EAAAA,WAAU,KACR,IAAKkd,EAAkB,OACjB,MAAAlS,EAAU1U,YAAW,KACzBqpB,EAAAA,iBAAgB,IACdF,EAAuBvC,EAAiB0C,UAAUtuB,aACpD,GACC4rB,EAAiB0C,UAAUC,UAAY9a,KAAKC,OACxC,MAAA,IAAMrO,aAAaqU,EAAO,GAChC,CAACkS,IAEGA,GAAkBI,QAAU,IACrC,CArG2BwC,CACD,iBAAfrjB,GAAiD,mBAAfA,EACzC2iB,GAEF,OAAOM,WAAQnY,UACT,GAAsB,iBAAf9K,EAAyB,CAClC,MAAMsjB,EAAc,IAAI1I,IAAI5a,EAAYia,SAAS3hB,QACjD,IAAIirB,EAAYD,EACZ,IACF,GAAIb,EAAoB,CACtB,MAAMe,EAAc,IAAI5I,IAAI6H,EAAoBa,GAC5CE,EAAYlrB,SAAWgrB,EAAYhrB,SACzBirB,EAAAC,EACd,MACF,GAAWte,SAASue,SAAU,CAC5B,MAAMC,EAAc,IAAI9I,IAAI1V,SAASue,UACjCC,EAAYprB,SAAWgrB,EAAYhrB,SACzBirB,EAAAG,EAEhB,CAAA,CACM,MAER,CAEA,OACEzJ,SAAS3hB,SAAWirB,EAAUjrB,SAC7BirB,EAAU1I,SAAStkB,WAAW,GAAG6f,OAChCmN,EAAU1I,WAAazE,EAIpBmN,EAFED,CAGX,CACA,MAAMvC,EACkB,iBAAf/gB,EACHrM,EAAAA,iBAA+BqM,GAC/BA,EACAsjB,QAAoBvC,EAAkB,CAC1Chb,SACA0a,mBACAgC,qBACAgB,SAA8B,oBAAbve,SAA2B,KAAOA,SAASue,SAC5DE,eAAgBvN,IAElB,OAAO,IAAIwE,IAAI0I,EAAarJ,SAAS3hB,OAAM,GAC1C,IAAIqqB,EAAMlC,GACf,CAGA,MAAMoC,GAAce,SCZpB,MAAMvmB,GAAYrK,UAAOkK,EAAAA,KAAI;;EA8a7B2mB,QAAA9vB,QA1aA,SAAyCkI,GAGjC,MAAE+D,WAAY8jB,EAAaC,WAAAA,GAAe9nB,EAAM+nB,KAAK9uB,SAAW,GAChEqW,EAAOtP,EAAM+nB,KAAKzY,MAAQ0Y,EAAAA,GAC1BnP,mBAAEA,GAAuBiP,GAAc,IAErCrP,SAAU4M,EAAgB/hB,MAAOW,GACvCE,EAAAA,YACIC,EAAqBC,EAAAA,UACzB3B,OAAO4B,YAAYL,EAAYV,eAAiB,KAG5C6hB,EAAoBkB,GACxBuB,GAAe,IACfvY,EACAlL,EAAmBZ,SAAW,OAGzBuD,GAAWK,EAAAA,UAAS,KACnB,MAAA6gB,EAASjoB,EAAM+nB,KAAK9uB,SAAS8N,QAEnC,MAAsB,mBAAXkhB,EAA8BA,IACnB,kBAAXA,EAA6BA,EAGpB,oBAAX3sB,QAAuD,cAA7BA,OAAO0iB,SAASkK,QAAa,IAI5DzrB,EAAeiI,EAAAA,SAAQ,IACpB0gB,EAAkB/oB,QACxB,CAAC+oB,EAAkB/oB,SAEhB8rB,EAAY7W,SAA0B,OAErCjW,EAAS+sB,GAAchhB,EAA+CA,YAEtEkC,EAAa+e,GAAkBjhB,EAAAA,SAA2B,CAAE,GAE7Dke,EAAahU,EAAAA,UAEb9O,OAAEA,EAAAY,WAAQA,EAAYqV,SAAAA,GAAa0M,GAAU,CACjDC,oBACAC,iBACAphB,cACAG,qBACAkhB,gBAGKlc,EAAawT,GAAkBxV,EAAAA,UAA4B,IACzC,cAAvB5E,EAAO4G,YAA8B5G,EAAO4G,YAAc,mBAGrDG,EAAiB+e,GH5GnB,SACLlf,GAKI,GAAgB,cAAhBA,GAA+C,kBAAhBA,EACjC,MAAM,IAAI5Q,MAA8B,wBAAA4Q,KAG1C,MAAO4S,EAAWuM,GAAgBnhB,EAAAA,SAAyC,CAAE,IACtE2U,EAAeyM,GAAoBphB,EAAAA,SAExC,CAAE,GAEEkhB,EAAqB9jB,EAAAA,aACzB,CAAC4E,EAAgCqf,KAC/B,MAAMlb,EAAYkb,EAAgB3lB,QAAQgN,GACpC,eAAgBA,GAAkBA,EAAeC,YAE9CH,KAEKzT,QAAA4B,KACN,2EACA+R,GAEiCF,IAAA,IAE9B,GAEFE,KAIS,cAAhB1G,EAA8Bmf,EAAeC,IAErC1S,IACR,MAAMlZ,EAAuC,CAAA,EAC7C,IAAA,MAAWqM,KAAYsE,EAChB3Q,EAAAqM,EAAS5D,KAAO4D,EAEvB,OAAOxR,EAAQK,QAAAge,EAAMlZ,GAAQkZ,EAAOlZ,CAAA,GACrC,GAEH,IASK,MAAA,CANiB8H,EAAAA,SAAQ,IACP,cAAhB0E,EACH,IAAI1G,OAAOgS,OAAOsH,IAClB,IAAItZ,OAAOgS,OAAOqH,KACrB,CAAC3S,EAAa2S,EAAeC,IAEPsM,EAC3B,CGsDgDI,CAAmBtf,IAE1DuT,EAAgBgM,GAAqBvhB,YAAS,GAE/C6C,EAAY2e,EAAAA,eACZ1e,EAAU2e,EAAAA,aAGhBvhB,EAAAA,WAAU,KACJ8B,IAAgB5G,EAAO4G,aACzBqP,EACE,CAAC,EACD,CACErP,YAA6B,cAAhBA,EAA8B,iBAAc,GAG/D,GACC,CAAC5G,EAAO4G,YAAaA,EAAaqP,IAErC,MAAOsE,EAAoB+L,GACzB1hB,WAAwB,eACnB0V,EAAmBiM,GACxB3hB,WAAwB,eACnB4V,EAAsBgM,GAC3B5hB,WAAwB,eAEnB6hB,GAAU7hB,EAAAA,UAAsB,IAAM,IAAIiD,MAC3CgZ,EAAkB7e,EAAAA,aACrB0f,IACC,MAAMgF,EAAS5tB,OAAO6tB,KAAKjF,EAAK,UAC5BgF,GACFD,EAAO3d,IAAI4d,EACb,GAEF,CAACD,IAGH3hB,EAAAA,WAAU,KACJ,GAAA2hB,EAAOrnB,MAAQvG,EAEjB,IAAA,MAAW6tB,KAAUD,EACfC,GAAU,WAAYA,IAAWA,EAAOE,QAC1C/tB,EAAQguB,UAAUH,EAGxB,GACC,CAAC7tB,EAAS4tB,EAAQA,EAAOrnB,OAE5B0F,EAAAA,WAAU,KACF,MAAA7M,EAAS0tB,EAAU5W,SAAS+X,cAElC,IAAK7uB,EAAQ,OAEb,MAAM8uB,EjCzJH,SACL/uB,GAEA,MAAM2D,QAAEA,EAAAnC,KAASA,GAASzB,EAAiCC,GACrDgvB,MAAcnf,IACdof,MAAmBC,QAInBC,MAAoBtf,IAwBnB,MAAA,CACLlM,QARmByrB,KACXzrB,IACR,IAAA,MAAWA,KAAWwrB,EACpBxrB,GACF,EAKAnC,KAxBkB6tB,CAAC/uB,EAAIjB,EAAMI,KACxB+B,EAAAlB,EAAIjB,EAAMI,GACf,IAAA,MAAWivB,KAAUM,EAEjBN,GACA,WAAYA,IACXA,EAAOE,QACRK,EAAape,IAAI6d,IAEJO,EAAazZ,IAAIkZ,EAC9BltB,CAAMlB,EAAIjB,EAAMI,EAEpB,EAaAovB,SAAAA,CAAUH,GACJ,GAAAM,EAAQne,IAAI6d,GACd,OAEE,KAAE,WAAYA,GAGV,MADN/sB,QAAQ4B,KAAK,wBAAyB,CAAEmrB,WAClC,IAAI1wB,MAAM,yBAElB,GAAI0wB,EAAOE,OACH,MAAA,IAAI5wB,MAAM,oBAElB,MAAQwD,KAAAA,EAAMmC,QAAAA,GAAY5D,EAAiC,IACtDC,EACHC,OAAQyuB,EAGRvuB,UAAWH,EAAOG,UAAUC,KAAKkvB,IAE/B,MAAMjtB,eAAEA,EAAAd,QAAgBA,KAAYpB,GAAcmvB,EAE3C,MAAA,IACFnvB,EACHoB,QAASA,EACH,CAAClC,EAAMI,KACP,GACW,0BAATJ,GACS,qBAATA,GACS,qBAATA,EAMK,OAAAkC,EAAQlC,EAAMI,EAAI,OAE3B,EACN,MAGJ0vB,EAAcre,IAAInN,GACLsrB,EAAA1c,IAAImc,EAAQltB,GACzBwtB,EAAQle,IAAI4d,EACd,EAEJ,CiCwEwBa,CAA2C,CAC7DjvB,GAAI,eACJL,SACAgC,eACA9B,UAAW,CACT,CACEG,GAAI,WACJK,WAAW,EACX0B,eAAgBisB,EAChB/sB,OAAAA,CAAQlC,EAAMI,GACR,GAAS,kBAATJ,GAA4B,OAAQI,EAC7Bwe,EAAA,CACP5e,KAAMI,EAAKJ,KACXiB,GAAIb,EAAKa,GACTyqB,KAAMtrB,EAAKsrB,YAEf,GAAoB,qBAAT1rB,GACL,GAAAyrB,EAAW/T,UAAYtX,EAAKiqB,IAAK,CAC7B,MAAA8F,OAA6C,IAAvB1E,EAAW/T,QAEvC+T,EAAW/T,QAAUtX,EAAKiqB,IAExBzL,EADEuR,EACO,CAAI,EAGX,CAAElvB,QAAI,EAAWjB,UAAM,GAHZ,CAAE2J,QAASvJ,EAAKiqB,KAOjC,MACkB,mBAATrqB,GACT8uB,EAAkB1uB,EAAKsf,QAE3B,GAEF,CACEze,GAAI,UACJK,WAAW,EACX0B,eAAgBksB,EAChBhtB,OAAAA,CAAQlC,EAAMI,GACZ,GACW,qBAATJ,GACAI,EAAKgQ,YAAcA,GACnBhQ,EAAKiQ,UAAYA,EAEEoe,EAAAruB,EAAKmP,YAAanP,EAAKsT,gBAC5C,GACW,wBAAT1T,GACAI,EAAKgQ,YAAcA,GACnBhQ,EAAKiQ,UAAYA,EACjB,CACA,GAC4B,iBAAnBjQ,EAAKkB,WACZlB,EAAKkB,UAAa8uB,IAElB,MAAM,IAAIzxB,iEACmDyxB,EAA0C7b,OAGzGia,GAAgBvS,IAAU,UACrBA,EACH,E/BzOwF/b,E+ByOtEE,EAAK0Q,M/BzOmEvM,E+ByO5DnE,EAAKuI,O/BzOgE,GAAGzI,KAAK,iBAAiBqE,EAAEA,EAAE8O,KAAKC,UAAU/O,O+ByOlG,CAC3CgL,YAAanP,EAAKmP,YAClBuB,MAAO1Q,EAAK0Q,MACZnI,OAAQvI,EAAKuI,OACb0nB,WAAY7d,KAAKC,MACjBnR,UAAWlB,EAAKkB,YAAa,I/B9O8C,IAAWpB,EAAEqE,C+BgP1F,GACJ,CACF,GAEF,CACEtD,GAAI,cACJK,WAAW,EACX0B,eAAgBmsB,EAChBjtB,OAAAA,CAAQlC,EAAMI,GAED,0BAATJ,GACAI,EAAKgQ,YAAcA,GACnBhQ,EAAKiQ,UAAYA,GAEEoe,EAAAruB,EAAKmP,YAAanP,EAAKsT,UAE9C,MAMN,OAFA6a,EAAWmB,GAEJ,KACLA,EAAYprB,UACZiqB,OAAW,EAAS,CACtB,GACC,CAACle,EAASD,EAAWqe,EAAoB7P,EAAUhc,IAEtD6K,EAAAA,WAAU,KACR,MAAMpM,EAAW6B,aACf,IACEkqB,EAAAA,iBAAgB,IACdoB,GAAgB/e,IACd,GAAI5G,OAAOwd,KAAK5W,GAAajM,OAAS,EAC7BiM,OAAAA,EAGH,MAAAgD,EAAMD,KAAKC,MAMjB,IALsB5J,OAAOgS,OAAOpL,GAAaxP,MAC9CqwB,IACyB,IAAxBA,EAAUhvB,WACVmR,EAAM6d,EAAUD,WAAaC,EAAUhvB,YAGlCmO,OAAAA,EAET,MAAM1M,EAAO,CAAA,EACb,IAAA,MAAYvC,EAAKuI,KAAUF,OAAOC,QAAQ2G,IAElB,IAApB1G,EAAMzH,WACNmR,EAAM1J,EAAMsnB,WAAatnB,EAAMzH,YAIjCyB,EAAKvC,GAAOuI,GAEP,OAAAhG,CAAA,OAGbqtB,EAAA7b,GAEK,MAAA,IAAM7S,cAAcL,EAAQ,GAClC,IAEH,MAAMkvB,EAAkB5lB,EAAAA,aACrB6lB,IAEU5R,EAAA,CAAE8M,KAAM/lB,aAAW5G,SAASyxB,IAAa,IAAI,EAAI,GAE5D,CAAC5R,IAGG6R,EAAoB9lB,EAAAA,aACvB6lB,IACC,MAAMnG,EAAM,IAAIvF,IAAI0L,EAAUjF,EAAkB/oB,QAC1CmH,EAAU0gB,EAAItF,SAAWsF,EAAIrF,OAEjCqF,EAAI7nB,SAAW+oB,EAAkB/oB,QACjCmH,IAAYhB,EAAOgB,SAEViV,EAAA,CAAE3d,QAAI,EAAWyqB,UAAM,GAAa,CAAE/hB,WACjD,GAEF,CAAC4hB,EAAmB5iB,EAAQiW,IAGxB8R,EAAmB/lB,EAAAA,aACtBpB,IACUqV,EAAA,CAAA,EAAIrV,EAAU,GAEzB,CAACqV,IAGHnR,EAAAA,WAAU,KACJ9E,EAAO1H,IAAM0H,EAAO+iB,KACblqB,GAAAW,KAAK,WAAY,qBAAsB,CAC9ClB,GAAI0H,EAAO1H,GACXyqB,KAAM/iB,EAAO+iB,OAGNlqB,GAAAW,KAAK,WAAY,yBAAqB,EACjD,GACC,CAACX,EAASmH,EAAO1H,GAAI0H,EAAO+iB,OAG/Bje,EAAAA,WAAU,KAENge,EAAW/T,SACX/O,EAAOgB,SACP8hB,EAAW/T,UAAY/O,EAAOgB,UAE9B8hB,EAAW/T,QAAU/O,EAAOgB,QACD,cAAvBuZ,GAAsCoL,EAAU5W,QAClD4W,EAAU5W,QAAQ2M,IAAM,GAAGzhB,IAAe+F,EAAOgB,UAExCnI,GAAAW,KAAK,WAAY,wBAAyB,CACjDkoB,IAAK1hB,EAAOgB,QACZ3J,KAAM,YAGZ,GACC,CAACwB,EAAS0hB,EAAoBtgB,EAAc+F,EAAOgB,UAEtD,MAAMqZ,EAAgBrY,EAAAA,aACpB,IAAMnJ,GAASW,KAAK,WAAY,kCAA8B,IAC9D,CAACX,KAGImvB,EAAmBC,GAAwBrjB,WAEhD,MAEFE,EAAAA,WAAU,KACF,MAAAojB,EAAe7yB,IACf8yB,EAAS9yB,IACGglB,GAChB,EAEI+N,EAAiB/yB,IACjB8yB,EAAS9yB,IACGglB,IAGZgO,EAAS,CAAC,MAAO,MAAOhzB,IACZglB,GAChB,EAIF,OAFOvhB,OAAA4C,iBAAiB,UAAW0sB,GAC5BtvB,OAAA4C,iBAAiB,QAASwsB,GAC1B,KACEpvB,OAAAuC,oBAAoB,UAAW+sB,GAC/BtvB,OAAAuC,oBAAoB,QAAS6sB,EAAW,CACjD,GACC,CAAC7N,IAEE,MAACiO,GAAiBC,IAAsB3jB,EAAAA,SAC5C,QAGKiS,iBAAEA,GAAAC,gBAAkBA,IAAmB0R,IAC5CpS,GAAyB,CAAEC,uBAGvBoS,GAAQ3Z,EAAAA,OAA2B9O,EAAO1H,IAQhD,OAPAwM,EAAAA,WAAU,KACJ9E,EAAOgjB,KAAOyF,GAAM1Z,SAAW/O,EAAO1H,KAAOmwB,GAAM1Z,SACrDkH,EAAS,CAAA,EAAI,CAAE+M,SAAK,IAEtByF,GAAM1Z,QAAU/O,EAAO1H,EAAA,IAKrB0G,EAAAA,KAAAgE,WAAA,CAAAvF,SAAA,CAAAM,EAAAA,IAACuZ,GAAA,CACC1W,aACA2D,UACAuI,OACA9M,SACAiW,WAEAxY,SAAAM,EAAAA,IAACiY,GAA6B,CAAAC,WAC5BxY,SAACM,EAAAA,IAAAqZ,GAAA,CAA2BpX,SAC1BvC,SAAAM,MAACa,GAAU,CAAAJ,OAAO,OAChBf,SAAAuB,EAAAA,KAAC6T,GACC,CAAApV,SAAA,CAAAM,EAAAA,IAACyqB,GAAsB,IACvBzqB,EAAAA,IAAC+P,GAAA,CACCxV,GAAG,UACH0V,SAAU,IACVD,YAAa8I,GAAmB,GAAK,GACrC3I,MAAO,EAEPzQ,SAAAM,EAAAA,IAACU,EAAAA,KAAA,CACC6G,UAAU,SACVP,KAAM,EACNvG,OAAO,OACPmC,IAAK4nB,GAEL9qB,SAAAM,EAAAA,IAAC2qB,EAAwBA,wBAAA,CAAA5W,QAASwW,GAChC7qB,SAAAM,EAAAA,IAACgc,GAAA,CACCC,WAAY4I,EACZ/L,oBACAoD,aAAc6N,EACd5N,UAAW2G,EACX1G,iBACAna,SACA4G,cACAjG,IAAKglB,EACLvL,iBACAngB,eACA6c,mBACAuD,gBACAC,oBACAC,qBACAC,+BAKRzc,EAAAA,IAAC2Q,GAAa,CAAAR,MAAO,UACpBJ,GAAM,CAAAxV,GAAG,UAAU0V,SAAU,IAAKE,MAAO,EACxCzQ,SAAAM,EAAAA,IAAC4qB,EAAAC,EAAA,CACCznB,WAAYnB,EAAO1H,GACnB2vB,uBAEAxqB,SAAAM,EAAAA,IAACyI,GAAA,CACChF,KAAMuF,EACNnG,aACAO,WAAYnB,EAAO1H,GACnB8I,aAAcpB,EAAO3I,KACrBiK,aAAcymB,EACdliB,YAAa+hB,EACbrmB,WAAYvB,EAAOgB,yBASlCnI,GACCkF,EAAAA,IAAC2I,GAAA,CACC7N,UACAiO,cACAF,cACAD,aAAcqhB,EACdjhB,sBAKV","x_google_ignoreList":[0,1,2,3]}