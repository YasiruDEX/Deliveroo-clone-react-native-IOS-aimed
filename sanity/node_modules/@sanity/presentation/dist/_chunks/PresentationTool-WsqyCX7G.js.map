{"version":3,"file":"PresentationTool-WsqyCX7G.js","sources":["../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../../channels/src/constants.ts","../../../channels/src/helpers.ts","../../../channels/src/controller.ts","../../../visual-editing-helpers/dist/_chunks/urlStringToPath-FefM00gz.js","../../../visual-editing-helpers/dist/index.js","../../src/lib/parse.ts","../../src/components/ErrorCard.tsx","../../src/usePresentationTool.ts","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentListPanel.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/ContentEditor.tsx","../../../visual-editing-helpers/dist/hooks.js","../../src/loader/LoaderQueries.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/PanelResizer.tsx","../../src/panels/usePanelId.ts","../../src/lib/debounce.ts","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/PresentationNavigateProvider.tsx","../../src/PresentationNavigator.tsx","../../src/useLocalState.ts","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/PreviewFrame.tsx","../../src/useDocumentsOnPage.ts","../../src/useParams.ts","../../src/usePreviewUrl.ts","../../src/PresentationTool.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { ChannelMsgType } from './types'\n\nexport const RESPONSE_TIMEOUT = 1000\nexport const HEARTBEAT_INTERVAL = 1000\nexport const HANDSHAKE_INTERVAL = 500\n\nexport const INTERNAL_MSG_TYPES = [\n  'channel/disconnect',\n  'channel/response',\n  'channel/heartbeat',\n] satisfies ChannelMsgType[]\n\nexport const HANDSHAKE_MSG_TYPES = [\n  'handshake/syn',\n  'handshake/syn-ack',\n  'handshake/ack',\n] satisfies ChannelMsgType[]\n","import { HANDSHAKE_MSG_TYPES, INTERNAL_MSG_TYPES } from './constants'\nimport { ChannelMsgType, HandshakeMsgType, InternalMsgType } from './types'\n\nexport const isInternalMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is InternalMsgType => {\n  return INTERNAL_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isHandshakeMessage = (\n  type: ChannelMsgType | InternalMsgType,\n): type is HandshakeMsgType => {\n  return HANDSHAKE_MSG_TYPES.some((t) => t === type)\n}\n\nexport const isLegacyHandshakeMessage = ({\n  data = {},\n}: MessageEvent): boolean => {\n  return (\n    // Check data is a record type\n    typeof data === 'object' &&\n    data !== null &&\n    !Array.isArray(data) &&\n    // The \"domain\" key was introduced in commit 4854e7f\n    !('domain' in data) &&\n    // Check the rest of the object shape is present\n    ['id', 'type', 'from', 'to'].every((key) => key in data) &&\n    // Prior to 4854e7f only handshake events were emitted prior to an established connection\n    data.type.startsWith('handshake/')\n  )\n}\n","import { v4 as uuid } from 'uuid'\n\nimport {\n  HANDSHAKE_INTERVAL,\n  HEARTBEAT_INTERVAL,\n  RESPONSE_TIMEOUT,\n} from './constants'\nimport { isHandshakeMessage, isLegacyHandshakeMessage } from './helpers'\nimport type {\n  ChannelMsg,\n  ChannelsController,\n  ChannelsControllerChannel,\n  ChannelsControllerOptions,\n  ChannelStatus,\n  InternalMsgType,\n  ProtocolMsg,\n  ToArgs,\n} from './types'\n\nexport function createChannelsController<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): ChannelsController {\n  const { destroy, send } = createChannelsControllerInternal(config)\n  const sources = new Set<MessageEventSource>()\n  const sendToSource = new WeakMap<\n    MessageEventSource,\n    ChannelsController['send']\n  >()\n  const destroySource = new Set<ChannelsController['destroy']>()\n\n  const sendToMany = ((id, type, data) => {\n    send(id, type, data)\n    for (const source of sources) {\n      if (\n        source &&\n        'closed' in source &&\n        !source.closed &&\n        sendToSource.has(source)\n      ) {\n        const send = sendToSource.get(source)\n        send!(id, type, data)\n      }\n    }\n  }) satisfies ChannelsController['send']\n\n  const destroyMany = (() => {\n    destroy()\n    for (const destroy of destroySource) {\n      destroy()\n    }\n  }) satisfies ChannelsController['destroy']\n\n  return {\n    destroy: destroyMany,\n    send: sendToMany,\n    addSource(source) {\n      if (sources.has(source)) {\n        return\n      }\n      if (!('closed' in source)) {\n        // eslint-disable-next-line no-console\n        console.warn('Source is unsupported', { source })\n        throw new Error('Source is unsupported')\n      }\n      if (source.closed) {\n        throw new Error('Source is closed')\n      }\n      const { send, destroy } = createChannelsControllerInternal({\n        ...config,\n        target: source,\n        // @TODO temporary workaround for onStatusUpdate and onEvent not differentiating\n        //       iframes from popups\n        connectTo: config.connectTo.map((prevConnectTo) => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { onStatusUpdate, onEvent, ...connectTo } = prevConnectTo\n\n          return {\n            ...connectTo,\n            onEvent: onEvent\n              ? (((type, data) => {\n                  if (\n                    type === 'preview-kit/documents' ||\n                    type === 'overlay/navigate' ||\n                    type === 'loader/documents'\n                  ) {\n                    return\n                  }\n\n                  // @ts-expect-error -- figure out ToArgs complaining\n                  return onEvent(type, data)\n                }) satisfies typeof onEvent)\n              : undefined,\n          }\n        }),\n      })\n      destroySource.add(destroy)\n      sendToSource.set(source, send)\n      sources.add(source)\n    },\n  }\n}\n\nfunction createChannelsControllerInternal<T extends ChannelMsg>(\n  config: ChannelsControllerOptions<T>,\n): Omit<ChannelsController, 'addSource'> {\n  const target = config.target\n\n  const channels: ChannelsControllerChannel<T>[] = config.connectTo.map(\n    (config) => ({\n      buffer: [],\n      config,\n      id: '',\n      handler: handshakeHandler,\n      status: 'connecting',\n      interval: undefined,\n      heartbeat: undefined,\n    }),\n  )\n\n  function startHandshake(channel: ChannelsControllerChannel<T>) {\n    channel.id = uuid()\n    channel.interval = window.setInterval(() => {\n      sendHandshake(channel, 'handshake/syn', { id: channel.id })\n    }, HANDSHAKE_INTERVAL)\n  }\n\n  function stopHandshake(channel: ChannelsControllerChannel<T>) {\n    window.clearInterval(channel.interval)\n  }\n\n  function isValidMessageEvent(\n    e: MessageEvent,\n  ): e is MessageEvent<ProtocolMsg<T>> {\n    const { data, origin } = e\n    return (\n      data.domain === 'sanity/channels' &&\n      data.to == config.id &&\n      channels.map((channel) => channel.config.id).includes(data.from) &&\n      data.type !== 'channel/response' &&\n      origin === config.targetOrigin\n    )\n  }\n\n  function handshakeHandler(e: MessageEvent<ProtocolMsg<T>>) {\n    const { data } = e\n    if (isHandshakeMessage(data.type)) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel && data.type === 'handshake/syn-ack') {\n        setChannelStatus(channel, 'connected')\n        sendHandshake(channel, 'handshake/ack', { id: channel.id })\n      }\n    }\n  }\n\n  const messageHandler = (e: MessageEvent<ProtocolMsg<T>>) => {\n    const { data } = e\n    if (\n      !isHandshakeMessage(data.type) &&\n      channels.find((channel) => channel.id === data.connectionId)\n    ) {\n      const channel = channels.find(\n        (channel) => channel.config.id === data.from,\n      )\n      if (channel) {\n        // eslint-disable-next-line no-warning-comments\n        // @todo Ugly type casting\n        const args = [data.type, data.data] as ToArgs<T>\n        channel.config.onEvent?.(...args)\n        config.onEvent?.(...args)\n        send(channel, 'channel/response', { responseTo: data.id }, false)\n      }\n    }\n  }\n\n  function handleEvents(e: MessageEvent<ProtocolMsg<T>>) {\n    if (isLegacyHandshakeMessage(e)) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Visual editing package mismatch detected! Please ensure you are using the latest version of Sanity Studio and any packages listed here:\\nhttps://github.com/sanity-io/visual-editing',\n      )\n      return\n    }\n\n    if (isValidMessageEvent(e)) {\n      const { data } = e\n      channels.find((channel) => channel.config.id === data.from)?.handler(e)\n    }\n  }\n\n  function flush(channel: ChannelsControllerChannel<T>) {\n    const toFlush = [...channel.buffer]\n    channel.buffer.splice(0, channel.buffer.length)\n    toFlush.forEach(({ type, data }) => {\n      send(channel, type, data)\n    })\n  }\n\n  function startHeartbeat(channel: ChannelsControllerChannel<T>) {\n    stopHeartbeat(channel)\n    if (channel.config.heartbeat) {\n      const heartbeatInverval =\n        typeof channel.config.heartbeat === 'number'\n          ? channel.config.heartbeat\n          : HEARTBEAT_INTERVAL\n      channel.heartbeat = window.setInterval(() => {\n        send(channel, 'channel/heartbeat')\n      }, heartbeatInverval)\n    }\n  }\n\n  function stopHeartbeat(channel: ChannelsControllerChannel<T>) {\n    if (channel.heartbeat) {\n      window.clearInterval(channel.heartbeat)\n    }\n  }\n\n  function setChannelStatus(\n    channel: ChannelsControllerChannel<T>,\n    next: ChannelStatus,\n  ) {\n    channel.status = next\n    channel.config.onStatusUpdate?.(next, channel.config.id)\n    config.onStatusUpdate?.(next, channel.config.id)\n    if (next === 'connecting' || next === 'reconnecting') {\n      channel.handler = handshakeHandler\n      stopHeartbeat(channel)\n      startHandshake(channel)\n    } else if (next === 'connected') {\n      channel.handler = messageHandler\n      stopHandshake(channel)\n      startHeartbeat(channel)\n      flush(channel)\n    } else if (next === 'disconnected') {\n      channel.id = null\n      channel.handler = handshakeHandler\n      stopHandshake(channel)\n      stopHeartbeat(channel)\n    }\n  }\n\n  function sendHandshake<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id: uuid(),\n      to: channel.config.id,\n      type,\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: '*' })\n    } catch (e) {\n      throw new Error(`Failed to postMessage '${msg.id}' on '${config.id}'`)\n    }\n  }\n\n  function send<K extends T['type']>(\n    channel: ChannelsControllerChannel<T>,\n    type: K | InternalMsgType,\n    data?: Extract<T, { type: K }>['data'],\n    expectResponse = true,\n  ) {\n    const id = uuid()\n\n    // If there is no active channel, push to the buffer\n    if (\n      channel.status === 'connecting' ||\n      channel.status === 'reconnecting' ||\n      channel.status === 'disconnected'\n    ) {\n      channel.buffer.push({ type, data })\n      return\n    }\n\n    if (!channel.id) {\n      throw new Error('No channel ID set')\n    }\n\n    const msg: ProtocolMsg<T> = {\n      connectionId: channel.id,\n      data,\n      domain: 'sanity/channels',\n      from: config.id,\n      id,\n      to: channel.config.id,\n      type,\n    }\n\n    if (expectResponse) {\n      const maxWait = setTimeout(() => {\n        // The channel may have changed, so only reject if the IDs match\n        if (msg.connectionId === channel.id) {\n          // Cleanup the transaction listener\n          window.removeEventListener('message', transact, false)\n          // Push the message to the buffer\n          if (type !== 'channel/heartbeat') {\n            channel.buffer.push({ type, data })\n          }\n          // Try to reconnect\n          setChannelStatus(channel, 'reconnecting')\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Received no response to message '${msg.type}' on client '${config.id}' (ID: '${msg.id}').`,\n          )\n        }\n      }, RESPONSE_TIMEOUT)\n\n      const transact = (e: MessageEvent<ChannelMsg>) => {\n        const { data: eventData } = e\n        if (\n          eventData.type === 'channel/response' &&\n          eventData.data?.responseTo &&\n          eventData.data.responseTo === msg.id\n        ) {\n          window.removeEventListener('message', transact, false)\n          clearTimeout(maxWait)\n        }\n      }\n      window.addEventListener('message', transact, false)\n    }\n\n    try {\n      target?.postMessage(msg, { targetOrigin: config.targetOrigin })\n    } catch (e) {\n      throw new Error(\n        `Failed to postMessage '${msg.id}' on client '${config.id}'`,\n      )\n    }\n  }\n\n  function disconnect() {\n    channels.forEach((channel) => {\n      if (['disconnected'].includes(channel.status)) return\n      send(channel, 'channel/disconnect', { id: channel.id }, false)\n      setChannelStatus(channel, 'disconnected')\n    })\n  }\n\n  function destroy() {\n    disconnect()\n    window.removeEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      stopHeartbeat(channel)\n      stopHandshake(channel)\n    })\n  }\n\n  function initialise() {\n    window.addEventListener('message', handleEvents, false)\n    channels.forEach((channel) => {\n      setChannelStatus(channel, 'connecting')\n    })\n  }\n\n  initialise()\n\n  function sendPublic<K extends T['type']>(\n    id: string | string[] | undefined,\n    type: K,\n    data?: Extract<T, { type: K }>['data'],\n  ) {\n    const channelsToSend = id ? (Array.isArray(id) ? [...id] : [id]) : channels\n\n    channelsToSend.forEach((id) => {\n      const channel = channels.find((channel) => channel.config.id === id)\n      if (!channel) throw new Error('Invalid channel ID')\n      send(channel, type, data)\n    })\n  }\n\n  return {\n    destroy,\n    send: sendPublic,\n  }\n}\n","function n(n){return\"object\"==typeof n&&null!==n&&!Array.isArray(n)}function e(n){return null!==n&&Array.isArray(n)}function t(n){let t=\"\";for(const r of n)\"string\"!=typeof r?\"number\"!=typeof r?e(r)?(t&&(t+=\":\"),t+=`${r.join(\",\")}}`):r._key&&(t&&(t+=\":\"),t+=`${r._key}`):(t&&(t+=\":\"),t+=`${r}`):(t&&(t+=\".\"),t+=r);return t}const r=/^([A-Za-z]+):([0-9]+)$/,o=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,u=/^([A-Za-z]+):([a-z0-9]+)$/;function s(n){const e=[];for(const t of n.split(\".\")){const n=r.exec(t);if(n){e.push(n[1],Number(n[2]));continue}const s=o.exec(t);if(s){e.push(s[1],[Number(s[2]),Number(s[3])]);continue}const c=u.exec(t);c?e.push(c[1],{_key:c[2]}):e.push(t)}return e}export{e as a,n as i,t as p,s as u};//# sourceMappingURL=urlStringToPath-FefM00gz.js.map\n","export{p as pathToUrlString,u as urlStringToPath}from\"./_chunks/urlStringToPath-FefM00gz.js\";function t(t,r){return`${t}-${\"string\"==typeof r?r:JSON.stringify(r)}`}const r=\"undefined\"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),e={alt:\"altKey\",ctrl:\"ctrlKey\",mod:r?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function n(t,r){return t.every((t=>e[t]?r[e[t]]:r.key===t.toUpperCase()))}function o(t){return t.key===(r?\"Meta\":\"Ctrl\")}function i(t){return\"Alt\"===t.key}export{t as getQueryCacheKey,i as isAltKey,n as isHotkey,o as isModKey};//# sourceMappingURL=index.js.map\n","import { studioPath } from '@sanity/client/csm'\nimport { urlStringToPath } from '@sanity/visual-editing-helpers'\n\nimport type { PresentationStateParams } from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(\n  state: PresentationStateParams,\n): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {\n  Box,\n  Button,\n  Card,\n  CardProps,\n  Container,\n  Flex,\n  Inline,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport { ReactElement, ReactNode } from 'react'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const { children, message, onRetry, onContinueAnyway, ...restProps } = props\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text=\"Retry\" />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text=\"Continue anyway\"\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                An error occured\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","import { useContext } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\n\nexport function usePresentationTool(): PresentationContextValue {\n  const presentation = useContext(PresentationContext)\n\n  if (!presentation) {\n    throw new Error('Presentation context is missing')\n  }\n\n  return presentation\n}\n","/* eslint-disable no-console */\n\nimport {\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useMemo,\n} from 'react'\nimport { getPublishedId, useUnique } from 'sanity'\nimport {\n  BackLinkProps,\n  PaneRouterContext,\n  PaneRouterContextValue,\n  ReferenceChildLinkProps,\n} from 'sanity/desk'\nimport { StateLink, useRouter } from 'sanity/router'\n\nimport { DeskDocumentPaneParams, PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(\n  nextParams: Record<string, string | undefined>,\n) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return { ...obj, [key]: value }\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { deskParams, params } = usePresentationTool()\n\n  return (\n    <StateLink\n      {...props}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries({\n          ...deskParams,\n          preview: params.preview,\n        }),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const { documentId, documentType, ...restProps } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{ id: documentId, type: documentType }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onDeskParams: (params: DeskDocumentPaneParams) => void\n    params: DeskDocumentPaneParams\n    previewUrl?: string\n    refs?: { _id: string; _type: string }[]\n  }>,\n): ReactElement {\n  const { children, params, onDeskParams, previewUrl, refs } = props\n\n  const { state: routerState, resolvePathFromState } = useRouter()\n\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] =\n    useCallback(\n      (nextParams) => {\n        const path = resolvePathFromState(routerState)\n        const qs = resolveQueryStringFromParams({\n          ...routerSearchParams,\n          ...nextParams,\n        })\n        return `${path}${qs}`\n      },\n      [resolvePathFromState, routerSearchParams, routerState],\n    )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      params: params as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const { childId, ...restProps } = childLinkProps\n        const ref = refs?.find((r) => getPublishedId(r._id) === childId)\n\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: ref._id,\n                type: ref._type,\n                _searchParams: Object.entries({ preview: previewUrl }),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink,\n      ReferenceChildLink,\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onDeskParams({\n          ...nextParams,\n          inspect: nextParams.inspect ?? undefined,\n        } as DeskDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onDeskParams, params, previewUrl, refs])\n\n  return (\n    <PaneRouterContext.Provider value={context}>\n      {children}\n    </PaneRouterContext.Provider>\n  )\n}\n","import { Card, Code, ErrorBoundary, Flex, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  DeskToolProvider,\n  DocumentListPane as DeskDocumentListPane,\n  PaneLayout,\n  PaneNode,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n  const { devMode } = usePresentationTool()\n\n  const pane: Extract<PaneNode, { type: 'documentList' }> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: { ids: refs.map((r) => r._id) },\n        // defaultOrdering: [{ field: '_updatedAt', direction: 'desc' }],\n      },\n      schemaTypeName: '',\n      title: 'Documents on this page',\n      type: 'documentList',\n    }),\n    [refs],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [deskParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document list\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <DeskToolProvider>\n          <PresentationPaneRouterProvider\n            params={deskParams}\n            onDeskParams={onDeskParams}\n            previewUrl={previewUrl}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <DeskDocumentListPane\n                index={0}\n                itemId=\"$root\"\n                pane={pane}\n                paneKey=\"$root\"\n              />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </DeskToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import { ReactElement, useMemo } from 'react'\n\nimport { parseId } from '../lib/parse'\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPane } from './DocumentListPane'\n\nexport function DocumentListPanel(props: {\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const { onDeskParams, previewUrl, refs } = props\n\n  const refsWithParsedIds = useMemo(\n    () =>\n      refs.map(({ _id, _type }) => ({\n        _id: parseId(_id)!,\n        _type,\n      })),\n    [refs],\n  )\n\n  return (\n    <DocumentListPane\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refsWithParsedIds}\n    />\n  )\n}\n","import { Card, Code, ErrorBoundary, Label, Stack } from '@sanity/ui'\nimport {\n  ErrorInfo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Path } from 'sanity'\nimport {\n  DocumentPane as DeskDocumentPane,\n  DocumentPaneNode,\n  PaneLayout,\n  useDeskTool,\n} from 'sanity/desk'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { DeskDocumentPaneParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { PresentationPaneRouterProvider } from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  params: DeskDocumentPaneParams\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { documentId, documentType, params, onDeskParams, onFocusPath } = props\n  const { devMode } = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, params])\n\n  const { setLayoutCollapsed } = useDeskTool()\n  const handleRootCollapse = useCallback(\n    () => setLayoutCollapsed(true),\n    [setLayoutCollapsed],\n  )\n  const handleRootExpand = useCallback(\n    () => setLayoutCollapsed(false),\n    [setLayoutCollapsed],\n  )\n\n  if (errorParams) {\n    return (\n      <ErrorCard\n        flex={1}\n        message=\"Could not render the document editor\"\n        onRetry={handleRetry}\n      >\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                Error message\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout\n        style={{ height: '100%' }}\n        onExpand={handleRootExpand}\n        onCollapse={handleRootCollapse}\n      >\n        <PresentationPaneRouterProvider\n          onDeskParams={onDeskParams}\n          params={params}\n        >\n          <DeskDocumentPane\n            paneKey=\"document\"\n            index={1}\n            itemId=\"document\"\n            pane={paneDocumentNode}\n            onFocusPath={onFocusPath}\n          />\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import { type ReactElement } from 'react'\nimport { type Path } from 'sanity'\nimport { DeskToolProvider } from 'sanity/desk'\n\nimport { DeskDocumentPaneParams } from '../types'\nimport { DocumentPane } from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId: string\n  documentType: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n}): ReactElement {\n  const { deskParams, documentId, documentType, onDeskParams, onFocusPath } =\n    props\n  return (\n    <DeskToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        params={deskParams}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n      />\n    </DeskToolProvider>\n  )\n}\n","import { type ReactElement } from 'react'\nimport { type Path } from 'sanity'\n\nimport type { DeskDocumentPaneParams } from '../types'\nimport { DocumentListPanel } from './DocumentListPanel'\nimport { DocumentPanel } from './DocumentPanel'\n\nexport function ContentEditor(props: {\n  deskParams: DeskDocumentPaneParams\n  documentId?: string\n  documentType?: string\n  onDeskParams: (params: DeskDocumentPaneParams) => void\n  onFocusPath: (path: Path) => void\n  previewUrl?: string\n  refs: { _id: string; _type: string }[]\n}): ReactElement {\n  const {\n    deskParams,\n    documentId,\n    documentType,\n    onDeskParams,\n    onFocusPath,\n    previewUrl,\n    refs,\n  } = props\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        deskParams={deskParams}\n        documentId={documentId}\n        documentType={documentType}\n        onDeskParams={onDeskParams}\n        onFocusPath={onFocusPath}\n      />\n    )\n  }\n\n  return (\n    <DocumentListPanel\n      onDeskParams={onDeskParams}\n      previewUrl={previewUrl}\n      refs={refs}\n    />\n  )\n}\n","import{useMemo as e,useState as n,useCallback as t,useEffect as i,useSyncExternalStore as r}from\"react\";function o(n){const t=e((()=>JSON.stringify(n||{})),[n]);return e((()=>JSON.parse(t)),[t])}function s(e){const{refreshInterval:o}=e,s=function(){const[e,t]=n(!1);i((()=>{t(navigator.onLine);const e=()=>t(!0),n=()=>t(!1);return window.addEventListener(\"online\",e),window.addEventListener(\"offline\",n),()=>{window.removeEventListener(\"online\",e),window.removeEventListener(\"offline\",n)}}),[]);const o=r(u,(()=>document.visibilityState),(()=>\"hidden\"));if(!e)return!0;if(\"hidden\"===o)return!0;return!1}(),[d,c]=n(\"hit\"),f=t((()=>(c(\"inflight\"),()=>c(\"hit\"))),[]);return i((()=>{if(!o||\"hit\"!==d)return;const e=setTimeout((()=>c(\"stale\")),o);return()=>clearTimeout(e)}),[o,d]),i((()=>{if(\"hit\"!==d)return;const e=()=>c(\"stale\");return window.addEventListener(\"focus\",e),()=>window.removeEventListener(\"focus\",e)}),[o,d]),i((()=>{s&&\"hit\"===d&&c(\"stale\"),s||\"stale\"!==d||c(\"refresh\")}),[s,d]),[d,f]}function u(e){return document.addEventListener(\"visibilitychange\",e),()=>document.removeEventListener(\"visibilitychange\",e)}export{o as useQueryParams,s as useRevalidate};//# sourceMappingURL=hooks.js.map\n","import type { ChannelsController } from '@sanity/channels'\nimport type {\n  ClientConfig,\n  ClientPerspective,\n  ContentSourceMap,\n  QueryParams,\n} from '@sanity/client'\nimport { applySourceDocuments, getPublishedId } from '@sanity/client/csm'\nimport type {\n  LoaderPayloads,\n  VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  useQueryParams,\n  useRevalidate,\n} from '@sanity/visual-editing-helpers/hooks'\nimport { applyPatch } from 'mendoza'\nimport LRUCache from 'mnemonist/lru-cache-with-delete'\nimport { memo, useEffect, useMemo, useState } from 'react'\nimport { type SanityClient, type SanityDocument, useClient } from 'sanity'\n\nimport {\n  LIVE_QUERY_CACHE_BATCH_SIZE,\n  LIVE_QUERY_CACHE_SIZE,\n} from '../constants'\nimport type { LiveQueriesState } from '../types'\n\nexport interface LoaderQueriesProps {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  channel: ChannelsController<VisualEditingMsg> | undefined\n  perspective: ClientPerspective\n  liveQueries: LiveQueriesState\n  documentsOnPage: { _id: string; _type: string }[]\n}\n\nexport default function LoaderQueries(props: LoaderQueriesProps): JSX.Element {\n  const {\n    liveDocument,\n    channel,\n    perspective: activePerspective,\n    liveQueries,\n    documentsOnPage,\n  } = props\n  const [cache] = useState(\n    () => new LRUCache<string, SanityDocument>(LIVE_QUERY_CACHE_SIZE),\n  )\n  const studioClient = useClient({ apiVersion: '2023-10-16' })\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [studioClient],\n  )\n  useEffect(() => {\n    if (channel) {\n      const { projectId, dataset } = clientConfig\n      channel.send('loaders', 'loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective: activePerspective,\n      } satisfies LoaderPayloads['perspective'])\n    }\n  }, [channel, clientConfig, activePerspective])\n\n  const turboIds = useMemo(() => {\n    const documentsActuallyInUse = documentsOnPage.map(({ _id }) => _id)\n    const set = new Set(documentsActuallyInUse)\n    const ids = [...set]\n    const max = cache.capacity\n    if (ids.length >= max) {\n      ids.length = max\n    }\n    return ids\n  }, [cache.capacity, documentsOnPage])\n\n  const [documentsCacheLastUpdated, setDocumentsCacheLastUpdated] = useState(0)\n\n  return (\n    <>\n      <Turbo\n        cache={cache}\n        client={client}\n        turboIds={turboIds}\n        setDocumentsCacheLastUpdated={setDocumentsCacheLastUpdated}\n      />\n      {Object.entries(liveQueries).map(\n        ([key, { query, params, perspective }]) => (\n          <QuerySubscription\n            key={`${key}${perspective}`}\n            cache={cache}\n            projectId={clientConfig.projectId!}\n            dataset={clientConfig.dataset!}\n            perspective={perspective}\n            query={query}\n            params={params}\n            channel={channel}\n            client={client}\n            refreshInterval={activePerspective ? 2000 : 0}\n            liveDocument={liveDocument}\n            documentsCacheLastUpdated={documentsCacheLastUpdated}\n          />\n        ),\n      )}\n    </>\n  )\n}\n\ninterface SharedProps {\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n  /**\n   * How frequently queries should be refetched in the background to refresh the parts of queries that can't be source mapped.\n   * Setting it to `0` will disable background refresh.\n   * @defaultValue 10000\n   */\n  refreshInterval?: number\n  /**\n   * The documents cache to use for turbo-charging queries.\n   */\n  cache: LRUCache<string, SanityDocument>\n}\n\ninterface TurboProps extends Pick<SharedProps, 'client' | 'cache'> {\n  turboIds: string[]\n  setDocumentsCacheLastUpdated: (timestamp: number) => void\n}\n/**\n * A turbo-charged mutation observer that uses Content Source Maps to apply mendoza patches on your queries\n */\nconst Turbo = memo(function Turbo(props: TurboProps) {\n  const { cache, client, turboIds, setDocumentsCacheLastUpdated } = props\n  // Figure out which documents are missing from the cache\n  const [batch, setBatch] = useState<string[][]>([])\n  useEffect(() => {\n    const batchSet = new Set(batch.flat())\n    const nextBatch = new Set<string>()\n    for (const turboId of turboIds) {\n      if (!batchSet.has(turboId) && !cache.has(turboId)) {\n        nextBatch.add(turboId)\n      }\n    }\n    const nextBatchSlice = [...nextBatch].slice(0, LIVE_QUERY_CACHE_BATCH_SIZE)\n    if (nextBatchSlice.length === 0) return\n    setBatch((prevBatch) => [\n      ...prevBatch.slice(-LIVE_QUERY_CACHE_BATCH_SIZE),\n      nextBatchSlice,\n    ])\n  }, [batch, cache, turboIds])\n\n  // Use the same listen instance and patch documents as they come in\n  useEffect(() => {\n    const subscription = client\n      .listen(\n        '*',\n        {},\n        {\n          events: ['mutation'],\n          effectFormat: 'mendoza',\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-loader',\n        },\n      )\n      .subscribe((update) => {\n        if (update.type === 'mutation' && update.transition === 'disappear') {\n          if (cache.delete(update.documentId)) {\n            setDocumentsCacheLastUpdated(Date.now())\n          }\n        }\n\n        if (update.type !== 'mutation' || !update.effects?.apply?.length) return\n        // Schedule a reach state update with the ID of the document that were mutated\n        // This react handler will apply the document to related source map snapshots\n        const cachedDocument = cache.peek(update.documentId)\n        if (cachedDocument as SanityDocument) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const patchDoc = { ...cachedDocument } as any\n          delete patchDoc._rev\n          const patchedDocument = applyPatch(patchDoc, update.effects.apply)\n          cache.set(update.documentId, patchedDocument)\n          setDocumentsCacheLastUpdated(Date.now())\n        }\n      })\n    return () => subscription.unsubscribe()\n  }, [cache, client, setDocumentsCacheLastUpdated])\n\n  return (\n    <>\n      {batch.map((ids) => (\n        <GetDocuments\n          key={JSON.stringify(ids)}\n          cache={cache}\n          client={client}\n          ids={ids}\n          setDocumentsCacheLastUpdated={setDocumentsCacheLastUpdated}\n        />\n      ))}\n    </>\n  )\n})\n\ninterface GetDocumentsProps extends Pick<SharedProps, 'client' | 'cache'> {\n  ids: string[]\n  setDocumentsCacheLastUpdated: (timestamp: number) => void\n}\nconst GetDocuments = memo(function GetDocuments(props: GetDocumentsProps) {\n  const { client, cache, ids, setDocumentsCacheLastUpdated } = props\n\n  useEffect(() => {\n    const missingIds = ids.filter((id) => !cache.has(id))\n    if (missingIds.length === 0) return\n    client.getDocuments(missingIds).then((documents) => {\n      for (const doc of documents) {\n        if (doc && doc?._id) {\n          cache.set(doc._id, doc)\n          setDocumentsCacheLastUpdated(Date.now())\n        }\n      }\n      // eslint-disable-next-line no-console\n    }, console.error)\n  }, [cache, client, ids, setDocumentsCacheLastUpdated])\n\n  return null\n})\nGetDocuments.displayName = 'GetDocuments'\n\ninterface QuerySubscriptionProps\n  extends Pick<\n    UseQuerySubscriptionProps,\n    | 'client'\n    | 'cache'\n    | 'refreshInterval'\n    | 'liveDocument'\n    | 'documentsCacheLastUpdated'\n  > {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  channel: ChannelsController<VisualEditingMsg> | undefined\n}\nfunction QuerySubscription(props: QuerySubscriptionProps) {\n  const {\n    cache,\n    projectId,\n    dataset,\n    perspective,\n    query,\n    client,\n    refreshInterval,\n    liveDocument,\n    channel,\n    documentsCacheLastUpdated,\n  } = props\n\n  const params = useQueryParams(props.params)\n  const data = useQuerySubscription({\n    cache,\n    client,\n    liveDocument,\n    params,\n    perspective,\n    query,\n    refreshInterval,\n    documentsCacheLastUpdated,\n  })\n  const result = data?.result\n  const resultSourceMap = data?.resultSourceMap\n\n  useEffect(() => {\n    if (resultSourceMap) {\n      channel!.send('loaders', 'loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n      } satisfies LoaderPayloads['query-change'])\n    }\n  }, [\n    channel,\n    dataset,\n    params,\n    perspective,\n    projectId,\n    query,\n    result,\n    resultSourceMap,\n  ])\n\n  return null\n}\n\ninterface UseQuerySubscriptionProps\n  extends Required<Pick<SharedProps, 'client' | 'refreshInterval' | 'cache'>> {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  query: string\n  params: QueryParams\n  perspective: ClientPerspective\n  documentsCacheLastUpdated: number\n}\nfunction useQuerySubscription(props: UseQuerySubscriptionProps) {\n  const {\n    cache,\n    liveDocument,\n    client,\n    refreshInterval,\n    query,\n    params,\n    perspective,\n    documentsCacheLastUpdated,\n  } = props\n  const [snapshot, setSnapshot] = useState<{\n    result: unknown\n    resultSourceMap?: ContentSourceMap\n  } | null>(null)\n  const { projectId, dataset } = useMemo(() => {\n    const { projectId, dataset } = client.config()\n    return { projectId, dataset } as Required<\n      Pick<ClientConfig, 'projectId' | 'dataset'>\n    >\n  }, [client])\n\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({ refreshInterval })\n  const shouldRefetch = revalidate === 'refresh' || revalidate === 'inflight'\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return\n    }\n\n    let fulfilled = false\n    let fetching = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const { signal } = controller\n      fetching = true\n      const { result, resultSourceMap } = await client.fetch(query, params, {\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n      })\n      fetching = false\n\n      if (!signal.aborted) {\n        setSnapshot({ result, resultSourceMap })\n\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      .catch((error) => {\n        fetching = false\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled && !fetching) {\n        controller.abort()\n      }\n    }\n  }, [\n    client,\n    dataset,\n    liveDocument,\n    params,\n    perspective,\n    projectId,\n    query,\n    shouldRefetch,\n    startRefresh,\n  ])\n\n  return useMemo(() => {\n    if (documentsCacheLastUpdated && snapshot?.resultSourceMap) {\n      return {\n        result: turboChargeResultIfSourceMap(\n          cache,\n          liveDocument,\n          snapshot.result,\n          perspective,\n          snapshot.resultSourceMap,\n        ),\n        resultSourceMap: snapshot.resultSourceMap,\n      }\n    }\n    return snapshot\n  }, [cache, documentsCacheLastUpdated, liveDocument, perspective, snapshot])\n}\n\nlet warnedAboutCrossDatasetReference = false\nexport function turboChargeResultIfSourceMap<T = unknown>(\n  cache: SharedProps['cache'],\n  liveDocument: Partial<SanityDocument> | null | undefined,\n  result: T,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): T {\n  if (perspective === 'raw') {\n    throw new Error(\n      'turboChargeResultIfSourceMap does not support raw perspective',\n    )\n  }\n  return applySourceDocuments(\n    result,\n    resultSourceMap,\n    (sourceDocument) => {\n      if (sourceDocument._projectId) {\n        // @TODO Handle cross dataset references\n        if (!warnedAboutCrossDatasetReference) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          warnedAboutCrossDatasetReference = true\n        }\n        return undefined\n      }\n      // If there's a displayed document, always prefer it\n      if (\n        liveDocument?._id &&\n        getPublishedId(liveDocument._id) === getPublishedId(sourceDocument._id)\n      ) {\n        return liveDocument\n      }\n      // Fallback to general documents cache\n      return cache.get(sourceDocument._id)\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (changedValue: any, { previousValue }) => {\n      if (\n        typeof changedValue === 'number' &&\n        typeof previousValue === 'string'\n      ) {\n        // If the string() function was used in the query, we need to convert the source value to a string as well\n        return `${changedValue}`\n      }\n      return changedValue\n    },\n    perspective,\n  )\n}\n","import { createContext, type CSSProperties } from 'react'\n\nimport { PanelElement, ResizerElement } from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useContext,\n  useLayoutEffect,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const { getPanelStyle, registerElement, unregisterElement } = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [\n    id,\n    defaultSize,\n    order,\n    maxWidth,\n    minWidth,\n    registerElement,\n    unregisterElement,\n  ])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {\n  type FunctionComponent,\n  MouseEvent as ReactMouseEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport { usePanelId } from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({ $disabled }) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({ $disabled }) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({ id: propId, order, disabled = false }) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const id = usePanelId(propId)\n\n  const {\n    activeResizer,\n    drag,\n    startDragging,\n    stopDragging,\n    registerElement,\n    unregisterElement,\n  } = context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(\n      `Panel components must be rendered within a PanelGroup container`,\n    )\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n\n    return () => {\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, { id, order, type: 'resizer', el })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import { useRef } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","export function debounce<F extends (...args: any[]) => void>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: any\n  return ((...args: any[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import { useMemo } from 'react'\n\nimport { debounce } from '../lib/debounce'\nimport { PanelElement } from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[]\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\n\nfunction getNextWidth(\n  panel: PanelElement,\n  nextWidth: number,\n  containerWidth: number,\n) {\n  const { maxWidth: maxWidthPx, minWidth: minWidthPx } = panel\n  const maxWidth =\n    maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const { panels, widths: prevWidths } = panelsState\n  const { widths: initialWidths } = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(\n      pivotPanel,\n      width + Math.abs(delta),\n      containerWidth,\n    )\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(\n      panel,\n      width - deltaRemaining,\n      containerWidth,\n    )\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied\n          .toPrecision(10)\n          .localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n            numeric: true,\n          }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(\n  panels: PanelElement[],\n  id: string,\n  widths: number[],\n): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(\n  element: PanelElement | ResizerElement,\n): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(\n  element: PanelElement | ResizerElement,\n): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(\n  elements: ElementMap,\n): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({ order: a }, { order: b }) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let { maxWidth, minWidth } = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  type CSSProperties,\n  type FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { PanelsContext } from './PanelsContext'\nimport {\n  ElementMap,\n  InitialDragState,\n  PanelElement,\n  PanelsState,\n  ResizerElement,\n} from './types'\nimport { usePanelsStorage } from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({\n  children,\n}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(\n    () => getSortedElements(elements).filter(isPanel),\n    [elements],\n  )\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback(\n    (id: string, data: PanelElement | ResizerElement) => {\n      setElements((prev) => {\n        if (prev.has(id)) return prev\n        const next = new Map(prev)\n        next.set(id, data)\n        return next\n      })\n    },\n    [],\n  )\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {\n        containerWidth,\n        dragOffset,\n        panelBefore,\n        panelAfter,\n        resizerRect,\n      } = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const { widths: prevWidths } = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const { widths } = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(\n        panels,\n        storedWidths,\n        window.innerWidth,\n      )\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const { panels, widths: prevWidths } = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some(\n        (prevWidth, i) => prevWidth !== nextWidths[i],\n      )\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n} from 'react'\n\nimport {\n  PresentationNavigateContext,\n  PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport { PresentationNavigate } from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const { children, navigate: _navigate } = props\n\n  const navigate = useCallback(\n    (preview: string) => {\n      _navigate({}, { preview })\n    },\n    [_navigate],\n  )\n\n  const context = useMemo<PresentationNavigateContextValue>(\n    () => navigate,\n    [navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={context}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import { memo, useCallback, useMemo } from 'react'\n\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport type { NavigatorOptions } from './types'\nimport { useLocalState } from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const { unstable_navigator } = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{ navigatorEnabled, toggleNavigator }, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const { minWidth, maxWidth, component: NavigatorComponent } = props\n  const navigatorDisabled =\n    minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport function useLocalState<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport { PresentationParamsContext } from './PresentationParamsContext'\nimport { PresentationParams } from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, params } = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import { FunctionComponent, PropsWithChildren, useMemo } from 'react'\n\nimport {\n  PresentationContext,\n  PresentationContextValue,\n} from './PresentationContext'\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    deskParams: DeskDocumentPaneParams\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n  }>\n> = function (props) {\n  const { children, deskParams, devMode, name, navigate, params } = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      deskParams,\n      devMode,\n      name,\n      navigate,\n      params,\n    }),\n    [deskParams, devMode, name, navigate, params],\n  )\n\n  return (\n    <PresentationContext.Provider value={context}>\n      {children}\n    </PresentationContext.Provider>\n  )\n}\n","import { motion } from 'framer-motion'\nimport styled from 'styled-components'\n\nexport const IFrame = motion(styled.iframe`\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  display: block;\n`)\n","import { ResetIcon } from '@sanity/icons'\nimport { TextInput, type TextInputClearButtonProps } from '@sanity/ui'\nimport {\n  ChangeEvent,\n  FunctionComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useActiveWorkspace } from 'sanity'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  value: string\n}> = function (props) {\n  const { basePath = '/' } = useActiveWorkspace()?.activeWorkspace || {}\n  const { fontSize = 1, onChange, origin, padding = 3, value } = props\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(\n    undefined,\n  )\n  const [customValidity, setCustomValidity] = useState<string | undefined>(\n    undefined,\n  )\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (\n          !absoluteValue.startsWith(origin + '/') &&\n          absoluteValue !== origin\n        ) {\n          setCustomValidity(`URL must start with ${origin}`)\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (\n          !origin &&\n          (absoluteValue.startsWith(`${basePath}/`) ||\n            absoluteValue === basePath)\n        ) {\n          setCustomValidity(\n            `URL can't have the same base path as the Studio ${basePath}`,\n          )\n          return\n        }\n\n        const nextValue =\n          absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(\n    () => ({ icon: ResetIcon }),\n    [],\n  )\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        style={{ zIndex: 1 }}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type { ChannelStatus } from '@sanity/channels'\nimport type { ClientPerspective } from '@sanity/client'\nimport {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  CopyIcon,\n  DatabaseIcon,\n  DesktopIcon,\n  EditIcon,\n  LaunchIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n  ShareIcon,\n} from '@sanity/icons'\nimport { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport {\n  hasSecretSearchParams,\n  setSecretSearchParams,\n  withoutSecretSearchParams,\n} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  ButtonTone,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n  useToast,\n} from '@sanity/ui'\nimport { AnimatePresence, motion, MotionConfig } from 'framer-motion'\nimport {\n  ComponentType,\n  createElement,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { Hotkeys, useClient, useCurrentUser } from 'sanity'\nimport styled from 'styled-components'\n\nimport { ErrorCard } from '../components/ErrorCard'\nimport { API_VERSION, MAX_TIME_TO_OVERLAYS_CONNECTION } from '../constants'\nimport { PresentationParams } from '../types'\nimport { usePresentationTool } from '../usePresentationTool'\nimport { IFrame } from './IFrame'\nimport { PreviewLocationInput } from './PreviewLocationInput'\n\nconst MotionFlex = motion(Flex)\n\nconst StyledSwitch = styled(Switch)`\n  & > span {\n    width: 21px;\n    height: 13px;\n    overflow: hidden;\n\n    & > span:nth-child(1) {\n      width: 21px;\n      height: 13px;\n    }\n\n    & > span:nth-child(2) {\n      width: 9px;\n      height: 9px;\n      top: 2px;\n      left: 2px;\n    }\n  }\n\n  & input:checked + span {\n    & > span:nth-child(2) {\n      transform: translate3d(8px, 0, 0) !important;\n    }\n  }\n`\n\nconst PERSPECTIVE_TITLES: Record<ClientPerspective, string> = {\n  previewDrafts: 'Drafts',\n  published: 'Published',\n  raw: 'Raw',\n}\n\nconst PERSPECTIVE_TONES: Record<ClientPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n  raw: 'default',\n}\n\nconst PERSPECTIVE_ICONS: Record<ClientPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n  raw: DatabaseIcon,\n}\n\ninterface PreviewFrameProps {\n  initialUrl: URL\n  targetOrigin: string\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  openPopup: (url: string) => void\n  overlayEnabled: boolean\n  params: PresentationParams\n  perspective: ClientPerspective\n  setPerspective: Dispatch<SetStateAction<ClientPerspective>>\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  loadersConnection: ChannelStatus\n  overlaysConnection: ChannelStatus\n  previewKitConnection: ChannelStatus\n}\n\nexport const PreviewFrame = forwardRef<HTMLIFrameElement, PreviewFrameProps>(\n  function PreviewFrame(props, ref) {\n    const {\n      initialUrl,\n      targetOrigin,\n      navigatorEnabled,\n      onPathChange,\n      openPopup,\n      overlayEnabled,\n      params,\n      perspective,\n      setPerspective,\n      toggleNavigator,\n      toggleOverlay,\n      loadersConnection,\n      overlaysConnection,\n      previewKitConnection,\n    } = props\n\n    const { devMode } = usePresentationTool()\n\n    const [mode, setMode] = useState<'desktop' | 'mobile'>('desktop')\n    const prefersReducedMotion = usePrefersReducedMotion()\n\n    const setDesktopMode = useCallback(() => setMode('desktop'), [setMode])\n    const setMobileMode = useCallback(() => setMode('mobile'), [setMode])\n    const [loading, setLoading] = useState(true)\n    const [timedOut, setTimedOut] = useState(false)\n    const [refreshing, setRefreshing] = useState(false)\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy =\n      loading || refreshing || overlaysConnection === 'connecting'\n\n    const previewLocationOrigin = useMemo(() => {\n      return targetOrigin === location.origin ? '' : targetOrigin\n    }, [targetOrigin])\n\n    const handleRefresh = useCallback(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      ref.current.src = `${targetOrigin}${params.preview || '/'}`\n\n      setRefreshing(true)\n    }, [params.preview, targetOrigin, ref])\n    const handleRetry = useCallback(() => {\n      if (typeof ref === 'function' || !ref?.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      setRefreshing(true)\n    }, [ref, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] =\n      useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (\n        overlaysConnection === 'connecting' ||\n        overlaysConnection === 'reconnecting'\n      ) {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 1000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [\n      overlaysConnection,\n      loading,\n      refreshing,\n      setShowOverlaysConnectionState,\n    ])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to overlays. Make sure you're calling the 'enableOverlays' function in '@sanity/overlays' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'disconnected') {\n        setSomethingIsWrong(true)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const previewLocationRoute = useMemo(() => {\n      const previewUrl = new URL(params.preview || '/', targetOrigin)\n      const { pathname, search } = withoutSecretSearchParams(previewUrl)\n\n      return `${pathname}${search}`\n    }, [params.preview, targetOrigin])\n\n    const onIFrameLoad = useCallback(() => {\n      setLoading(false)\n      setRefreshing(false)\n    }, [])\n\n    return (\n      <MotionConfig\n        transition={prefersReducedMotion ? { duration: 0 } : undefined}\n      >\n        <TooltipDelayGroupProvider delay={1000}>\n          <Card\n            flex=\"none\"\n            padding={2}\n            shadow={1}\n            style={{ position: 'relative' }}\n          >\n            <Flex align=\"center\" gap={2} style={{ minHeight: 0 }}>\n              {toggleNavigator && (\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Toggle navigator</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Toggle navigator\"\n                    fontSize={1}\n                    icon={PanelLeftIcon}\n                    mode=\"bleed\"\n                    onClick={toggleNavigator}\n                    padding={3}\n                    selected={navigatorEnabled}\n                  />\n                </Tooltip>\n              )}\n\n              <Tooltip\n                animate\n                content={\n                  <Flex align=\"center\" style={{ whiteSpace: 'nowrap' }}>\n                    <Box padding={1}>\n                      <Text size={1}>\n                        {overlayEnabled\n                          ? 'Disable edit overlay'\n                          : 'Enable edit overlay'}\n                      </Text>\n                    </Box>\n                    <Box paddingY={1}>\n                      <Hotkeys\n                        keys={['Alt']}\n                        style={{ marginTop: -4, marginBottom: -4 }}\n                      />\n                    </Box>\n                  </Flex>\n                }\n                fallbackPlacements={['bottom-start']}\n                padding={1}\n                placement=\"bottom\"\n                portal\n              >\n                <Card\n                  as=\"label\"\n                  flex=\"none\"\n                  padding={3}\n                  style={{\n                    lineHeight: 0,\n                    borderRadius: 999,\n                    userSelect: 'none',\n                  }}\n                  tone={overlayEnabled ? 'positive' : undefined}\n                >\n                  <Flex align=\"center\" gap={2}>\n                    <div style={{ margin: -2 }}>\n                      <StyledSwitch\n                        checked={overlayEnabled}\n                        onChange={toggleOverlay}\n                        disabled={iframeIsBusy}\n                      />\n                    </div>\n                    <Box>\n                      <Text muted size={1} weight=\"medium\">\n                        Edit\n                      </Text>\n                    </Box>\n                  </Flex>\n                </Card>\n              </Tooltip>\n\n              {devMode && (\n                <Tooltip\n                  animate\n                  content={\n                    <Text size={1}>\n                      {refreshing ? 'Refreshing…' : 'Refresh preview'}\n                    </Text>\n                  }\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Refresh preview\"\n                    fontSize={1}\n                    icon={RefreshIcon}\n                    mode=\"bleed\"\n                    loading={refreshing}\n                    onClick={handleRefresh}\n                    padding={3}\n                  />\n                </Tooltip>\n              )}\n\n              <Box flex={1}>\n                <PreviewLocationInput\n                  onChange={onPathChange}\n                  origin={previewLocationOrigin}\n                  value={previewLocationRoute}\n                />\n              </Box>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ShareIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                    />\n                  }\n                  id=\"location-menu\"\n                  menu={\n                    <Menu>\n                      <ShareUrlMenuItems\n                        initialUrl={initialUrl}\n                        openPopup={openPopup}\n                        previewLocationOrigin={previewLocationOrigin}\n                        previewLocationRoute={previewLocationRoute}\n                      />\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <MenuButton\n                  button={\n                    <Button\n                      fontSize={1}\n                      iconRight={ChevronDownIcon}\n                      mode=\"bleed\"\n                      padding={3}\n                      space={2}\n                      text={PERSPECTIVE_TITLES[perspective]}\n                      loading={\n                        iframeIsBusy ||\n                        (loadersConnection === 'connecting' &&\n                          previewKitConnection !== 'connected')\n                      }\n                      disabled={loadersConnection !== 'connected'}\n                    />\n                  }\n                  id=\"perspective-menu\"\n                  menu={\n                    <Menu style={{ maxWidth: 240 }}>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() => setPerspective('previewDrafts')}\n                        padding={3}\n                        pressed={perspective === 'previewDrafts'}\n                        tone={PERSPECTIVE_TONES['previewDrafts']}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(\n                                PERSPECTIVE_ICONS['previewDrafts'],\n                              )}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES['previewDrafts']}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with latest draft content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity:\n                                  perspective === 'previewDrafts' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                      <MenuItem\n                        fontSize={1}\n                        onClick={() => setPerspective('published')}\n                        padding={3}\n                        pressed={perspective === 'published'}\n                        tone={PERSPECTIVE_TONES['published']}\n                      >\n                        <Flex align=\"flex-start\" gap={3}>\n                          <Box flex=\"none\">\n                            <Text size={1}>\n                              {createElement(PERSPECTIVE_ICONS['published'])}\n                            </Text>\n                          </Box>\n                          <Stack flex={1} space={2}>\n                            <Text size={1} weight=\"medium\">\n                              {PERSPECTIVE_TITLES['published']}\n                            </Text>\n                            <Text muted size={1}>\n                              View this page with published content\n                            </Text>\n                          </Stack>\n                          <Box flex=\"none\">\n                            <Text\n                              muted\n                              size={1}\n                              style={{\n                                opacity: perspective === 'published' ? 1 : 0,\n                              }}\n                            >\n                              <CheckmarkIcon />\n                            </Text>\n                          </Box>\n                        </Flex>\n                      </MenuItem>\n                    </Menu>\n                  }\n                  popover={{\n                    animate: true,\n                    constrainSize: true,\n                    placement: 'bottom',\n                    portal: true,\n                  }}\n                />\n              </Flex>\n\n              <Flex align=\"center\" flex=\"none\" gap={1}>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Full viewport</Text>}\n                  fallbackPlacements={['bottom-start']}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Full viewport\"\n                    fontSize={1}\n                    icon={DesktopIcon}\n                    mode=\"bleed\"\n                    onClick={setDesktopMode}\n                    padding={3}\n                    selected={mode === 'desktop'}\n                  />\n                </Tooltip>\n                <Tooltip\n                  animate\n                  content={<Text size={1}>Narrow viewport</Text>}\n                  padding={2}\n                  placement=\"bottom\"\n                  portal\n                >\n                  <Button\n                    aria-label=\"Narrow viewport\"\n                    fontSize={1}\n                    icon={MobileDeviceIcon}\n                    mode=\"bleed\"\n                    onClick={setMobileMode}\n                    padding={3}\n                    selected={mode === 'mobile'}\n                  />\n                </Tooltip>\n              </Flex>\n            </Flex>\n          </Card>\n\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={mode === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: `0`,\n                      position: `absolute`,\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]:\n                        'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition:\n                        '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[mode] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text=\"Continue anyway\"\n                          style={{ opacity: 0 }}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex\n                          justify=\"center\"\n                          align=\"center\"\n                          direction=\"column\"\n                          gap={4}\n                        >\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut ? (\n                              <>\n                                Unable to connect, check the browser console for\n                                more information.\n                              </>\n                            ) : (\n                              'Connecting…'\n                            )}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text=\"Continue anyway\"\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading || iframeIsBusy) && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: `0`,\n                      position: `absolute`,\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{ ...sizes[mode] }}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        Loading…\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: `0`,\n                      position: `absolute`,\n                      borderTop: '1px solid transparent',\n                      boxShadow: '0 0 0 1px var(--card-border-color)',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message=\"Could not connect to the preview\"\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Overlay connection status\n                                </Label>\n                                <Code size={1}>{overlaysConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  Loader connection status\n                                </Label>\n                                <Code size={1}>{loadersConnection}</Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                ref={ref}\n                style={{\n                  pointerEvents:\n                    iframeIsBusy && !continueAnyway ? 'none' : 'auto',\n                  boxShadow: '0 0 0 1px var(--card-border-color)',\n                  borderTop: '1px solid transparent',\n                }}\n                src={initialUrl.toString()}\n                initial={['background']}\n                variants={iframeVariants}\n                animate={[\n                  (loading || iframeIsBusy) && !continueAnyway\n                    ? 'background'\n                    : 'active',\n                  refreshing ? 'reloading' : 'idle',\n                  mode,\n                  showOverlaysConnectionStatus && !continueAnyway\n                    ? 'timedOut'\n                    : '',\n                ]}\n                onLoad={onIFrameLoad}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  },\n)\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst errorVariants = {\n  initial: { opacity: 1 },\n  animate: { opacity: [0, 0, 1] },\n  exit: { opacity: [1, 0, 0] },\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n\nfunction ShareUrlMenuItems(\n  props: Pick<PreviewFrameProps, 'initialUrl' | 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n) {\n  const { initialUrl, openPopup, previewLocationOrigin, previewLocationRoute } =\n    props\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <>\n      <CopyUrlMenuButton\n        initialUrl={initialUrl}\n        previewLocationOrigin={previewLocationOrigin}\n        previewLocationRoute={previewLocationRoute}\n      />\n      <MenuItem\n        icon={LaunchIcon}\n        text=\"Open preview\"\n        as=\"a\"\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        onClick={handleOpenPopup as any}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </>\n  )\n}\n\nfunction CopyUrlMenuButton(\n  props: Pick<PreviewFrameProps, 'initialUrl'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n) {\n  const { initialUrl, previewLocationOrigin, previewLocationRoute } = props\n\n  const { push: pushToast } = useToast()\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [disabled, setDisabled] = useState(false)\n\n  return (\n    <MenuItem\n      disabled={disabled}\n      onClick={() => {\n        if (!navigator?.clipboard) {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Clipboard not supported',\n          })\n          return false\n        }\n        setDisabled(true)\n\n        let id: string | undefined = undefined\n        let url = `${previewLocationOrigin}${previewLocationRoute}`\n        const onFinally = () => {\n          pushToast({\n            id,\n            closable: true,\n            status: 'success',\n            title: 'The URL is copied to the clipboard',\n          })\n          setDisabled(false)\n        }\n        const onError = (error: any) => {\n          pushToast({\n            closable: true,\n            status: 'error',\n            title: 'Copy failed',\n            description: error.message || error.toString(),\n          })\n          setDisabled(false)\n        }\n        if (\n          hasSecretSearchParams(initialUrl) &&\n          typeof ClipboardItem !== 'undefined'\n        ) {\n          const type = 'text/plain'\n          const resolvePreviewUrl = async () => {\n            id = pushToast({\n              closable: true,\n              title: 'Copying URL to clipboard…',\n            })\n            const previewUrlSecret = await createPreviewSecret(\n              client,\n              '@sanity/presentation',\n              typeof window === 'undefined' ? '' : location.href,\n              currentUser?.id,\n            )\n\n            const newUrl = setSecretSearchParams(\n              initialUrl,\n              previewUrlSecret.secret,\n              previewLocationRoute,\n            )\n            url = newUrl.toString()\n            return new Blob([url], { type })\n          }\n\n          // Try to save to clipboard then save it in the state if worked\n          const item = new ClipboardItem({\n            [type]: resolvePreviewUrl(),\n          })\n          navigator.clipboard.write([item]).then(onFinally).catch(onError)\n        } else {\n          navigator.clipboard.writeText(url).then(onFinally).catch(onError)\n        }\n      }}\n      text=\"Copy link\"\n      icon={CopyIcon}\n    />\n  )\n}\n","import type { ClientPerspective } from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport { useCallback, useMemo, useState } from 'react'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function useDocumentsOnPage(\n  perspective: ClientPerspective,\n): [\n  DocumentOnPage[],\n  (perspective: ClientPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<Record<string, DocumentOnPage>>({})\n  const [previewDrafts, setPreviewDrafts] = useState<\n    Record<string, DocumentOnPage>\n  >({})\n\n  const setDocumentsOnPage = useCallback(\n    (perspective: ClientPerspective, sourceDocuments: DocumentOnPage[]) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // @TODO Handle cross dataset references\n          if (!warnedAboutCrossDatasetReference) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              'Cross dataset references are not supported yet, ignoring source document',\n              sourceDocument,\n            )\n            warnedAboutCrossDatasetReference = true\n          }\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache =\n        perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((prev) => {\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n        return isEqual(prev, next) ? prev : next\n      })\n    },\n    [],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    return perspective === 'published'\n      ? [...Object.values(published)]\n      : [...Object.values(previewDrafts)]\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import { MutableRefObject, useEffect, useMemo, useRef } from 'react'\nimport { RouterContextValue, RouterState, SearchParam } from 'sanity/router'\n\nimport { debounce } from './lib/debounce'\nimport { parseRouterState } from './lib/parse'\nimport {\n  DeskDocumentPaneParams,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  previewRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  previewRef: MutableRefObject<string | undefined>\n}): {\n  deskParams: DeskDocumentPaneParams\n  navigate: PresentationNavigate\n  params: PresentationParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const { id, path, type } = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams.preview ||\n        `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams.perspective,\n      inspect: routerSearchParams.inspect,\n      rev: routerSearchParams.rev,\n      since: routerSearchParams.since,\n      template: routerSearchParams.template,\n      view: routerSearchParams.view,\n      // assist\n      pathKey: routerSearchParams.pathKey,\n      instruction: routerSearchParams.instruction,\n      // comments\n      comment: routerSearchParams.comment,\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const deskParams = useMemo<DeskDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    })\n    return pruned\n  }, [\n    params.inspect,\n    params.path,\n    params.rev,\n    params.since,\n    params.template,\n    params.view,\n    params.pathKey,\n    params.instruction,\n    params.comment,\n  ])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const navigate = useMemo(\n    () =>\n      debounce<PresentationNavigate>(\n        (nextState, nextSearchState = {}, forceReplace) => {\n          // Extract type, id and path as 'routerState'\n          const { _searchParams: routerSearchParams, ...routerState } =\n            routerStateRef.current\n\n          // Convert array of search params to an object\n          const routerSearchState = (routerSearchParams || []).reduce(\n            (acc, [key, value]) => (\n              (acc[key as keyof PresentationSearchParams] = value), acc\n            ),\n            {} as PresentationSearchParams,\n          )\n\n          // Merge routerState and incoming state\n          const state: RouterState = pruneObject({\n            ...routerState,\n            ...nextState,\n          })\n\n          // Merge routerSearchState and incoming searchState\n          const searchState = pruneObject({\n            ...routerSearchState,\n            ...nextSearchState,\n          })\n\n          state._searchParams = Object.entries(searchState).reduce(\n            (acc, [key, value]) => [...acc, [key, value]],\n            [] as SearchParam[],\n          )\n\n          const replace =\n            forceReplace ?? searchState.preview === previewRef.current\n\n          routerNavigate(state, { replace })\n        },\n        50,\n      ),\n    [routerNavigate, previewRef],\n  )\n\n  return {\n    deskParams,\n    navigate,\n    params,\n  }\n}\n","import { createPreviewSecret } from '@sanity/preview-url-secret/create-secret'\nimport { definePreviewUrl } from '@sanity/preview-url-secret/define-preview-url'\nimport { startTransition, useEffect, useMemo, useState } from 'react'\nimport {\n  type SanityClient,\n  useActiveWorkspace,\n  useClient,\n  useCurrentUser,\n} from 'sanity'\nimport { suspend } from 'suspend-react'\n\nimport { API_VERSION } from './constants'\nimport { PreviewUrlOption } from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  previewSearchParam: string | null,\n): URL {\n  const client = useClient({ apiVersion: API_VERSION })\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName)\n  const previewUrlSecret = usePreviewUrlSecret(\n    typeof previewUrl === 'object' || typeof previewUrl === 'function',\n    deps,\n  )\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        } else if (document.referrer) {\n          const referrerUrl = new URL(document.referrer)\n          if (referrerUrl.origin === resolvedUrl.origin) {\n            resultUrl = referrerUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) ||\n          resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object'\n        ? definePreviewUrl<SanityClient>(previewUrl)\n        : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      previewSearchParam,\n      referrer: typeof document === 'undefined' ? null : document.referrer,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n) {\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName],\n  )\n}\n\nfunction usePreviewUrlSecret(\n  enabled: boolean,\n  deps: (string | symbol | undefined)[],\n) {\n  const client = useClient({ apiVersion: API_VERSION })\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() =>\n        setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()),\n      )\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import {\n  type ChannelsController,\n  type ChannelStatus,\n  createChannelsController,\n} from '@sanity/channels'\nimport type { ClientPerspective } from '@sanity/client'\nimport { studioPath } from '@sanity/client/csm'\nimport { BoundaryElementProvider, Flex } from '@sanity/ui'\nimport {\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  type VisualEditingConnectionIds,\n  type VisualEditingMsg,\n} from '@sanity/visual-editing-helpers'\nimport {\n  type ReactElement,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useUnique } from 'sanity'\nimport {\n  type Path,\n  type SanityDocument,\n  type Tool,\n  useDataset,\n  useProjectId,\n} from 'sanity'\nimport { RouterContextValue, useRouter } from 'sanity/router'\nimport styled from 'styled-components'\n\nimport {\n  DEFAULT_TOOL_NAME,\n  MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n} from './constants'\nimport { ContentEditor } from './editor/ContentEditor'\nimport { DisplayedDocumentBroadcasterProvider } from './loader/DisplayedDocumentBroadcaster'\nimport LoaderQueries from './loader/LoaderQueries'\nimport { Panel } from './panels/Panel'\nimport { PanelResizer } from './panels/PanelResizer'\nimport { Panels } from './panels/Panels'\nimport { PresentationNavigateProvider } from './PresentationNavigateProvider'\nimport { usePresentationNavigator } from './PresentationNavigator'\nimport { PresentationParamsProvider } from './PresentationParamsProvider'\nimport { PresentationProvider } from './PresentationProvider'\nimport { PreviewFrame } from './preview/PreviewFrame'\nimport type {\n  DeskDocumentPaneParams,\n  LiveQueriesState,\n  LiveQueriesStateValue,\n  PresentationPluginOptions,\n  PresentationStateParams,\n} from './types'\nimport { useDocumentsOnPage } from './useDocumentsOnPage'\nimport { useParams } from './useParams'\nimport { usePreviewUrl } from './usePreviewUrl'\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const { previewUrl: _previewUrl, components } = props.tool.options ?? {}\n  const name = props.tool.name || DEFAULT_TOOL_NAME\n  const { unstable_navigator } = components || {}\n\n  const { navigate: routerNavigate, state: routerState } =\n    useRouter() as RouterContextValue & { state: PresentationStateParams }\n  const routerSearchParams = useUnique(\n    Object.fromEntries(routerState._searchParams || []),\n  )\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams.preview || null,\n  )\n\n  const [devMode] = useState(() => {\n    const option = props.tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return (\n      typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    )\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [channel, setChannel] = useState<ChannelsController<VisualEditingMsg>>()\n\n  const [liveQueries, setLiveQueries] = useState<LiveQueriesState>({})\n\n  const previewRef = useRef<typeof params.preview>()\n\n  const { params, deskParams, navigate } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    previewRef,\n  })\n\n  const [perspective, setPerspective] = useState<ClientPerspective>(() =>\n    params.perspective === 'published' ? params.perspective : 'previewDrafts',\n  )\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective)\n\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  // Update the perspective when the param changes\n  useEffect(() => {\n    if (perspective !== params.perspective) {\n      navigate(\n        {},\n        {\n          perspective: perspective === 'published' ? 'published' : undefined,\n        },\n      )\n    }\n  }, [params.perspective, perspective, navigate])\n\n  const [overlaysConnection, setOverlaysConnection] =\n    useState<ChannelStatus>('connecting')\n  const [loadersConnection, setLoadersConnection] =\n    useState<ChannelStatus>('connecting')\n  const [previewKitConnection, setPreviewKitConnection] =\n    useState<ChannelStatus>('connecting')\n\n  const [popups] = useState<Set<Window>>(() => new Set())\n  const handleOpenPopup = useCallback(\n    (url: string) => {\n      const source = window.open(url, '_blank')\n      if (source) {\n        popups.add(source)\n      }\n    },\n    [popups],\n  )\n\n  useEffect(() => {\n    if (popups.size && channel) {\n      // loop popups and call channel.addSource\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          channel.addSource(source)\n        }\n      }\n    }\n  }, [channel, popups, popups.size])\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target) return\n\n    const nextChannel = createChannelsController<VisualEditingMsg>({\n      id: 'presentation' satisfies VisualEditingConnectionIds,\n      target,\n      targetOrigin,\n      connectTo: [\n        {\n          id: 'overlays' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setOverlaysConnection,\n          onEvent(type, data) {\n            if (type === 'overlay/focus' && 'id' in data) {\n              navigate({\n                type: data.type,\n                id: data.id,\n                path: data.path,\n              })\n            } else if (type === 'overlay/navigate') {\n              if (previewRef.current !== data.url) {\n                const isInitialNavigation = previewRef.current === undefined\n\n                previewRef.current = data.url\n                if (isInitialNavigation) {\n                  navigate({}, { preview: data.url })\n                } else {\n                  navigate(\n                    { id: undefined, type: undefined },\n                    { preview: data.url },\n                  )\n                }\n              }\n            } else if (type === 'overlay/toggle') {\n              setOverlayEnabled(data.enabled)\n            }\n          },\n        },\n        {\n          id: 'loaders' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setLoadersConnection,\n          onEvent(type, data) {\n            if (\n              type === 'loader/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            } else if (\n              type === 'loader/query-listen' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              if (\n                typeof data.heartbeat === 'number' &&\n                data.heartbeat! < MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL\n              ) {\n                throw new Error(\n                  `Loader query listen heartbeat interval must be at least ${MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL}ms`,\n                )\n              }\n              setLiveQueries((prev) => ({\n                ...prev,\n                [getQueryCacheKey(data.query, data.params)]: {\n                  perspective: data.perspective,\n                  query: data.query,\n                  params: data.params,\n                  receivedAt: Date.now(),\n                  heartbeat: data.heartbeat ?? false,\n                } satisfies LiveQueriesStateValue,\n              }))\n            }\n          },\n        },\n        {\n          id: 'preview-kit' satisfies VisualEditingConnectionIds,\n          heartbeat: true,\n          onStatusUpdate: setPreviewKitConnection,\n          onEvent(type, data) {\n            if (\n              type === 'preview-kit/documents' &&\n              data.projectId === projectId &&\n              data.dataset === dataset\n            ) {\n              setDocumentsOnPage(data.perspective, data.documents)\n            }\n          },\n        },\n      ],\n    })\n    setChannel(nextChannel)\n\n    return () => {\n      nextChannel.destroy()\n      setChannel(undefined)\n    }\n  }, [dataset, projectId, setDocumentsOnPage, navigate, targetOrigin])\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        startTransition(() =>\n          setLiveQueries((liveQueries) => {\n            if (Object.keys(liveQueries).length < 1) {\n              return liveQueries\n            }\n\n            const now = Date.now()\n            const hasAnyExpired = Object.values(liveQueries).some(\n              (liveQuery) =>\n                liveQuery.heartbeat !== false &&\n                now > liveQuery.receivedAt + liveQuery.heartbeat,\n            )\n            if (!hasAnyExpired) {\n              return liveQueries\n            }\n            const next = {} as LiveQueriesState\n            for (const [key, value] of Object.entries(liveQueries)) {\n              if (\n                value.heartbeat !== false &&\n                now > value.receivedAt + value.heartbeat\n              ) {\n                continue\n              }\n              next[key] = value\n            }\n            return next\n          }),\n        ),\n      MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n    )\n    return () => clearInterval(interval)\n  }, [])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({ path: studioPath.toString(nextPath) }, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (\n        url.origin === initialPreviewUrl.origin &&\n        preview !== params.preview\n      ) {\n        navigate({ id: undefined, path: undefined }, { preview })\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleDeskParams = useCallback(\n    (deskParams: DeskDocumentPaneParams) => {\n      navigate({}, deskParams)\n    },\n    [navigate],\n  )\n\n  useEffect(() => {\n    if (params.id && params.path) {\n      channel?.send('overlays', 'presentation/focus', {\n        id: params.id,\n        path: params.path,\n      })\n    } else {\n      channel?.send('overlays', 'presentation/blur', undefined)\n    }\n  }, [channel, params.id, params.path])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      previewRef.current &&\n      params.preview &&\n      previewRef.current !== params.preview\n    ) {\n      previewRef.current = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        channel?.send('overlays', 'presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [channel, overlaysConnection, targetOrigin, params.preview])\n\n  const toggleOverlay = useCallback(\n    () => channel?.send('overlays', 'presentation/toggleOverlay', undefined),\n    [channel],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(\n    null,\n  )\n\n  const [{ navigatorEnabled, toggleNavigator }, PresentationNavigator] =\n    usePresentationNavigator({ unstable_navigator })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, { rev: undefined })\n    }\n    idRef.current = params.id\n  })\n\n  return (\n    <>\n      <PresentationProvider\n        deskParams={deskParams}\n        devMode={devMode}\n        name={name}\n        params={params}\n        navigate={navigate}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <Container height=\"fill\">\n              <Panels>\n                <PresentationNavigator />\n                <Panel\n                  id=\"preview\"\n                  minWidth={325}\n                  defaultSize={navigatorEnabled ? 50 : 75}\n                  order={3}\n                >\n                  <Flex\n                    direction=\"column\"\n                    flex={1}\n                    height=\"fill\"\n                    ref={setBoundaryElement}\n                  >\n                    <BoundaryElementProvider element={boundaryElement}>\n                      <PreviewFrame\n                        initialUrl={initialPreviewUrl}\n                        navigatorEnabled={navigatorEnabled}\n                        onPathChange={handlePreviewPath}\n                        openPopup={handleOpenPopup}\n                        overlayEnabled={overlayEnabled}\n                        params={params}\n                        perspective={perspective}\n                        ref={iframeRef}\n                        setPerspective={setPerspective}\n                        targetOrigin={targetOrigin}\n                        toggleNavigator={toggleNavigator}\n                        toggleOverlay={toggleOverlay}\n                        loadersConnection={loadersConnection}\n                        overlaysConnection={overlaysConnection}\n                        previewKitConnection={previewKitConnection}\n                      />\n                    </BoundaryElementProvider>\n                  </Flex>\n                </Panel>\n                <PanelResizer order={4} />\n                <Panel id=\"content\" minWidth={325} order={5}>\n                  <DisplayedDocumentBroadcasterProvider\n                    documentId={params.id}\n                    setDisplayedDocument={setDisplayedDocument}\n                  >\n                    <ContentEditor\n                      refs={documentsOnPage}\n                      deskParams={deskParams}\n                      documentId={params.id}\n                      documentType={params.type}\n                      onDeskParams={handleDeskParams}\n                      onFocusPath={handleFocusPath}\n                      previewUrl={params.preview}\n                    />\n                  </DisplayedDocumentBroadcasterProvider>\n                </Panel>\n              </Panels>\n            </Container>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {channel && (\n        <LoaderQueries\n          channel={channel}\n          liveQueries={liveQueries}\n          perspective={perspective}\n          liveDocument={displayedDocument}\n          documentsOnPage={documentsOnPage}\n        />\n      )}\n    </>\n  )\n}\n"],"names":["jsx","jsxs","Fragment","studioPath","applySourceDocuments","getPublishedId$1","Card","Flex","Container$1","Stack","Text","Inline","Box","Button","Code","Label","ErrorBoundary","TextInput","Switch","usePrefersReducedMotion","TooltipDelayGroupProvider","Tooltip","MenuButton","Menu","MenuItem","Spinner","useToast","BoundaryElementProvider","useContext","forwardRef","useCallback","useMemo","useState","useEffect","useSyncExternalStore","memo","createContext","useLayoutEffect","useRef","createElement","startTransition","useUnique","getPublishedId","useClient","useActiveWorkspace","Hotkeys","useCurrentUser","useProjectId","useDataset","StateLink","useRouter","styled","PresentationContext","LIVE_QUERY_CACHE_SIZE","LIVE_QUERY_CACHE_BATCH_SIZE","PresentationNavigateContext","PresentationParamsContext","MAX_TIME_TO_OVERLAYS_CONNECTION","API_VERSION","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","DEFAULT_TOOL_NAME","PaneRouterContext","PaneLayout","DeskToolProvider","DocumentListPane$1","useDeskTool","DocumentPane$1","DisplayedDocumentBroadcasterProvider","applyPatch","LRUCache","ResetIcon","PanelLeftIcon","RefreshIcon","ShareIcon","ChevronDownIcon","CheckmarkIcon","DesktopIcon","MobileDeviceIcon","LaunchIcon","CopyIcon","EditIcon","PublishIcon","DatabaseIcon","createPreviewSecret","withoutSecretSearchParams","hasSecretSearchParams","setSecretSearchParams","motion","MotionConfig","AnimatePresence","isEqual","definePreviewUrl","suspend","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","byteToHex","i","push","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","RESPONSE_TIMEOUT","HEARTBEAT_INTERVAL","HANDSHAKE_INTERVAL","HANDSHAKE_MSG_TYPES","isHandshakeMessage","type","some","t","isLegacyHandshakeMessage","data","Array","isArray","every","key","startsWith","createChannelsControllerInternal","config","target","channels","connectTo","map","buffer","id","handler","handshakeHandler","status","interval","heartbeat","stopHandshake","channel","window","clearInterval","e","find","from","setChannelStatus","sendHandshake","messageHandler","connectionId","args","onEvent","send","responseTo","handleEvents","console","error","origin","domain","to","includes","targetOrigin","isValidMessageEvent","stopHeartbeat","next","onStatusUpdate","uuid","setInterval","startHandshake","heartbeatInverval","startHeartbeat","toFlush","splice","length","forEach","flush","msg","postMessage","expectResponse","maxWait","setTimeout","removeEventListener","transact","warn","eventData","clearTimeout","addEventListener","destroy","r","o","u","alt","ctrl","mod","test","navigator","platform","shift","n","toUpperCase","parseId","rawId","segments","decodeURIComponent","split","join","parsePath","rawPath","exec","Number","s","c","_key","urlStringToPath","ErrorCard","props","children","message","onRetry","onContinueAnyway","restProps","retryButton","fontSize","mode","onClick","text","continueAnywayButton","tone","height","align","justify","Container","padding","sizing","width","space","size","weight","muted","usePresentationTool","presentation","resolveQueryStringFromParams","nextParams","allowed","params","parts","Object","entries","value","encodeQueryString","filter","reduce","obj","BackLink","ref","deskParams","state","_searchParams","preview","title","ReferenceChildLink","documentId","documentType","PresentationPaneRouterProvider","onDeskParams","previewUrl","refs","routerState","resolvePathFromState","routerSearchParams","fromEntries","createPathWithParams","context","index","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","childLinkProps","childId","_id","_type","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","pane","closeCurrent","duplicateCurrent","setView","viewId","setParams","inspect","setPayload","navigateIntent","intentName","intentParams","Provider","RootLayout","Root","WrappedCode","DocumentListPane","devMode","ids","schemaTypeName","errorParams","setErrorParams","handleRetry","flex","overflow","radius","onCatch","direction","DeskDocumentListPane","itemId","paneKey","DocumentListPanel","refsWithParsedIds","DocumentPane","onFocusPath","paneDocumentNode","setLayoutCollapsed","handleRootCollapse","handleRootExpand","style","onExpand","onCollapse","DeskDocumentPane","DocumentPanel","ContentEditor","document","LoaderQueries","liveDocument","perspective","activePerspective","liveQueries","documentsOnPage","cache","studioClient","apiVersion","clientConfig","client","withConfig","resultSourceMap","projectId","dataset","turboIds","documentsActuallyInUse","Set","max","capacity","documentsCacheLastUpdated","setDocumentsCacheLastUpdated","Turbo","query","QuerySubscription","refreshInterval","batch","setBatch","batchSet","flat","nextBatch","turboId","has","add","nextBatchSlice","prevBatch","subscription","listen","events","effectFormat","includePreviousRevision","includeResult","tag","subscribe","update","transition","delete","Date","now","effects","apply","cachedDocument","peek","patchDoc","_rev","patchedDocument","set","unsubscribe","GetDocuments","JSON","stringify","missingIds","getDocuments","then","documents","doc","parse","useQueryParams","snapshot","setSnapshot","setError","revalidate","startRefresh","onLine","e4","n2","visibilityState","d","f","e3","useRevalidate","shouldRefetch","fulfilled","fetching","controller","AbortController","async","effect","signal","result","fetch","filterResponse","aborted","onFinally","catch","name","finally","abort","turboChargeResultIfSourceMap","useQuerySubscription","displayName","warnedAboutCrossDatasetReference","sourceDocument","_projectId","get","changedValue","previousValue","PanelsContext","div","Panel","defaultSize","minWidth","maxWidth","order","getPanelStyle","registerElement","unregisterElement","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","el","current","usePanelId","activeResizer","drag","startDragging","stopDragging","isDragging","onMouseDown","event","nativeEvent","onDrag","onDragStop","blur","debounce","fn","timeout","timer","itemKey","getStoredItem","localStorage","getItem","getKeyForPanels","panels","panel","usePanelsStorage","widths","setItem","setStoredItem","setDebounced","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","getPanelWidth","findIndex","toPrecision","getOffset","handleElement","initialOffset","initialHandleElementRect","clientX","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","b","validateWidths","widthsToValidate","total","remainingWidth","toFixed","abs","PanelsWrapper","Panels","panelsEl","setElements","Map","setWidths","setActiveResizer","panelsRef","flexGrow","pointerEvents","prev","dragRef","innerWidth","dragOffset","panelAfter","panelBefore","resizerIndex","resizerRect","startX","elementsArr","resizer","resizeElement","acc","pageX","preventDefault","stopPropagation","prevWidths","nextWidths","delta","panelsState","initialDragState","initialWidths","pivotPanel","deltaApplied","localeCompare","numeric","getNextWidths","widthsChanged","prevWidth","storage","storedWidths","validatedStoredWidths","defaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","getDefaultWidths","resizeObserver","ResizeObserver","observe","disconnect","PresentationNavigateProvider","navigate","_navigate","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","defaultValue","setValue","useLocalState","navigatorEnabled","toggleNavigator","enabled","Component","Navigator","NavigatorComponent","navigatorDisabled","PresentationParamsProvider","PresentationProvider","IFrame","iframe","PreviewLocationInput","basePath","activeWorkspace","onChange","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","currentTarget","handleKeyDown","absoluteValue","nextValue","handleBlur","resetButton","icon","clearButton","onBlur","onClear","onKeyDownCapture","zIndex","MotionFlex","StyledSwitch","PERSPECTIVE_TITLES","previewDrafts","published","raw","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","PreviewFrame","initialUrl","onPathChange","openPopup","overlayEnabled","setPerspective","toggleOverlay","loadersConnection","overlaysConnection","previewKitConnection","setMode","prefersReducedMotion","setDesktopMode","setMobileMode","loading","setLoading","timedOut","setTimedOut","refreshing","setRefreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","previewLocationOrigin","location","handleRefresh","src","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","previewLocationRoute","URL","pathname","search","onIFrameLoad","duration","delay","shadow","position","gap","minHeight","animate","content","fallbackPlacements","placement","portal","selected","whiteSpace","paddingY","keys","marginTop","marginBottom","as","lineHeight","borderRadius","userSelect","margin","checked","button","iconRight","menu","ShareUrlMenuItems","popover","constrainSize","pressed","opacity","cursor","initial","exit","variants","errorVariants","background","inset","borderTop","boxShadow","spinnerVariants","sizes","backdropFilter","WebkitBackdropFilter","WebkitTransition","iframeVariants","onLoad","desktop","mobile","scale","idle","reloading","active","handleOpenPopup","href","CopyUrlMenuButton","rel","pushToast","currentUser","setDisabled","clipboard","closable","url","onError","description","ClipboardItem","item","previewUrlSecret","newUrl","secret","Blob","resolvePreviewUrl","write","writeText","pruneObject","useParams","initialPreviewUrl","routerNavigate","previewRef","path","rev","since","template","view","pathKey","instruction","comment","routerStateRef","nextState","nextSearchState","forceReplace","routerSearchState","searchState","replace","usePreviewUrl","toolName","previewSearchParam","workspace","deps","workspaceName","resolveUUID","useSuspendCacheKeys","secretLastExpiredAt","setSecretLastExpiredAt","expiresAt","getTime","usePreviewUrlSecret","resolvedUrl","resultUrl","restoredUrl","referrer","referrerUrl","studioBasePath","Symbol","PresentationTool","_previewUrl","components","tool","option","hostname","iframeRef","setChannel","setLiveQueries","setDocumentsOnPage","setPublished","setPreviewDrafts","sourceDocuments","useDocumentsOnPage","setOverlayEnabled","setOverlaysConnection","setLoadersConnection","setPreviewKitConnection","popups","source","open","closed","addSource","contentWindow","nextChannel","sources","sendToSource","WeakMap","destroySource","destroyMany","sendToMany","prevConnectTo","createChannelsController","isInitialNavigation","receivedAt","liveQuery","handleFocusPath","nextPath","handlePreviewPath","handleDeskParams","displayedDocument","setDisplayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","idRef"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}