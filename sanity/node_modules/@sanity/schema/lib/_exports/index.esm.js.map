{"version":3,"file":"index.esm.js","sources":["../../src/legacy/types/constants.ts","../../src/legacy/types/any.ts","../../src/legacy/preview/primitivePreview.ts","../../src/legacy/types/string.ts","../../src/legacy/types/text.ts","../../src/legacy/types/datetime.ts","../../src/legacy/types/date.ts","../../src/legacy/types/boolean.ts","../../src/legacy/types/url.ts","../../src/legacy/types/email.ts","../../src/legacy/types/number.ts","../../src/legacy/types/utils.ts","../../src/legacy/preview/JSONStringifyHuman.ts","../../src/legacy/preview/fallbackPrepare.ts","../../src/legacy/preview/portableText.ts","../../src/legacy/preview/guessPreviewConfig.ts","../../src/legacy/preview/deprecationUtils.ts","../../src/legacy/preview/createPreviewGetter.ts","../../src/legacy/ordering/guessOrderingConfig.ts","../../src/legacy/searchConfig/normalize.ts","../../src/legacy/types/object.ts","../../src/legacy/types/reference.ts","../../src/legacy/types/crossDatasetReference.ts","../../src/legacy/types/image/fieldDefs.ts","../../src/legacy/types/image.ts","../../src/legacy/types/file.ts","../../src/legacy/types/document.ts","../../src/legacy/types/array.ts","../../src/legacy/types/blocks/defaults.ts","../../src/legacy/types/blocks/block.ts","../../src/legacy/types/blocks/span.ts","../../src/legacy/Schema.ts","../../src/_exports/index.ts"],"sourcesContent":["export const DEFAULT_OVERRIDEABLE_FIELDS = [\n  'jsonType',\n  'type',\n  'name',\n  'title',\n  'description',\n  'options',\n  'fieldsets',\n  'validation',\n  'readOnly',\n  'hidden',\n  'components',\n  'diffComponent',\n  'initialValue',\n]\n","import {pick, omit} from 'lodash'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ANY_CORE = {\n  name: 'any',\n  type: null,\n  jsonType: 'any',\n}\n\nexport const AnyType = {\n  get() {\n    return ANY_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const parsed = Object.assign(pick(ANY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ANY_CORE,\n      of: subTypeDef.of.map((fieldDef) => {\n        return {\n          name: fieldDef.name,\n          type: extendMember(omit(fieldDef, 'name')),\n        }\n      }),\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export default {\n  prepare: (val) => ({title: String(val)}),\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst STRING_CORE = {\n  name: 'string',\n  title: 'String',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const StringType = {\n  get() {\n    return STRING_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(STRING_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: STRING_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS, 'rows']\n\nconst TEXT_CORE = {\n  name: 'text',\n  title: 'Text',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const TextType = {\n  get() {\n    return TEXT_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(TEXT_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: TEXT_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATETIME_CORE = {\n  name: 'datetime',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateTimeType = {\n  get() {\n    return DATETIME_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATETIME_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATETIME_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATE_CORE = {\n  name: 'date',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateType = {\n  get() {\n    return DATE_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(DATE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: DATE_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst BOOLEAN_CORE = {\n  name: 'boolean',\n  title: 'Boolean',\n  type: null,\n  jsonType: 'boolean',\n}\n\nexport const BooleanType = {\n  get() {\n    return BOOLEAN_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(BOOLEAN_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: BOOLEAN_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst URL_CORE = {\n  name: 'url',\n  title: 'Url',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const UrlType = {\n  get() {\n    return URL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(URL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: URL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst EMAIL_CORE = {\n  name: 'email',\n  title: 'Email',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const EmailType = {\n  get() {\n    return EMAIL_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(EMAIL_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: EMAIL_CORE,\n      preview: primitivePreview,\n    })\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst NUMBER_CORE = {\n  name: 'number',\n  title: 'Number',\n  type: null,\n  jsonType: 'number',\n}\n\nexport const NumberType = {\n  get() {\n    return NUMBER_CORE\n  },\n  extend(subTypeDef) {\n    const parsed = Object.assign(pick(NUMBER_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: NUMBER_CORE,\n      preview: primitivePreview,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","interface Config {\n  enumerable?: boolean\n  writable?: boolean\n}\nexport function lazyGetter(target, key, getter, config: Config = {}) {\n  Object.defineProperty(target, key, {\n    configurable: true,\n    enumerable: config.enumerable !== false,\n    get() {\n      const val = getter()\n      Object.defineProperty(target, key, {\n        value: val,\n        writable: Boolean(config.writable),\n        configurable: false,\n      })\n      return val\n    },\n  })\n  return target\n}\n\n//\n// const o = lazyGetter({}, 'expensive', function() {\n//   console.log('doing expensive calculations')\n//   return 'RESULT OF EXPENSIVE'\n// })\n//\n// console.log(o.expensive)\n// console.log(o.expensive)\n// console.log(o.expensive)\n","import {pick} from 'lodash'\n\nfunction isEmpty(object) {\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction _stringify(value, options, depth) {\n  if (depth > options.maxDepth) {\n    return '...'\n  }\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return '[empty]'\n    }\n    const capLength = Math.max(value.length - options.maxBreadth)\n    const asString = value\n      .slice(0, options.maxBreadth)\n      .map((item, index) => _stringify(item, options, depth + 1))\n      .concat(capLength > 0 ? `…+${capLength}` : [])\n      .join(', ')\n\n    return depth === 0 ? asString : `[${asString}]`\n  }\n  if (typeof value === 'object' && value !== null) {\n    const keys = Object.keys(value).filter(\n      (key) => !options.ignoreKeys.includes(key) && typeof value[key] !== 'undefined',\n    )\n\n    if (isEmpty(pick(value, keys))) {\n      return '{empty}'\n    }\n\n    const asString = keys\n      .slice(0, options.maxBreadth)\n      .map((key) => `${key}: ${_stringify(value[key], options, depth + 1)}`)\n      .join(', ')\n\n    return depth === 0 ? asString : `{${asString}}`\n  }\n  const asString = String(value)\n  return asString === '' ? '\"\"' : asString\n}\n\nexport default function stringify(\n  value,\n  options: {maxDepth?: number; maxBreadth?: number; ignoreKeys?: string[]} = {},\n) {\n  const opts = {\n    maxDepth: 'maxDepth' in options ? options.maxDepth : 2,\n    maxBreadth: 'maxBreadth' in options ? options.maxBreadth : 2,\n    ignoreKeys: 'ignoreKeys' in options ? options.ignoreKeys : [],\n  }\n  return _stringify(value, opts, 0)\n}\n","import {pick} from 'lodash'\nimport stringify from './JSONStringifyHuman'\n\nconst OPTIONS = {\n  maxEntries: 2,\n  maxDepth: 2,\n  maxBreadth: 2,\n  ignoreKeys: ['_id', '_type', '_key', '_ref'],\n}\n\nexport function createFallbackPrepare(fieldNames) {\n  return (value) => ({\n    title: stringify(pick(value, fieldNames), OPTIONS),\n  })\n}\n","type FieldDef = {\n  type: string\n  name: string\n  of?: {type: string}[]\n}\n\nexport function isBlockField(field: FieldDef): boolean {\n  return field.type === 'array' && field.of && field.of.some((member) => member.type === 'block')\n}\n","import {omitBy, isUndefined} from 'lodash'\nimport arrify from 'arrify'\nimport {createFallbackPrepare} from './fallbackPrepare'\nimport {isBlockField} from './portableText'\n\nconst TITLE_CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption']\nconst DESCRIPTION_CANDIDATES = ['description', ...TITLE_CANDIDATES]\n\nfunction fieldHasReferenceTo(fieldDef, refType) {\n  return arrify(fieldDef.to || []).some((memberTypeDef) => memberTypeDef.type === refType)\n}\n\nfunction isImageAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.imageAsset')\n}\n\nfunction resolveImageAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const imageAssetField = fields.find(isImageAssetField)\n  if (imageAssetField) {\n    return imageAssetField.name\n  }\n  const fieldWithImageAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isImageAssetField),\n  )\n\n  return fieldWithImageAsset ? `${fieldWithImageAsset.name}.asset` : undefined\n}\n\nfunction isFileAssetField(fieldDef) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.fileAsset')\n}\n\nfunction resolveFileAssetPath(typeDef) {\n  const fields = typeDef.fields || []\n  const assetField = fields.find(isFileAssetField)\n  if (assetField) {\n    return assetField.name\n  }\n  const fieldWithFileAsset = fields.find((fieldDef) =>\n    (fieldDef.fields || []).some(isFileAssetField),\n  )\n  return fieldWithFileAsset ? `${fieldWithFileAsset.name}.asset` : undefined\n}\n\nexport default function guessPreviewFields(rawObjectTypeDef) {\n  const objectTypeDef = {fields: [], ...rawObjectTypeDef}\n\n  const stringFieldNames = objectTypeDef.fields\n    .filter((field) => field.type === 'string')\n    .map((field) => field.name)\n\n  const blockFieldNames = objectTypeDef.fields.filter(isBlockField).map((field) => field.name)\n\n  // Check if we have fields with names that is listed in candidate fields\n  let titleField = TITLE_CANDIDATES.find(\n    (candidate) => stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate),\n  )\n\n  let descField = DESCRIPTION_CANDIDATES.find(\n    (candidate) =>\n      candidate !== titleField &&\n      (stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate)),\n  )\n\n  if (!titleField) {\n    // Pick first defined string field\n    titleField = stringFieldNames[0] || blockFieldNames[0]\n    // Pick next as desc\n    descField = stringFieldNames[1] || blockFieldNames[1]\n  }\n\n  const mediaField = objectTypeDef.fields.find((field) => field.type === 'image')\n\n  const imageAssetPath = resolveImageAssetPath(objectTypeDef)\n\n  if (!titleField) {\n    const fileAssetPath = resolveFileAssetPath(objectTypeDef)\n    if (fileAssetPath) {\n      titleField = `${fileAssetPath}.originalFilename`\n    }\n    if (imageAssetPath) {\n      titleField = `${imageAssetPath}.originalFilename`\n    }\n  }\n\n  if (!titleField && !imageAssetPath) {\n    // last resort, pick all fields and concat them\n    const fieldNames = objectTypeDef.fields.map((field) => field.name)\n    const fieldMapping = fieldNames.reduce((acc, fieldName) => {\n      acc[fieldName] = fieldName\n      return acc\n    }, {})\n\n    return {\n      select: fieldMapping,\n      prepare: createFallbackPrepare(fieldNames),\n    }\n  }\n\n  const select = omitBy(\n    {\n      title: titleField,\n      description: descField,\n      media: mediaField ? mediaField.name : imageAssetPath,\n    },\n    isUndefined,\n  )\n\n  return {\n    select: select,\n  }\n}\n","export function warnIfPreviewOnOptions(type) {\n  if (type.options && type.options.preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! The preview config is no longer defined on \"options\", but instead on the type/field itself.\nPlease move {options: {preview: ...}} to {..., preview: ...} on the type/field definition of \"${type.name}\".\n`)\n  }\n}\n\nexport function warnIfPreviewHasFields(type) {\n  const preview = type.preview || (type.options || {}).preview\n  if (preview && 'fields' in preview) {\n    // eslint-disable-next-line no-console\n    console.warn(`Heads up! \"preview.fields\" should be renamed to \"preview.select\". Please update the preview config for \"${type.name}\".\n`)\n  }\n}\n","import {pick} from 'lodash'\nimport guessPreviewConfig from './guessPreviewConfig'\nimport {warnIfPreviewOnOptions, warnIfPreviewHasFields} from './deprecationUtils'\n\nfunction parseSelection(selection) {\n  return selection.reduce((acc, field) => {\n    acc[field] = field\n    return acc\n  }, {})\n}\n\nfunction parsePreview(preview) {\n  if (!preview) {\n    return preview\n  }\n  const select = preview.select || preview.fields || {}\n  if (Array.isArray(select)) {\n    return {\n      ...pick(preview, ['prepare', 'component']),\n      select: parseSelection(select),\n    }\n  }\n  return {\n    ...pick(preview, ['prepare', 'component']),\n    select,\n  }\n}\n\nexport default function createPreviewGetter(objectTypeDef) {\n  return function previewGetter() {\n    warnIfPreviewOnOptions(objectTypeDef)\n    warnIfPreviewHasFields(objectTypeDef)\n    const preview = parsePreview(objectTypeDef.preview || (objectTypeDef.options || {}).preview)\n    return preview || guessPreviewConfig(objectTypeDef)\n  }\n}\n","import {capitalize, startCase} from 'lodash'\nimport {SortOrdering} from '@sanity/types'\n\nconst CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption', 'description']\n\nconst PRIMITIVES = ['string', 'boolean', 'number']\n\nconst isPrimitive = (field) => PRIMITIVES.includes(field.type)\n\nexport default function guessOrderingConfig(objectTypeDef): SortOrdering[] {\n  let candidates = CANDIDATES.filter((candidate) =>\n    objectTypeDef.fields.some((field) => isPrimitive(field) && field.name === candidate),\n  )\n\n  // None of the candidates were found, fallback to all fields\n  if (candidates.length === 0) {\n    candidates = objectTypeDef.fields.filter(isPrimitive).map((field) => field.name)\n  }\n\n  return candidates.map(\n    (name): SortOrdering => ({\n      name: name,\n      i18n: {\n        title: {key: `default-orderings.${name}`, ns: 'studio'},\n      },\n      title: capitalize(startCase(name)),\n      by: [{field: name, direction: 'asc'}],\n    }),\n  )\n}\n","import {isPlainObject, toPath} from 'lodash'\n\nexport function normalizeSearchConfigs(configs) {\n  if (!Array.isArray(configs)) {\n    throw new Error(\n      'The search config of a document type must be an array of search config objects',\n    )\n  }\n  return configs.map((conf) => {\n    if (conf === 'defaults') {\n      return conf\n    }\n    if (!isPlainObject(conf)) {\n      throw new Error('Search config must be an object of {path: string, weight: number}')\n    }\n    return {\n      weight: 'weight' in conf ? conf.weight : 1,\n      path: toPath(conf.path),\n      mapWith: typeof conf.mapWith === 'string' ? conf.mapWith : undefined,\n    }\n  })\n}\n","import {castArray, flatMap, pick, startCase} from 'lodash'\nimport type {\n  FieldGroup,\n  FieldGroupDefinition,\n  Fieldset,\n  FieldsetDefinition,\n  ObjectDefinition,\n  ObjectField,\n} from '@sanity/types'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport guessOrderingConfig from '../ordering/guessOrderingConfig'\nimport {normalizeSearchConfigs} from '../searchConfig/normalize'\nimport {resolveSearchConfig} from '../searchConfig/resolve'\nimport {lazyGetter} from './utils'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [\n  ...DEFAULT_OVERRIDEABLE_FIELDS,\n  'orderings',\n  '__experimental_search',\n  'blockEditor',\n  'icon',\n]\n\nexport const ObjectType = {\n  get() {\n    return {\n      name: 'object',\n      title: 'Object',\n      type: null,\n      jsonType: 'object',\n    }\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const subTypeDef = {fields: [], ...rawSubTypeDef}\n\n    const options = {...(subTypeDef.options || {})}\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), subTypeDef, {\n      type: this.get(),\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      orderings: subTypeDef.orderings || guessOrderingConfig(subTypeDef),\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, group, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          group,\n          fieldset,\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'groups', () => {\n      return createFieldsGroups(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    lazyGetter(\n      parsed,\n      '__experimental_search',\n      () => {\n        const userProvidedSearchConfig = subTypeDef.__experimental_search\n          ? normalizeSearchConfigs(subTypeDef.__experimental_search)\n          : null\n\n        if (userProvidedSearchConfig) {\n          return userProvidedSearchConfig.map((entry) =>\n            entry === 'defaults' ? normalizeSearchConfigs(subTypeDef) : entry,\n          )\n        }\n        return resolveSearchConfig(parsed)\n      },\n      {\n        enumerable: false,\n      },\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"object\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            title:\n              extensionDef.title ||\n              subTypeDef.title ||\n              (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n            type: parent,\n          })\n          lazyGetter(current, '__experimental_search', () => parent.__experimental_search)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nexport function createFieldsets(typeDef: ObjectDefinition, fields: ObjectField[]): Fieldset[] {\n  const fieldsetsByName: Record<string, FieldsetDefinition & {fields: ObjectField[]}> = {}\n\n  for (const fieldset of typeDef.fieldsets || []) {\n    if (fieldsetsByName[fieldset.name]) {\n      throw new Error(\n        `Duplicate fieldset name \"${fieldset.name}\" found for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }'`,\n      )\n    }\n\n    fieldsetsByName[fieldset.name] = {title: startCase(fieldset.name), ...fieldset, fields: []}\n  }\n\n  const fieldsets = new Set<Fieldset>()\n\n  for (const field of fields) {\n    if (!field.fieldset) {\n      fieldsets.add({single: true, field})\n      continue\n    }\n\n    const fieldset = fieldsetsByName[field.fieldset]\n    if (!fieldset) {\n      throw new Error(\n        `Fieldset '${field.fieldset}' is not defined in schema for type '${typeDef.name}'`,\n      )\n    }\n\n    fieldset.fields.push(field)\n\n    // The Set will prevent duplicates\n    fieldsets.add(fieldset)\n  }\n\n  return Array.from(fieldsets)\n}\n\nfunction createFieldsGroups(typeDef: ObjectDefinition, fields: ObjectField[]): FieldGroup[] {\n  const groupsByName: Record<string, FieldGroupDefinition & {fields: ObjectField[]}> = {}\n\n  let numDefaultGroups = 0\n  for (const group of typeDef.groups || []) {\n    if (groupsByName[group.name]) {\n      throw new Error(\n        `Duplicate group name \"${group.name}\" found for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }'`,\n      )\n    }\n\n    groupsByName[group.name] = {title: startCase(group.name), ...group, fields: []}\n\n    if (group.default && ++numDefaultGroups > 1) {\n      // Throw if you have multiple default field groups defined\n      throw new Error(\n        `More than one field group defined as default for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }' - only 1 is supported`,\n      )\n    }\n  }\n\n  fields.forEach((field) => {\n    const fieldGroupNames = castArray(field.group || [])\n    if (fieldGroupNames.length === 0) {\n      return\n    }\n\n    fieldGroupNames.forEach((fieldGroupName) => {\n      const currentGroup = groupsByName[fieldGroupName]\n\n      if (!currentGroup) {\n        throw new Error(\n          `Field group '${fieldGroupName}' is not defined in schema for type '${\n            typeDef.title ? typeDef.name : startCase(typeDef.name)\n          }'`,\n        )\n      }\n\n      currentGroup.fields.push(field)\n    })\n  })\n\n  return flatMap(groupsByName).filter((group) => group.fields.length > 0)\n}\n","import arrify from 'arrify'\nimport {pick} from 'lodash'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst REFERENCE_CORE = {\n  name: 'reference',\n  title: 'Reference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Reference'\n  }\n  return `Reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title),\n    'or',\n  ).toLowerCase()}`\n}\n\nexport const ReferenceType = {\n  get() {\n    return REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in reference definition. Check the type ${subTypeDef.name}`,\n      )\n    }\n    const parsed = Object.assign(pick(REFERENCE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: REFERENCE_CORE,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => createMemberType(toType))\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import arrify from 'arrify'\nimport {capitalize, pick} from 'lodash'\nimport {resolveSearchConfigForBaseFieldPaths} from '../searchConfig/resolve'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference marker',\n  type: 'boolean',\n}\n\nconst DATASET_FIELD = {\n  name: '_dataset',\n  title: 'Target dataset',\n  type: 'string',\n}\n\nconst PROJECT_ID_FIELD = {\n  name: '_projectId',\n  title: 'Target project ID',\n  type: 'string',\n  hidden: true,\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD, DATASET_FIELD, PROJECT_ID_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst CROSS_DATASET_REFERENCE_CORE = {\n  name: 'crossDatasetReference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr, conjunction) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type) {\n  if (!type.to || type.to.length === 0) {\n    return 'Cross dataset Reference'\n  }\n  return `Cross dataset reference to ${humanize(\n    arrify(type.to).map((toType) => toType.title || capitalize(toType.type)),\n    'or',\n  ).toLowerCase()}`\n}\n\nexport const CrossDatasetReferenceType = {\n  get() {\n    return CROSS_DATASET_REFERENCE_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in cross dataset reference definition. Check the type ${subTypeDef.name}`,\n      )\n    }\n    const parsed = Object.assign(\n      pick(CROSS_DATASET_REFERENCE_CORE, OVERRIDABLE_FIELDS),\n      subTypeDef,\n      {\n        type: CROSS_DATASET_REFERENCE_CORE,\n      },\n    )\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType) => {\n        return {\n          ...toType,\n          // eslint-disable-next-line camelcase\n          __experimental_search: resolveSearchConfigForBaseFieldPaths(toType),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: [{type: 'sanity.imageAsset'}],\n}\n\nexport const HOTSPOT_FIELD = {\n  name: 'hotspot',\n  type: 'sanity.imageHotspot',\n}\n\nexport const CROP_FIELD = {\n  name: 'crop',\n  type: 'sanity.imageCrop',\n}\n","import {pick, startCase} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {lazyGetter} from './utils'\nimport {ASSET_FIELD, HOTSPOT_FIELD, CROP_FIELD} from './image/fieldDefs'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst IMAGE_CORE = {\n  name: 'image',\n  title: 'Image',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const ImageType = {\n  get() {\n    return IMAGE_CORE\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const options = {...(rawSubTypeDef.options || DEFAULT_OPTIONS)}\n\n    let hotspotFields = [HOTSPOT_FIELD, CROP_FIELD]\n    if (!options.hotspot) {\n      hotspotFields = hotspotFields.map((field) => ({...field, hidden: true}))\n    }\n\n    const fields = [ASSET_FIELD, ...hotspotFields, ...(rawSubTypeDef.fields || [])]\n    const subTypeDef = {...rawSubTypeDef, fields}\n\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), subTypeDef, {\n      type: IMAGE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          fieldset,\n          isCustomized: Boolean(rawSubTypeDef.fields),\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"image\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick, startCase} from 'lodash'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\nimport {createFieldsets} from './object'\n\nexport const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: {type: 'sanity.fileAsset'},\n}\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst FILE_CORE = {\n  name: 'file',\n  title: 'File',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {\n  accept: '',\n}\n\nexport const FileType = {\n  get() {\n    return FILE_CORE\n  },\n  extend(rawSubTypeDef, createMemberType) {\n    const options = {...(rawSubTypeDef.options || DEFAULT_OPTIONS)}\n\n    const fields = [ASSET_FIELD, ...(rawSubTypeDef.fields || [])]\n\n    const subTypeDef = {...rawSubTypeDef, fields}\n\n    const parsed = Object.assign(pick(FILE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: FILE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : ''),\n      options: options,\n      fields: subTypeDef.fields.map((fieldDef) => {\n        const {name, fieldset, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          fieldset,\n          isCustomized: Boolean(rawSubTypeDef.fields),\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"file\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {ObjectType} from './object'\n\nconst DOCUMENT_CORE = {\n  name: 'document',\n  title: 'Document',\n  type: null,\n  jsonType: 'object',\n}\n\nexport const DocumentType = {\n  get() {\n    return DOCUMENT_CORE\n  },\n  extend: ObjectType.extend,\n}\n","import {pick} from 'lodash'\nimport {lazyGetter} from './utils'\nimport {DEFAULT_OVERRIDEABLE_FIELDS} from './constants'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ARRAY_CORE = {\n  name: 'array',\n  type: null,\n  jsonType: 'array',\n  of: [],\n}\n\nexport const ArrayType = {\n  get() {\n    return ARRAY_CORE\n  },\n  extend(subTypeDef, createMemberType) {\n    const parsed = Object.assign(pick(ARRAY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ARRAY_CORE,\n    })\n    lazyGetter(parsed, 'of', () => {\n      return subTypeDef.of.map((ofTypeDef) => {\n        return createMemberType(ofTypeDef)\n      })\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const DEFAULT_LINK_ANNOTATION = {\n  type: 'object',\n  name: 'link',\n  title: 'Link',\n  i18nTitleKey: 'inputs.portable-text.annotation.link',\n  options: {\n    modal: {type: 'popover'},\n  },\n  fields: [\n    {\n      name: 'href',\n      type: 'url',\n      title: 'Link',\n      description: 'A valid web, email, phone, or relative link.',\n      validation: (Rule) =>\n        Rule.uri({\n          scheme: ['http', 'https', 'tel', 'mailto'],\n          allowRelative: true,\n        }),\n    },\n  ],\n}\n\nexport const DEFAULT_TEXT_FIELD = {\n  type: 'text',\n  name: 'text',\n  title: 'Text',\n}\n\nexport const DEFAULT_MARKS_FIELD = {\n  name: 'marks',\n  type: 'array',\n  of: [{type: 'string'}],\n  title: 'Marks',\n}\n\nexport const LIST_TYPES = {\n  bullet: {\n    title: 'Bulleted list',\n    value: 'bullet',\n    i18nTitleKey: 'inputs.portable-text.list-type.bullet',\n  },\n  numbered: {\n    title: 'Numbered list',\n    value: 'number',\n    i18nTitleKey: 'inputs.portable-text.list-type.number',\n  },\n}\n\nexport const DEFAULT_LIST_TYPES = [LIST_TYPES.bullet, LIST_TYPES.numbered]\n\nexport const BLOCK_STYLES = {\n  normal: {title: 'Normal', value: 'normal', i18nTitleKey: 'inputs.portable-text.style.normal'},\n  h1: {title: 'Heading 1', value: 'h1', i18nTitleKey: 'inputs.portable-text.style.h1'},\n  h2: {title: 'Heading 2', value: 'h2', i18nTitleKey: 'inputs.portable-text.style.h2'},\n  h3: {title: 'Heading 3', value: 'h3', i18nTitleKey: 'inputs.portable-text.style.h3'},\n  h4: {title: 'Heading 4', value: 'h4', i18nTitleKey: 'inputs.portable-text.style.h4'},\n  h5: {title: 'Heading 5', value: 'h5', i18nTitleKey: 'inputs.portable-text.style.h5'},\n  h6: {title: 'Heading 6', value: 'h6', i18nTitleKey: 'inputs.portable-text.style.h6'},\n  blockquote: {\n    title: 'Quote',\n    value: 'blockquote',\n    i18nTitleKey: 'inputs.portable-text.style.quote',\n  },\n}\n\nexport const DEFAULT_BLOCK_STYLES = [\n  BLOCK_STYLES.normal,\n  BLOCK_STYLES.h1,\n  BLOCK_STYLES.h2,\n  BLOCK_STYLES.h3,\n  BLOCK_STYLES.h4,\n  BLOCK_STYLES.h5,\n  BLOCK_STYLES.h6,\n  BLOCK_STYLES.blockquote,\n]\n\nexport const DECORATOR_STRONG = {\n  title: 'Strong',\n  value: 'strong',\n  i18nTitleKey: 'inputs.portable-text.decorator.strong',\n}\nexport const DECORATOR_EMPHASIS = {\n  title: 'Italic',\n  value: 'em',\n  i18nTitleKey: 'inputs.portable-text.decorator.emphasis',\n}\nexport const DECORATOR_CODE = {\n  title: 'Code',\n  value: 'code',\n  i18nTitleKey: 'inputs.portable-text.decorator.code',\n}\nexport const DECORATOR_UNDERLINE = {\n  title: 'Underline',\n  value: 'underline',\n  i18nTitleKey: 'inputs.portable-text.decorator.underline',\n}\nexport const DECORATOR_STRIKE = {\n  title: 'Strike',\n  value: 'strike-through',\n  i18nTitleKey: 'inputs.portable-text.decorator.strike-through',\n}\n\nexport const DECORATORS = {\n  strong: DECORATOR_STRONG,\n  em: DECORATOR_EMPHASIS,\n  code: DECORATOR_CODE,\n  underline: DECORATOR_UNDERLINE,\n  strikeThrough: DECORATOR_STRIKE,\n}\n\nexport const DEFAULT_DECORATORS = [\n  DECORATORS.strong,\n  DECORATORS.em,\n  DECORATORS.code,\n  DECORATORS.underline,\n  DECORATORS.strikeThrough,\n]\n","import {pick} from 'lodash'\nimport {lazyGetter} from '../utils'\nimport createPreviewGetter from '../../preview/createPreviewGetter'\n\nimport {\n  BLOCK_STYLES,\n  DEFAULT_BLOCK_STYLES,\n  DEFAULT_LINK_ANNOTATION,\n  DEFAULT_LIST_TYPES,\n  DEFAULT_MARKS_FIELD,\n  DEFAULT_TEXT_FIELD,\n  DEFAULT_DECORATORS,\n} from './defaults'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst BLOCK_CORE = {\n  name: 'block',\n  title: 'Block',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const BlockType = {\n  get() {\n    return BLOCK_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {marks, styles, lists, of, ...rest} = subTypeDef\n\n    const childrenField = createChildrenField(marks, of)\n    const styleField = createStyleField(styles)\n    const listItemField = createListItemField(lists)\n\n    const markDefsField = {\n      name: 'markDefs',\n      title: 'Mark definitions',\n      type: 'array',\n      of: marks?.annotations || DEFAULT_ANNOTATIONS,\n    }\n\n    const levelField = {\n      name: 'level',\n      title: 'Indentation',\n      type: 'number',\n    }\n\n    // NOTE: if you update this (EVEN THE ORDER OF FIELDS) you _NEED TO_ also\n    // update `BlockSchemaType`, `isBlockSchemaType` and similar in `@sanity/types`\n    const fields = [childrenField, styleField, listItemField, markDefsField, levelField].concat(\n      subTypeDef.fields || [],\n    )\n\n    const parsed = Object.assign(pick(BLOCK_CORE, INHERITED_FIELDS), rest, {\n      type: BLOCK_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"block\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nfunction ensureNormalStyle(styles) {\n  return styles.some((style) => style.value === 'normal')\n    ? styles\n    : [BLOCK_STYLES.normal, ...styles]\n}\n\nfunction createStyleField(styles) {\n  return {\n    name: 'style',\n    title: 'Style',\n    type: 'string',\n    options: {\n      list: ensureNormalStyle(styles || DEFAULT_BLOCK_STYLES),\n    },\n  }\n}\n\nfunction createListItemField(lists) {\n  return {\n    name: 'listItem',\n    title: 'List type',\n    type: 'string',\n    options: {\n      list: lists || DEFAULT_LIST_TYPES,\n    },\n  }\n}\n\nconst DEFAULT_ANNOTATIONS = [DEFAULT_LINK_ANNOTATION]\n\nfunction createChildrenField(marks, of = []) {\n  return {\n    name: 'children',\n    title: 'Content',\n    type: 'array',\n    of: [\n      {\n        type: 'span',\n        fields: [DEFAULT_TEXT_FIELD, DEFAULT_MARKS_FIELD],\n        annotations: marks && marks.annotations ? marks.annotations : DEFAULT_ANNOTATIONS,\n        decorators: marks && marks.decorators ? marks.decorators : DEFAULT_DECORATORS,\n      },\n      ...of.filter((memberType) => memberType.type !== 'span'),\n    ],\n  }\n}\n","import {pick} from 'lodash'\nimport {lazyGetter} from '../utils'\nimport createPreviewGetter from '../../preview/createPreviewGetter'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst SPAN_CORE = {\n  name: 'span',\n  title: 'Span',\n  type: null,\n  jsonType: 'object',\n}\n\nconst MARKS_FIELD = {\n  name: 'marks',\n  title: 'Marks',\n  type: 'array',\n  of: [{type: 'string'}],\n}\n\nconst TEXT_FIELD = {\n  name: 'text',\n  title: 'Text',\n  type: 'string',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const SpanType = {\n  get() {\n    return SPAN_CORE\n  },\n  extend(subTypeDef, extendMember) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {annotations = [], marks = []} = subTypeDef\n\n    // NOTE: if you update this please also update `SpanSchemaType` in`@sanity/types`\n    const fields = [MARKS_FIELD, TEXT_FIELD]\n\n    const parsed = Object.assign(pick(SPAN_CORE, INHERITED_FIELDS), subTypeDef, {\n      type: SPAN_CORE,\n      options: options,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'annotations', () => annotations.map(extendMember))\n    lazyGetter(parsed, 'marks', () => marks.map(extendMember))\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    return subtype(parsed)\n\n    function subtype(parent) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"span\"')\n          }\n          const current = Object.assign({}, parent, pick(extensionDef, INHERITED_FIELDS), {\n            type: parent,\n          })\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import * as types from './types'\n\nfunction compileRegistry(schemaDef) {\n  const registry = Object.assign(Object.create(null), types)\n\n  const defsByName = schemaDef.types.reduce((acc, def) => {\n    if (acc[def.name]) {\n      throw new Error(`Duplicate type name added to schema: ${def.name}`)\n    }\n    acc[def.name] = def\n    return acc\n  }, {})\n\n  schemaDef.types.forEach(add)\n\n  return registry\n\n  function ensure(typeName) {\n    if (!registry[typeName]) {\n      if (!defsByName[typeName]) {\n        throw new Error(`Unknown type: ${typeName}`)\n      }\n      add(defsByName[typeName])\n    }\n  }\n\n  function extendMember(memberDef) {\n    ensure(memberDef.type)\n    return registry[memberDef.type].extend(memberDef, extendMember).get()\n  }\n\n  function add(typeDef) {\n    ensure(typeDef.type)\n    if (registry[typeDef.name]) {\n      return\n    }\n    registry[typeDef.name] = registry[typeDef.type].extend(typeDef, extendMember)\n  }\n}\n\n/**\n * @beta\n */\nexport class Schema {\n  _original: {name: string; types: any[]}\n  _registry: {[typeName: string]: any}\n\n  static compile(schemaDef: any): Schema {\n    return new Schema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    this._original = schemaDef\n    this._registry = compileRegistry(schemaDef)\n  }\n\n  get name(): string {\n    return this._original.name\n  }\n\n  get(name: string): any {\n    return this._registry[name] && this._registry[name].get()\n  }\n\n  has(name: string): boolean {\n    return name in this._registry\n  }\n\n  getTypeNames(): string[] {\n    return Object.keys(this._registry)\n  }\n}\n\n/**\n * @deprecated Use `import {Schema} from \"@sanity/schema\"` instead\n */\nexport class DeprecatedDefaultSchema extends Schema {\n  static compile(schemaDef: any): Schema {\n    return new DeprecatedDefaultSchema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    super(schemaDef)\n\n    const stack = new Error(\n      'The default export of `@sanity/schema` is deprecated. Use `import {Schema} from \"@sanity/schema\"` instead.',\n    ).stack.replace(/^Error/, 'Warning')\n\n    // eslint-disable-next-line no-console\n    console.warn(stack)\n  }\n}\n","import {Schema as NamedSchema, DeprecatedDefaultSchema} from '../legacy/Schema'\n\nexport default DeprecatedDefaultSchema\nexport const Schema = NamedSchema\nexport {type SchemaValidationResult} from '../sanity/typedefs'\n"],"names":["DEFAULT_OVERRIDEABLE_FIELDS","OVERRIDABLE_FIELDS","ANY_CORE","name","type","jsonType","AnyType","get","extend","subTypeDef","extendMember","parsed","Object","assign","pick","of","map","fieldDef","omit","subtype","parent","extensionDef","Error","current","primitivePreview","prepare","val","title","String","STRING_CORE","StringType","preview","TEXT_CORE","TextType","DATETIME_CORE","DateTimeType","DATE_CORE","DateType","BOOLEAN_CORE","BooleanType","URL_CORE","UrlType","EMAIL_CORE","EmailType","NUMBER_CORE","NumberType","lazyGetter","target","key","getter","config","arguments","length","undefined","defineProperty","configurable","enumerable","value","writable","Boolean","isEmpty","object","hasOwnProperty","_stringify","options","depth","maxDepth","Array","isArray","capLength","Math","max","maxBreadth","asString","slice","item","index","concat","join","keys","filter","ignoreKeys","includes","stringify","opts","OPTIONS","maxEntries","createFallbackPrepare","fieldNames","isBlockField","field","some","member","TITLE_CANDIDATES","DESCRIPTION_CANDIDATES","fieldHasReferenceTo","refType","arrify","to","memberTypeDef","isImageAssetField","resolveImageAssetPath","typeDef","fields","imageAssetField","find","fieldWithImageAsset","isFileAssetField","resolveFileAssetPath","assetField","fieldWithFileAsset","guessPreviewFields","rawObjectTypeDef","objectTypeDef","stringFieldNames","blockFieldNames","titleField","candidate","descField","mediaField","imageAssetPath","fileAssetPath","fieldMapping","reduce","acc","fieldName","select","omitBy","description","media","isUndefined","warnIfPreviewOnOptions","console","warn","warnIfPreviewHasFields","parseSelection","selection","parsePreview","createPreviewGetter","previewGetter","guessPreviewConfig","CANDIDATES","PRIMITIVES","isPrimitive","guessOrderingConfig","candidates","i18n","ns","capitalize","startCase","by","direction","normalizeSearchConfigs","configs","conf","isPlainObject","weight","path","toPath","mapWith","ObjectType","rawSubTypeDef","createMemberType","orderings","fieldset","group","rest","compiledField","createFieldsets","createFieldsGroups","userProvidedSearchConfig","__experimental_search","entry","resolveSearchConfig","fieldsetsByName","fieldsets","Set","add","single","push","from","groupsByName","numDefaultGroups","groups","default","forEach","fieldGroupNames","castArray","fieldGroupName","currentGroup","flatMap","REF_FIELD","WEAK_FIELD","REFERENCE_FIELDS","REFERENCE_CORE","humanize","humanize$1","arr","conjunction","len","first","last","buildTitle","toType","toLowerCase","ReferenceType","DATASET_FIELD","PROJECT_ID_FIELD","hidden","CROSS_DATASET_REFERENCE_CORE","CrossDatasetReferenceType","resolveSearchConfigForBaseFieldPaths","ASSET_FIELD","HOTSPOT_FIELD","CROP_FIELD","IMAGE_CORE","DEFAULT_OPTIONS","ImageType","hotspotFields","hotspot","isCustomized","FILE_CORE","accept","FileType","DOCUMENT_CORE","DocumentType","ARRAY_CORE","ArrayType","ofTypeDef","DEFAULT_LINK_ANNOTATION","i18nTitleKey","modal","validation","Rule","uri","scheme","allowRelative","DEFAULT_TEXT_FIELD","DEFAULT_MARKS_FIELD","LIST_TYPES","bullet","numbered","DEFAULT_LIST_TYPES","BLOCK_STYLES","normal","h1","h2","h3","h4","h5","h6","blockquote","DEFAULT_BLOCK_STYLES","DECORATOR_STRONG","DECORATOR_EMPHASIS","DECORATOR_CODE","DECORATOR_UNDERLINE","DECORATOR_STRIKE","DECORATORS","strong","em","code","underline","strikeThrough","DEFAULT_DECORATORS","INHERITED_FIELDS","BLOCK_CORE","BlockType","marks","styles","lists","childrenField","createChildrenField","styleField","createStyleField","listItemField","createListItemField","markDefsField","annotations","DEFAULT_ANNOTATIONS","levelField","ensureNormalStyle","style","list","decorators","memberType","SPAN_CORE","MARKS_FIELD","TEXT_FIELD","SpanType","compileRegistry","schemaDef","registry","create","types","defsByName","def","ensure","typeName","memberDef","Schema$1","Schema","compile","constructor","_original","_registry","has","getTypeNames","DeprecatedDefaultSchema","stack","replace","NamedSchema"],"mappings":"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"}