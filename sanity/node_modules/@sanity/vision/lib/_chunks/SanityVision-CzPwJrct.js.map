{"version":3,"file":"SanityVision-CzPwJrct.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/validateApiVersion.ts","../../src/util/prefixApiVersion.ts","../../src/util/tryParseParams.ts","../../src/util/encodeQueryString.ts","../../src/perspectives.ts","../../src/util/resizeObserver.ts","../../src/components/ParamsEditor.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21', 'v2022-03-07']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import React, {useEffect, useState} from 'react'\nimport {Spinner} from '@sanity/ui'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {history, defaultKeymap, historyKeymap} from '@codemirror/commands'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {closeBrackets} from '@codemirror/autocomplete'\nimport {\n  lineNumbers,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  drawSelection,\n  highlightActiveLine,\n  keymap,\n} from '@codemirror/view'\nimport {\n  indentOnInput,\n  syntaxHighlighting,\n  defaultHighlightStyle,\n  bracketMatching,\n} from '@codemirror/language'\n\nexport const codemirrorExtensions = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of([defaultKeymap, historyKeymap].flat().filter(Boolean)),\n]\n","import {rem, Theme} from '@sanity/ui'\nimport {EditorView} from '@codemirror/view'\nimport {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {useMemo} from 'react'\nimport {hues} from '@sanity/color'\nimport {tags as t} from '@lezer/highlight'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import React from 'react'\nimport {useTheme} from '@sanity/ui'\nimport CodeMirror, {ReactCodeMirrorProps} from '@uiw/react-codemirror'\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `sanityVision:${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import JSON5 from 'json5'\nimport {TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import type {ClientPerspective} from '@sanity/client'\n\nexport const PERSPECTIVES = ['raw', 'previewDrafts', 'published'] satisfies ClientPerspective[]\nexport const DEFAULT_PERSPECTIVE = PERSPECTIVES[0]\n\nexport function isPerspective(p: string): p is ClientPerspective {\n  return PERSPECTIVES.includes(p as ClientPerspective)\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {debounce} from 'lodash'\nimport {TFunction, useTranslation} from 'sanity'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return <VisionCodeMirror value={props.value || defaultValue} onChange={handleChange} />\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import React from 'react'\nimport HLRU from 'hashlru'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {Code} from '@sanity/ui'\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = HLRU(50000)\n\nexport function ResultView(props: {data: unknown}) {\n  const {data} = props\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JSONInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {Code} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import React from 'react'\nimport {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import React from 'react'\nimport {Stack} from '@sanity/ui'\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import React, {useCallback, useState} from 'react'\nimport {Popover, Stack, Inline, Text, Card, Badge, Button, useClickOutside} from '@sanity/ui'\nimport {HelpCircleIcon} from '@sanity/icons'\nimport {useTranslation} from 'sanity'\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const [buttonEl, setButtonEl] = useState<HTMLElement | null>(null)\n  const [popoverEl, setPopoverEl] = useState<HTMLElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n  const handleClickOutside = useCallback(() => setOpen(false), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutside(handleClickOutside, [buttonEl, popoverEl])\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n              <Badge tone=\"primary\">{t('label.new')}</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={setPopoverEl}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={setButtonEl}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import styled, {css} from 'styled-components'\nimport {Card, Box, Flex, Label, rem} from '@sanity/ui'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const TimingsFooter = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport React, {ChangeEvent, type RefObject} from 'react'\nimport SplitPane from '@rexxars/react-split-pane'\nimport type {ListenEvent, MutationEvent, SanityClient, ClientPerspective} from '@sanity/client'\nimport {PlayIcon, StopIcon, CopyIcon, ErrorOutlineIcon} from '@sanity/icons'\nimport isHotkey from 'is-hotkey'\nimport {\n  Flex,\n  Card,\n  Stack,\n  Box,\n  Hotkeys,\n  Select,\n  Text,\n  TextInput,\n  Tooltip,\n  Grid,\n  Button,\n  ToastContextValue,\n  Inline,\n} from '@sanity/ui'\nimport {TFunction} from 'sanity'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {getLocalStorage, LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {PERSPECTIVES, DEFAULT_PERSPECTIVE, isPerspective} from '../perspectives'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport type {VisionProps} from '../types'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {ResultView} from './ResultView'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {\n  Root,\n  Header,\n  SplitpaneContainer,\n  QueryCopyLink,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  StyledLabel,\n  ResultOuterContainer,\n  ResultInnerContainer,\n  ResultContainer,\n  Result,\n  ControlsContainer,\n  TimingsFooter,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: ClientPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends React.PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement>\n  _queryEditorContainer: RefObject<HTMLDivElement>\n  _paramsEditorContainer: RefObject<HTMLDivElement>\n  _operationUrlElement: RefObject<HTMLInputElement>\n  _customApiVersionElement: RefObject<HTMLInputElement>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const lastQuery = this._localStorage.get('query', '')\n    const lastParams = this._localStorage.get('params', '{\\n  \\n}')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    this._visionRoot = React.createRef()\n    this._operationUrlElement = React.createRef()\n    this._queryEditorContainer = React.createRef()\n    this._paramsEditorContainer = React.createRef()\n    this._customApiVersionElement = React.createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: perspective,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective = PERSPECTIVES.includes(parts.options.perspective as ClientPerspective)\n      ? (parts.options.perspective as ClientPerspective)\n      : undefined\n\n    evt.preventDefault()\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.params,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    if (!isPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: this.state.perspective,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective = this.state.perspective\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t} = this.props\n    const {\n      error,\n      queryResult,\n      url,\n      queryInProgress,\n      listenInProgress,\n      paneSizeOptions,\n      queryTime,\n      e2eTime,\n      listenMutations,\n      apiVersion,\n      dataset,\n      customApiVersion,\n      isValidApiVersion,\n      hasValidParams,\n      paramsError,\n      perspective,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {PERSPECTIVES.map((p) => (\n                    <option key={p}>{p}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split={'horizontal'}\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror value={this.state.query} onChange={this.handleQueryChange} />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor value={this.state.rawParams} onChange={this.handleParamsChange} />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <TimingsFooter>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n              </TimingsFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import type {SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {useToast} from '@sanity/ui'\nimport React from 'react'\nimport {useTranslation} from 'sanity'\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport type {VisionProps} from '../types'\nimport {visionLocaleNamespace} from '../i18n'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return <DelayedSpinner />\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","import React from 'react'\nimport {type Tool, useClient} from 'sanity'\nimport {type VisionConfig} from './types'\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return <VisionContainer client={client} config={config} />\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","show","setShow","useState","useEffect","timer","setTimeout","delay","clearTimeout","jsx","Spinner","muted","size","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","cmTheme","useMemo","createTheme","cmHighlight","createHighlight","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","concat","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","tags","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","_a","EditorRoot","styled","default","div","__template","_ref","space","_ref2","_ref3","VisionCodeMirror","sanityTheme","useTheme","children","CodeMirror","basicSetup","extensions","isPlainObject","obj","Object","prototype","toString","call","hasLocalStorage","supportsLocalStorage","getLocalStorage","storageKey","loadedState","get","set","merge","key","defaultVal","state","ensureState","value","localStorage","setItem","JSON","stringify","loadState","stored","parse","getItem","err","mod","removeItem","parseApiQueryString","qs","params","options","entries","query","validateApiVersion","apiVersion","parseableApiVersion","replace","trim","toUpperCase","isValidApiVersion","length","test","isNaN","Date","prefixApiVersion","version","tryParseParams","val","parsed","JSON5","Array","isArray","message","encodeQueryString","arguments","undefined","searchParams","URLSearchParams","PERSPECTIVES","DEFAULT_PERSPECTIVE","isPerspective","p","includes","RO","document","ResizeObserverPolyfill","window","ResizeObserver","defaultValue","ParamsEditor","onChange","useTranslation","visionLocaleNamespace","raw","error","valid","eventFromValue","isValid","setValid","init","setInit","handleChangeRaw","useCallback","newValue","event","handleChange","debounce","parsedParams","Error","validationError","ResultViewWrapper","_ref4","css","lru","HLRU","ResultView","data","isRecord","JSONInspector","search","isExpanded","onClick","toggleExpanded","Code","language","keyPath","depthLimit","cached","segments","split","some","isArrayKeyOverLimit","path","current","numeric","segment","limit","parseInt","ErrorCode","_ref5","critical","QueryErrorDetails","_ref6","details","mapToLegacyDetails","line","dashLine","column","columnEnd","Box","marginTop","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","jsxs","Stack","_b","PerspectivePopoverContent","PerspectivePopoverLink","a","PerspectivePopover","open","setOpen","buttonEl","setButtonEl","popoverEl","setPopoverEl","handleClick","o","handleClickOutside","useClickOutside","Popover","content","Inline","Text","weight","Badge","tone","Card","href","target","placement","portal","padding","ref","Button","icon","HelpCircleIcon","mode","selected","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","Root","Flex","displayName","Header","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","_ref7","$isInvalid","Result","TimingsFooter","TimingsCard","TimingsTextContainer","_ref8","text","ascenderHeight","descenderHeight","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","allowResize","minSize","Math","min","max","maxSize","VisionGui","React","PureComponent","constructor","client","datasets","config","_localStorage","projectId","lastQuery","lastParams","defaultDataset","dataset","defaultApiVersion","defaultPerspective","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","evt","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","console","warn","preventDefault","toast","push","closable","id","status","title","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","toLowerCase","focus","type","_ref9","isWithinRoot","stopPropagation","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","_ref10","el","select","execCommand","render","hasResult","direction","sizing","overflow","paddingX","paddingY","Grid","columns","paddingTop","paddingBottom","Select","map","ds","textOverflow","TextInput","customValidity","maxLength","flex","gap","readOnly","Tooltip","CopyIcon","SplitPane","primary","display","marginX","ErrorOutlineIcon","radius","disabled","justify","Hotkeys","keys","width","StopIcon","PlayIcon","marginLeft","align","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","SanityVision","useClient","tool"],"mappings":"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"}